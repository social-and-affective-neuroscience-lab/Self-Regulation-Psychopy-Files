10.0493 	WARNING 	User requested fullscreen with size [1024  768], but screen is actually [1920, 1200]. Using actual size
10.8151 	EXP 	Created window1 = Window(allowGUI=True, allowStencil=False, args=UNKNOWN, autoLog=True, bitsMode=UNKNOWN, blendMode='avg', color=array([0., 0., 0.]), colorSpace='rgb', fullscr=<method-wrapper '__getattribute__' of attributeSetter object at 0x000001BC5C9138D0>, gamma=None, gammaErrorPolicy='raise', kwargs=UNKNOWN, lms=UNKNOWN, monitor=<psychopy.monitors.calibTools.Monitor object at 0x000001BC5CBF00F0>, multiSample=False, name='window1', numSamples=2, pos=[0.0, 0.0], screen=0, size=array([1920, 1200]), stereo=False, units='height', useFBO=True, useRetina=False, viewOri=0.0, viewPos=None, viewScale=None, waitBlanking=True, winType='pyglet')
10.8151 	EXP 	window1: recordFrameIntervals = False
10.9814 	EXP 	window1: recordFrameIntervals = True
11.1649 	EXP 	window1: recordFrameIntervals = False
12.3293 	EXP 	Created InstText = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=1.0, italic=False, languageStyle='LTR', name='InstText', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
12.3375 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
12.3483 	EXP 	Created practiceQs = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.06, italic=False, languageStyle='LTR', name='practiceQs', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
12.3499 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
12.3639 	EXP 	Created cue = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='cue', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.5)
12.3655 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
12.3659 	EXP 	Created conBlank = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-1.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='conBlank', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
12.3751 	EXP 	Created RemText = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.045, italic=False, languageStyle='LTR', name='RemText', opacity=1.0, ori=0, pos=array([0.  , 0.32]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.5)
12.3782 	EXP 	Created leftText = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.045, italic=False, languageStyle='LTR', name='leftText', opacity=1.0, ori=0, pos=array([0.45, 0.05]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
12.3814 	EXP 	Created rightText = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.045, italic=False, languageStyle='LTR', name='rightText', opacity=1.0, ori=0, pos=array([ 0.5 , -0.04]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
12.3935 	EXP 	Created Yes = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='Yes', opacity=1.0, ori=0, pos=array([ 0.  , -0.33]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=2.5)
12.3968 	EXP 	Created No = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-6.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='No', opacity=1.0, ori=0, pos=array([ 0.  , -0.41]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
12.4077 	EXP 	Created Question = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-8.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.055, italic=False, languageStyle='LTR', name='Question', opacity=1.0, ori=0, pos=array([ 0. , -0.2]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
12.4110 	EXP 	Created sureGroup = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-9.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='sureGroup', opacity=1.0, ori=0, pos=array([-0.5,  0. ]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
12.4131 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
12.4164 	EXP 	Created FeedbackVar = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=1.0, italic=False, languageStyle='LTR', name='FeedbackVar', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
12.4180 	EXP 	Created isi_2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi_2', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
12.4612 	EXP 	Created instructions2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.08, italic=False, languageStyle='LTR', name='instructions2', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1)
12.4629 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
12.4659 	EXP 	Created text = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.06, italic=False, languageStyle='LTR', name='text', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
12.4676 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
12.4719 	EXP 	Created cue = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='cue', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.5)
12.4735 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
12.4739 	EXP 	Created conBlank2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-1.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='conBlank2', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
12.4768 	EXP 	Created RemText2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.045, italic=False, languageStyle='LTR', name='RemText2', opacity=1.0, ori=0, pos=array([0.  , 0.32]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.5)
12.4805 	EXP 	Created leftText2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.045, italic=False, languageStyle='LTR', name='leftText2', opacity=1.0, ori=0, pos=array([0.4 , 0.05]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
12.4836 	EXP 	Created rightText2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.045, italic=False, languageStyle='LTR', name='rightText2', opacity=1.0, ori=0, pos=array([ 0.4 , -0.04]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
12.4867 	EXP 	Created yes2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='yes2', opacity=1.0, ori=0, pos=array([ 0.  , -0.33]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
12.4900 	EXP 	Created no2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-6.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='no2', opacity=1.0, ori=0, pos=array([ 0.  , -0.41]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
12.4931 	EXP 	Created Question2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-8.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.055, italic=False, languageStyle='LTR', name='Question2', opacity=1.0, ori=0, pos=array([ 0. , -0.2]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
12.4962 	EXP 	Created text_2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-9.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.045, italic=False, languageStyle='LTR', name='text_2', opacity=1.0, ori=0, pos=array([-0.5,  0. ]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
12.4979 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
12.5010 	EXP 	Created FeedbackVar = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=1.0, italic=False, languageStyle='LTR', name='FeedbackVar', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
12.5464 	EXP 	Created TY = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='TY', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1)
12.5690 	EXP 	Imported MoralSelfRegInst.xlsx as conditions, 7 conditions, 1 params
12.5692 	EXP 	Created sequence: sequential, trialTypes=7, nReps=1, seed=None
12.5694 	EXP 	New trial (rep=0, index=0): OrderedDict([('Instructions', 'In this study you will be asked to evaluate a number of moral dilemmas under various conditions. \n\nYou will be presented with 10 different scenario contexts and will respond to 10 conditions for each one.\n\nFor each scenario, you will proceed through four screens. The first three screens will start to describe a situation that you are hypothetically faced with and an action that you could perform in response to that situation. \n\nWhen you are done reading each screen, you can press SPACE to move on to the next one.\n\nHowever, please try your best to get the fullest understanding of the scenario as described thus far before moving on to the next screen.')])
15.4253 	EXP 	InstText: color = 'white (named)'
15.4253 	EXP 	InstText: pos = array([0., 0.])
15.4253 	EXP 	InstText: text = 'In this study you will be asked to evaluate a number of moral dilemmas under various conditions. \n\nYou will be presented with 10 different scenario contexts and will respond to 10 conditions for each one.\n\nFor each scenario, you will proceed through four screens. The first three screens will start to describe a situation that you are hypothetically faced with and an action that you could perform in response to that situation. \n\nWhen you are done reading each screen, you can press SPACE to move on to the next one.\n\nHowever, please try your best to get the fullest understanding of the scenario as described thus far before moving on to the next screen.'
15.4253 	EXP 	InstText: font = 'Arial'
15.4253 	EXP 	InstText: height = 0.04
15.4253 	EXP 	InstText: autoDraw = True
15.4253 	EXP 	InstText: text = 'In this study you will be asked to evaluate a number of moral dilemmas under various conditions. \n\nYou will be presented with 10 different scenario contexts and will respond to 10 conditions for each one.\n\nFor each scenario, you will proceed through four screens. The first three screens will start to describe a situation that you are hypothetically faced with and an action that you could perform in response to that situation. \n\nWhen you are done reading each screen, you can press SPACE to move on to the next one.\n\nHowever, please try your best to get the fullest understanding of the scenario as described thus far before moving on to the next screen.'
19.1924 	DATA 	Keypress: space
19.2090 	EXP 	New trial (rep=0, index=1): OrderedDict([('Instructions', 'The scenario description will include all the information you need to make your decision EXCEPT that it will not explicitly state the values for two features of the dilemma:\n\na) a number of people involved in part of the scenario, and \n\nb) a likelihood that something will happen\n\nYou will be evaluating this scenario given a number of variations of these features.\n\nThe fourth and final screen will provide you with the prompt that you will be answering for each of these variations - namely, whether or not it is morally acceptable for you to perform the action in question.')])
19.2976 	EXP 	InstText: autoDraw = False
19.2976 	EXP 	InstText: color = 'white (named)'
19.2976 	EXP 	InstText: pos = array([0., 0.])
19.2976 	EXP 	InstText: text = 'The scenario description will include all the information you need to make your decision EXCEPT that it will not explicitly state the values for two features of the dilemma:\n\na) a number of people involved in part of the scenario, and \n\nb) a likelihood that something will happen\n\nYou will be evaluating this scenario given a number of variations of these features.\n\nThe fourth and final screen will provide you with the prompt that you will be answering for each of these variations - namely, whether or not it is morally acceptable for you to perform the action in question.'
19.2976 	EXP 	InstText: font = 'Arial'
19.2976 	EXP 	InstText: height = 0.04
19.2976 	EXP 	InstText: autoDraw = True
19.2976 	EXP 	InstText: text = 'The scenario description will include all the information you need to make your decision EXCEPT that it will not explicitly state the values for two features of the dilemma:\n\na) a number of people involved in part of the scenario, and \n\nb) a likelihood that something will happen\n\nYou will be evaluating this scenario given a number of variations of these features.\n\nThe fourth and final screen will provide you with the prompt that you will be answering for each of these variations - namely, whether or not it is morally acceptable for you to perform the action in question.'
19.5753 	EXP 	New trial (rep=0, index=2): OrderedDict([('Instructions', 'After you have understood the scenario context and the question you will be answering, you can press SPACE to move on to the individual trials that will fill these gaps for you in the scenario.\n\nBefore you do so, please try your best to hold in mind what the action is that you will be evaluating across trials, as you will not be reminded of this after this screen.\n\nFirst, you will see a "+" in the middle of the screen. Any time that this is up, all you need to do is fixate on the "+" and prepare to respond to the next trial. \n\nNext, you will see text appear indicating the missing information. You should then evaluate the action in question in the context of these values given, and make a judgment of its moral acceptibility.\n\nYou will then indicate the course of action you would like to take in each scenario; by pressing either \'y\' on your keyboard to indicate \'Yes\', or \'n\' to indicate \'No.\'\n')])
19.7086 	DATA 	Keypress: space
19.7144 	EXP 	InstText: autoDraw = False
19.7144 	EXP 	InstText: color = 'white (named)'
19.7144 	EXP 	InstText: pos = array([0., 0.])
19.7144 	EXP 	InstText: text = 'After you have understood the scenario context and the question you will be answering, you can press SPACE to move on to the individual trials that will fill these gaps for you in the scenario.\n\nBefore you do so, please try your best to hold in mind what the action is that you will be evaluating across trials, as you will not be reminded of this after this screen.\n\nFirst, you will see a "+" in the middle of the screen. Any time that this is up, all you need to do is fixate on the "+" and prepare to respond to the next trial. \n\nNext, you will see text appear indicating the missing information. You should then evaluate the action in question in the context of these values given, and make a judgment of its moral acceptibility.\n\nYou will then indicate the course of action you would like to take in each scenario; by pressing either \'y\' on your keyboard to indicate \'Yes\', or \'n\' to indicate \'No.\'\n'
19.7144 	EXP 	InstText: font = 'Arial'
19.7144 	EXP 	InstText: height = 0.04
19.7144 	EXP 	InstText: autoDraw = True
19.7144 	EXP 	InstText: text = 'After you have understood the scenario context and the question you will be answering, you can press SPACE to move on to the individual trials that will fill these gaps for you in the scenario.\n\nBefore you do so, please try your best to hold in mind what the action is that you will be evaluating across trials, as you will not be reminded of this after this screen.\n\nFirst, you will see a "+" in the middle of the screen. Any time that this is up, all you need to do is fixate on the "+" and prepare to respond to the next trial. \n\nNext, you will see text appear indicating the missing information. You should then evaluate the action in question in the context of these values given, and make a judgment of its moral acceptibility.\n\nYou will then indicate the course of action you would like to take in each scenario; by pressing either \'y\' on your keyboard to indicate \'Yes\', or \'n\' to indicate \'No.\'\n'
19.7595 	EXP 	New trial (rep=0, index=3): OrderedDict([('Instructions', 'After you answer you will again see a "+" in the middle of the screen, followed by the next trial. This will occur for 10 different variations of each scenario. \n\nIt is important that you try your best to judge each trial in isolation, and avoid consideration of past responses for the current scenario or past scenarios.\n\nYou will only have 10 seconds to respond to each variation. If the "+" appears before you have responded, that means you are out of time. If this happens, do not attempt to respond. Simply look at the "+" and wait for the next trial. \n\nOnce you have pressed a button there is no way to go back to the previous screen. If you press the wrong button or if you press a button too soon, don\'t worry.')])
19.8599 	DATA 	Keypress: space
19.8653 	EXP 	InstText: autoDraw = False
19.8653 	EXP 	InstText: color = 'white (named)'
19.8653 	EXP 	InstText: pos = array([0., 0.])
19.8653 	EXP 	InstText: text = 'After you answer you will again see a "+" in the middle of the screen, followed by the next trial. This will occur for 10 different variations of each scenario. \n\nIt is important that you try your best to judge each trial in isolation, and avoid consideration of past responses for the current scenario or past scenarios.\n\nYou will only have 10 seconds to respond to each variation. If the "+" appears before you have responded, that means you are out of time. If this happens, do not attempt to respond. Simply look at the "+" and wait for the next trial. \n\nOnce you have pressed a button there is no way to go back to the previous screen. If you press the wrong button or if you press a button too soon, don\'t worry.'
19.8653 	EXP 	InstText: font = 'Arial'
19.8653 	EXP 	InstText: height = 0.04
19.8653 	EXP 	InstText: autoDraw = True
19.8653 	EXP 	InstText: text = 'After you answer you will again see a "+" in the middle of the screen, followed by the next trial. This will occur for 10 different variations of each scenario. \n\nIt is important that you try your best to judge each trial in isolation, and avoid consideration of past responses for the current scenario or past scenarios.\n\nYou will only have 10 seconds to respond to each variation. If the "+" appears before you have responded, that means you are out of time. If this happens, do not attempt to respond. Simply look at the "+" and wait for the next trial. \n\nOnce you have pressed a button there is no way to go back to the previous screen. If you press the wrong button or if you press a button too soon, don\'t worry.'
19.9423 	EXP 	New trial (rep=0, index=4): OrderedDict([('Instructions', 'Moral judgments can be difficult to make, and we understand that people sometimes change their minds about moral questions or feel conflicted about the answers they\'ve given. Don\'t think of your answers as "written in stone." All we want from you is a thoughtful first response.\n\nWhile we want your answers to be thoughtful, you may find that in some cases the right answer seems immediately obvious. If that happens, it\'s okay to answer quickly. There are no trick questions, and in every case we have done our best to make the relevant information as clear as possible. \n\nNote, however, that no two scenarios are the same, although many are similar to each other. To answer a question properly you will have to read it carefully because it will always be different in some way from the questions you have already answered. ')])
20.0637 	DATA 	Keypress: space
20.0696 	EXP 	InstText: autoDraw = False
20.0696 	EXP 	InstText: color = 'white (named)'
20.0696 	EXP 	InstText: pos = array([0., 0.])
20.0696 	EXP 	InstText: text = 'Moral judgments can be difficult to make, and we understand that people sometimes change their minds about moral questions or feel conflicted about the answers they\'ve given. Don\'t think of your answers as "written in stone." All we want from you is a thoughtful first response.\n\nWhile we want your answers to be thoughtful, you may find that in some cases the right answer seems immediately obvious. If that happens, it\'s okay to answer quickly. There are no trick questions, and in every case we have done our best to make the relevant information as clear as possible. \n\nNote, however, that no two scenarios are the same, although many are similar to each other. To answer a question properly you will have to read it carefully because it will always be different in some way from the questions you have already answered. '
20.0696 	EXP 	InstText: font = 'Arial'
20.0696 	EXP 	InstText: height = 0.04
20.0696 	EXP 	InstText: autoDraw = True
20.0696 	EXP 	InstText: text = 'Moral judgments can be difficult to make, and we understand that people sometimes change their minds about moral questions or feel conflicted about the answers they\'ve given. Don\'t think of your answers as "written in stone." All we want from you is a thoughtful first response.\n\nWhile we want your answers to be thoughtful, you may find that in some cases the right answer seems immediately obvious. If that happens, it\'s okay to answer quickly. There are no trick questions, and in every case we have done our best to make the relevant information as clear as possible. \n\nNote, however, that no two scenarios are the same, although many are similar to each other. To answer a question properly you will have to read it carefully because it will always be different in some way from the questions you have already answered. '
20.3593 	EXP 	New trial (rep=0, index=5): OrderedDict([('Instructions', "In some cases, you might feel that the situation we've described is not realistic. For example, it might say that if you do X, then Y will happen, and you might think that this is not realistic, that Y might not necessarily happen if you do X. If you find yourself having these sorts of doubts, you should suspend disbelief and assume that the situation really is the way it's described, even if it doesn't seem realistic to you.\n\nLikewise, you may feel that you need more information than is provided about the situation before you can give your answer. If this happens, you should make your best guess about what you think the situation is like without making any unneccessary assumptions. \n\nFor example, if it doesn't say that the other person in the situation is related to you, then you should assume that you and the other person are unrelated. ")])
20.4756 	DATA 	Keypress: space
20.4814 	EXP 	InstText: autoDraw = False
20.4814 	EXP 	InstText: color = 'white (named)'
20.4814 	EXP 	InstText: pos = array([0., 0.])
20.4814 	EXP 	InstText: text = "In some cases, you might feel that the situation we've described is not realistic. For example, it might say that if you do X, then Y will happen, and you might think that this is not realistic, that Y might not necessarily happen if you do X. If you find yourself having these sorts of doubts, you should suspend disbelief and assume that the situation really is the way it's described, even if it doesn't seem realistic to you.\n\nLikewise, you may feel that you need more information than is provided about the situation before you can give your answer. If this happens, you should make your best guess about what you think the situation is like without making any unneccessary assumptions. \n\nFor example, if it doesn't say that the other person in the situation is related to you, then you should assume that you and the other person are unrelated. "
20.4814 	EXP 	InstText: font = 'Arial'
20.4814 	EXP 	InstText: height = 0.04
20.4814 	EXP 	InstText: autoDraw = True
20.4814 	EXP 	InstText: text = "In some cases, you might feel that the situation we've described is not realistic. For example, it might say that if you do X, then Y will happen, and you might think that this is not realistic, that Y might not necessarily happen if you do X. If you find yourself having these sorts of doubts, you should suspend disbelief and assume that the situation really is the way it's described, even if it doesn't seem realistic to you.\n\nLikewise, you may feel that you need more information than is provided about the situation before you can give your answer. If this happens, you should make your best guess about what you think the situation is like without making any unneccessary assumptions. \n\nFor example, if it doesn't say that the other person in the situation is related to you, then you should assume that you and the other person are unrelated. "
20.8099 	DATA 	Keypress: space
20.8263 	EXP 	New trial (rep=0, index=6): OrderedDict([('Instructions', 'When you are done reading this screen you will begin two practice scenarios. \n\nOnce again, you can press SPACE to advance through the first four screens. Then you will encounter a number of trials which you will rate on a 1-7 scale, and press ENTER to submit your rating. \n\nWhile you will see 10 such trials for each scenario in the actual experiment, you will only respond to 4 variations of each practice scenario.\n\nFurthermore, when the actual experiment begins there will be an additional 10 seconds of fixation before the scenario text comes up, while the scanner warms up. Please begin reading as usual when the text comes up.\n\nPress SPACE to begin the practice trials!\n')])
20.9331 	EXP 	InstText: autoDraw = False
20.9331 	EXP 	InstText: color = 'white (named)'
20.9331 	EXP 	InstText: pos = array([0., 0.])
20.9331 	EXP 	InstText: text = 'When you are done reading this screen you will begin two practice scenarios. \n\nOnce again, you can press SPACE to advance through the first four screens. Then you will encounter a number of trials which you will rate on a 1-7 scale, and press ENTER to submit your rating. \n\nWhile you will see 10 such trials for each scenario in the actual experiment, you will only respond to 4 variations of each practice scenario.\n\nFurthermore, when the actual experiment begins there will be an additional 10 seconds of fixation before the scenario text comes up, while the scanner warms up. Please begin reading as usual when the text comes up.\n\nPress SPACE to begin the practice trials!\n'
20.9331 	EXP 	InstText: font = 'Arial'
20.9331 	EXP 	InstText: height = 0.04
20.9331 	EXP 	InstText: autoDraw = True
20.9331 	EXP 	InstText: text = 'When you are done reading this screen you will begin two practice scenarios. \n\nOnce again, you can press SPACE to advance through the first four screens. Then you will encounter a number of trials which you will rate on a 1-7 scale, and press ENTER to submit your rating. \n\nWhile you will see 10 such trials for each scenario in the actual experiment, you will only respond to 4 variations of each practice scenario.\n\nFurthermore, when the actual experiment begins there will be an additional 10 seconds of fixation before the scenario text comes up, while the scanner warms up. Please begin reading as usual when the text comes up.\n\nPress SPACE to begin the practice trials!\n'
21.1763 	DATA 	Keypress: space
21.1962 	EXP 	Imported moralRows.csv as conditions, 1 conditions, 3 params
21.1964 	EXP 	Created sequence: sequential, trialTypes=1, nReps=1, seed=None
21.1966 	EXP 	New trial (rep=0, index=0): OrderedDict([('rows', '000:005'), ('CueInstructions1', 'EMPHASIZE'), ('CueInstructions2', 'DE-EMPHASIZE')])
21.2061 	EXP 	InstText: autoDraw = False
21.2061 	EXP 	isi: autoDraw = True
23.2066 	EXP 	Imported PracticeMoralSelfReg.xlsx as conditions, 5 conditions, 10 params
23.2068 	EXP 	Created sequence: sequential, trialTypes=5, nReps=1, seed=None
23.2070 	EXP 	New trial (rep=0, index=0): OrderedDict([('PracticeDilemmas', "• You are the head of a safety crew that has been alerted about a group of skydivers that is wearing defective parachutes and is currently in a freefall \n\n• You've arrived in time to see that a group of divers is holding onto one another and will fall to their death a few feet to your right unless your crew's trampoline is moved beneath them"), ('PracticeLeftText', 'Skydivers on right: 6'), ('PracticeRightText', 'Probability of \nparachute opening: 35% '), ('Reminder', 'Plan: Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'), ('ChoseNothing', 'The 3 skydivers on the left were saved.\n \nThe '), ('ChosePlan', 'The 3 skydivers on the left died.\n\nThe 6 skydivers on the right were saved.'), ('GroupNumber', 6), ('GroupProb', 35), ('Noun', ' skydivers on the right'), ('sureGroupText', 'Skydivers on the left: 3')])
23.2667 	EXP 	isi: autoDraw = False
23.2667 	EXP 	isi: autoDraw = False
23.2667 	EXP 	practiceQs: text = "• You are the head of a safety crew that has been alerted about a group of skydivers that is wearing defective parachutes and is currently in a freefall \n\n• You've arrived in time to see that a group of divers is holding onto one another and will fall to their death a few feet to your right unless your crew's trampoline is moved beneath them"
23.2667 	EXP 	practiceQs: autoDraw = True
24.2971 	EXP 	New trial (rep=0, index=1): OrderedDict([('PracticeDilemmas', "• Your crew sees a smaller group of divers apart from the rest who are much closer to reaching the ground, and instinctively moves a few feet to the left to catch them\n\n• You know that there won't be enough time to reach the group on the right if you wait to catch the group on the left"), ('PracticeLeftText', 'Skydivers on right: 9'), ('PracticeRightText', 'Probability of \nparachute opening: 50% '), ('Reminder', 'Plan: Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'), ('ChoseNothing', 'The 4 skydivers on the left were saved.\n \nThe '), ('ChosePlan', 'The 4 skydivers on the left died.\n\nThe 9 skydivers on the right were saved.'), ('GroupNumber', 9), ('GroupProb', 50), ('Noun', ' skydivers on the right'), ('sureGroupText', 'Skydivers on the left: 4')])
24.3382 	DATA 	Keypress: space
24.3433 	EXP 	practiceQs: autoDraw = False
24.3433 	EXP 	practiceQs: text = "• Your crew sees a smaller group of divers apart from the rest who are much closer to reaching the ground, and instinctively moves a few feet to the left to catch them\n\n• You know that there won't be enough time to reach the group on the right if you wait to catch the group on the left"
24.3433 	EXP 	practiceQs: autoDraw = True
24.5129 	EXP 	New trial (rep=0, index=2): OrderedDict([('PracticeDilemmas', "• If nothing is done, the safety crew will catch the divers to the left, avoiding their death, but the separate group of divers will land on the ground, causing their deaths\n\n• You can re-direct your crew to the right, preventing the death of the group, but the divers on the left won't be caught"), ('PracticeLeftText', 'Skydivers on right: 5'), ('PracticeRightText', 'Probability of \nparachute opening: 50% '), ('Reminder', 'Plan: Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'), ('ChoseNothing', 'The 2 skydivers on the left were saved.\n \nThe '), ('ChosePlan', 'The 2 skydivers on the left died.\n\nThe 5 skydivers on the right were saved.'), ('GroupNumber', 5), ('GroupProb', 50), ('Noun', ' skydivers on the right'), ('sureGroupText', 'Skydivers on the left: 2')])
24.5621 	DATA 	Keypress: space
24.5674 	EXP 	practiceQs: autoDraw = False
24.5674 	EXP 	practiceQs: text = "• If nothing is done, the safety crew will catch the divers to the left, avoiding their death, but the separate group of divers will land on the ground, causing their deaths\n\n• You can re-direct your crew to the right, preventing the death of the group, but the divers on the left won't be caught"
24.5674 	EXP 	practiceQs: autoDraw = True
24.6633 	EXP 	New trial (rep=0, index=3): OrderedDict([('PracticeDilemmas', '• You also know that there is a chance that one of the parachutes of the group will still open in time to prevent all of their deaths\n\n• There is no chance that the parachute will open for the one diver, given how close he is to the ground'), ('PracticeLeftText', 'Skydivers on right: 4'), ('PracticeRightText', 'Probability of \nparachute opening: 65% '), ('Reminder', 'Plan: Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'), ('ChoseNothing', 'The 3 skydivers on the left were saved.\n \nThe '), ('ChosePlan', 'The 3 skydivers on the left died.\n\nThe 4 skydivers on the right were saved.'), ('GroupNumber', 4), ('GroupProb', 65), ('Noun', ' skydivers on the right'), ('sureGroupText', 'Skydivers on the left: 3')])
24.6987 	DATA 	Keypress: space
24.7037 	EXP 	practiceQs: autoDraw = False
24.7037 	EXP 	practiceQs: text = '• You also know that there is a chance that one of the parachutes of the group will still open in time to prevent all of their deaths\n\n• There is no chance that the parachute will open for the one diver, given how close he is to the ground'
24.7037 	EXP 	practiceQs: autoDraw = True
24.8635 	EXP 	New trial (rep=0, index=4): OrderedDict([('PracticeDilemmas', 'Consider each of the following scenarios and, for each one, determine what course of action you will take.'), ('PracticeLeftText', 'Skydivers on right: 8'), ('PracticeRightText', 'Probability of \nparachute opening: 65% '), ('Reminder', 'Plan: Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'), ('ChoseNothing', 'The 5 skydivers on the left were saved.\n \nThe '), ('ChosePlan', 'The 5 skydivers on the left died.\n\nThe 8 skydivers on the right were saved.'), ('GroupNumber', 8), ('GroupProb', 65), ('Noun', ' skydivers on the right'), ('sureGroupText', 'Skydivers on the left: 5')])
24.8840 	DATA 	Keypress: space
24.8886 	EXP 	practiceQs: autoDraw = False
24.8886 	EXP 	practiceQs: text = 'Consider each of the following scenarios and, for each one, determine what course of action you will take.'
24.8886 	EXP 	practiceQs: autoDraw = True
25.0644 	DATA 	Keypress: space
25.0931 	EXP 	practiceQs: autoDraw = False
25.0931 	EXP 	isi: autoDraw = True
27.1091 	EXP 	isi: autoDraw = False
27.1091 	EXP 	isi: autoDraw = False
27.1091 	EXP 	cue: text = 'EMPHASIZE'
27.1091 	EXP 	cue: text = 'DE-EMPHASIZE'
27.1091 	EXP 	cue: autoDraw = True
35.0970 	EXP 	Imported PracticeMoralSelfReg.xlsx as conditions, 5 conditions, 10 params
35.0972 	EXP 	Created sequence: sequential, trialTypes=5, nReps=1, seed=None
35.0975 	EXP 	New trial (rep=0, index=0): OrderedDict([('PracticeDilemmas', "• You are the head of a safety crew that has been alerted about a group of skydivers that is wearing defective parachutes and is currently in a freefall \n\n• You've arrived in time to see that a group of divers is holding onto one another and will fall to their death a few feet to your right unless your crew's trampoline is moved beneath them"), ('PracticeLeftText', 'Skydivers on right: 6'), ('PracticeRightText', 'Probability of \nparachute opening: 35% '), ('Reminder', 'Plan: Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'), ('ChoseNothing', 'The 3 skydivers on the left were saved.\n \nThe '), ('ChosePlan', 'The 3 skydivers on the left died.\n\nThe 6 skydivers on the right were saved.'), ('GroupNumber', 6), ('GroupProb', 35), ('Noun', ' skydivers on the right'), ('sureGroupText', 'Skydivers on the left: 3')])
35.1033 	EXP 	cue: autoDraw = False
35.1033 	EXP 	isi: autoDraw = True
37.1679 	EXP 	isi: autoDraw = False
37.1679 	EXP 	conBlank: text = ''
37.1679 	EXP 	RemText: text = 'Plan: Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'
37.1679 	EXP 	leftText: text = 'Skydivers on right: 6'
37.1679 	EXP 	rightText: text = 'Probability of \nparachute opening: 35% '
37.1679 	EXP 	Yes: text = "Implement the plan ('y')"
37.1679 	EXP 	No: text = "Do nothing ('n')"
37.1679 	EXP 	Question: text = 'What do you do?'
37.1679 	EXP 	sureGroup: text = 'Skydivers on the left: 3'
37.1679 	EXP 	RemText: autoDraw = True
37.1679 	EXP 	leftText: autoDraw = True
37.1679 	EXP 	rightText: autoDraw = True
37.1679 	EXP 	Yes: autoDraw = True
37.1679 	EXP 	No: autoDraw = True
37.1679 	EXP 	Question: autoDraw = True
37.1679 	EXP 	sureGroup: autoDraw = True
39.2766 	DATA 	Keypress: n
39.2881 	EXP 	conBlank: autoDraw = True
39.2881 	EXP 	No: color = 'red (named)'
39.3048 	EXP 	No: color = 'red (named)'
39.3216 	EXP 	No: color = 'red (named)'
39.3382 	EXP 	No: color = 'red (named)'
39.3547 	EXP 	No: color = 'red (named)'
39.3715 	EXP 	No: color = 'red (named)'
39.3882 	EXP 	No: color = 'red (named)'
39.4047 	EXP 	No: color = 'red (named)'
39.4216 	EXP 	No: color = 'red (named)'
39.4383 	EXP 	No: color = 'red (named)'
39.4547 	EXP 	No: color = 'red (named)'
39.4715 	EXP 	No: color = 'red (named)'
39.4883 	EXP 	No: color = 'red (named)'
39.5050 	EXP 	No: color = 'red (named)'
39.5216 	EXP 	No: color = 'red (named)'
39.5383 	EXP 	No: color = 'red (named)'
39.5548 	EXP 	No: color = 'red (named)'
39.5717 	EXP 	No: color = 'red (named)'
39.5885 	EXP 	No: color = 'red (named)'
39.6050 	EXP 	No: color = 'red (named)'
39.6217 	EXP 	No: color = 'red (named)'
39.6385 	EXP 	No: color = 'red (named)'
39.6552 	EXP 	No: color = 'red (named)'
39.6717 	EXP 	No: color = 'red (named)'
39.6883 	EXP 	No: color = 'red (named)'
39.7051 	EXP 	No: color = 'red (named)'
39.7219 	EXP 	No: color = 'red (named)'
39.7385 	EXP 	No: color = 'red (named)'
39.7553 	EXP 	No: color = 'red (named)'
39.7720 	EXP 	No: color = 'red (named)'
39.7886 	EXP 	No: color = 'red (named)'
39.8051 	EXP 	No: color = 'red (named)'
39.8220 	EXP 	No: color = 'red (named)'
39.8386 	EXP 	No: color = 'red (named)'
39.8553 	EXP 	No: color = 'red (named)'
39.8719 	EXP 	No: color = 'red (named)'
39.8886 	EXP 	No: color = 'red (named)'
39.9053 	EXP 	No: color = 'red (named)'
39.9220 	EXP 	No: color = 'red (named)'
39.9387 	EXP 	No: color = 'red (named)'
39.9554 	EXP 	No: color = 'red (named)'
39.9720 	EXP 	No: color = 'red (named)'
39.9887 	EXP 	No: color = 'red (named)'
40.0053 	EXP 	No: color = 'red (named)'
40.0221 	EXP 	No: color = 'red (named)'
40.0386 	EXP 	No: color = 'red (named)'
40.0555 	EXP 	No: color = 'red (named)'
40.0726 	EXP 	No: color = 'red (named)'
40.0888 	EXP 	No: color = 'red (named)'
40.1054 	EXP 	No: color = 'red (named)'
40.1221 	EXP 	No: color = 'red (named)'
40.1387 	EXP 	No: color = 'red (named)'
40.1555 	EXP 	No: color = 'red (named)'
40.1721 	EXP 	No: color = 'red (named)'
40.1889 	EXP 	No: color = 'red (named)'
40.2055 	EXP 	No: color = 'red (named)'
40.2221 	EXP 	No: color = 'red (named)'
40.2389 	EXP 	No: color = 'red (named)'
40.2554 	EXP 	No: color = 'red (named)'
40.2723 	EXP 	No: color = 'red (named)'
40.2889 	EXP 	No: color = 'red (named)'
40.3057 	EXP 	No: color = 'red (named)'
40.3223 	EXP 	No: color = 'red (named)'
40.3390 	EXP 	No: color = 'red (named)'
40.3557 	EXP 	No: color = 'red (named)'
40.3724 	EXP 	No: color = 'red (named)'
40.3891 	EXP 	No: color = 'red (named)'
40.4066 	EXP 	No: color = 'red (named)'
40.4224 	EXP 	No: color = 'red (named)'
40.4392 	EXP 	No: color = 'red (named)'
40.4557 	EXP 	No: color = 'red (named)'
40.4725 	EXP 	No: color = 'red (named)'
40.4895 	EXP 	No: color = 'red (named)'
40.5057 	EXP 	No: color = 'red (named)'
40.5226 	EXP 	No: color = 'red (named)'
40.5391 	EXP 	No: color = 'red (named)'
40.5557 	EXP 	No: color = 'red (named)'
40.5724 	EXP 	No: color = 'red (named)'
40.5892 	EXP 	No: color = 'red (named)'
40.6058 	EXP 	No: color = 'red (named)'
40.6226 	EXP 	No: color = 'red (named)'
40.6392 	EXP 	No: color = 'red (named)'
40.6559 	EXP 	No: color = 'red (named)'
40.6725 	EXP 	No: color = 'red (named)'
40.6892 	EXP 	No: color = 'red (named)'
40.7058 	EXP 	No: color = 'red (named)'
40.7226 	EXP 	No: color = 'red (named)'
40.7392 	EXP 	No: color = 'red (named)'
40.7560 	EXP 	No: color = 'red (named)'
40.7727 	EXP 	No: color = 'red (named)'
40.7893 	EXP 	No: color = 'red (named)'
40.8060 	EXP 	No: color = 'red (named)'
40.8227 	EXP 	No: color = 'red (named)'
40.8393 	EXP 	No: color = 'red (named)'
40.8561 	EXP 	No: color = 'red (named)'
40.8726 	EXP 	No: color = 'red (named)'
40.8895 	EXP 	No: color = 'red (named)'
40.9060 	EXP 	No: color = 'red (named)'
40.9229 	EXP 	No: color = 'red (named)'
40.9395 	EXP 	No: color = 'red (named)'
40.9562 	EXP 	No: color = 'red (named)'
40.9727 	EXP 	No: color = 'red (named)'
40.9896 	EXP 	No: color = 'red (named)'
41.0062 	EXP 	No: color = 'red (named)'
41.0229 	EXP 	No: color = 'red (named)'
41.0396 	EXP 	No: color = 'red (named)'
41.0563 	EXP 	No: color = 'red (named)'
41.0728 	EXP 	No: color = 'red (named)'
41.0896 	EXP 	No: color = 'red (named)'
41.1063 	EXP 	No: color = 'red (named)'
41.1230 	EXP 	No: color = 'red (named)'
41.1395 	EXP 	No: color = 'red (named)'
41.1563 	EXP 	No: color = 'red (named)'
41.1729 	EXP 	No: color = 'red (named)'
41.1896 	EXP 	No: color = 'red (named)'
41.2063 	EXP 	No: color = 'red (named)'
41.2230 	EXP 	No: color = 'red (named)'
41.2398 	EXP 	No: color = 'red (named)'
41.2565 	EXP 	No: color = 'red (named)'
41.2733 	EXP 	No: color = 'red (named)'
41.2898 	EXP 	conBlank: autoDraw = False
41.2898 	EXP 	RemText: autoDraw = False
41.2898 	EXP 	leftText: autoDraw = False
41.2898 	EXP 	rightText: autoDraw = False
41.2898 	EXP 	Yes: autoDraw = False
41.2898 	EXP 	No: autoDraw = False
41.2898 	EXP 	No: color = 'red (named)'
41.2898 	EXP 	Question: autoDraw = False
41.2898 	EXP 	sureGroup: autoDraw = False
41.2898 	EXP 	conBlank: autoDraw = False
41.2898 	EXP 	RemText: autoDraw = False
41.2898 	EXP 	leftText: autoDraw = False
41.2898 	EXP 	rightText: autoDraw = False
41.2898 	EXP 	Yes: autoDraw = False
41.2898 	EXP 	No: autoDraw = False
41.2898 	EXP 	Question: autoDraw = False
41.2898 	EXP 	sureGroup: autoDraw = False
41.2898 	EXP 	Yes: color = 'white (named)'
41.2898 	EXP 	No: color = 'white (named)'
41.2898 	EXP 	leftText: autoDraw = False
41.2898 	EXP 	rightText: autoDraw = False
41.2898 	EXP 	Yes: autoDraw = False
41.2898 	EXP 	No: autoDraw = False
41.2898 	EXP 	sureGroup: autoDraw = False
41.2898 	EXP 	RemText: autoDraw = False
41.2898 	EXP 	Question: autoDraw = False
41.2898 	EXP 	isi: autoDraw = True
43.3262 	EXP 	isi: autoDraw = False
43.3262 	EXP 	isi: autoDraw = False
43.3262 	EXP 	FeedbackVar: color = 'white (named)'
43.3262 	EXP 	FeedbackVar: pos = array([0., 0.])
43.3262 	EXP 	FeedbackVar: text = 'default'
43.3262 	EXP 	FeedbackVar: font = 'Arial'
43.3262 	EXP 	FeedbackVar: height = 0.07
43.3262 	EXP 	FeedbackVar: text = 'The 3 skydivers on the left were saved.\n \nThe 6 skydivers on the right was saved.'
43.3262 	EXP 	FeedbackVar: autoDraw = True
46.7135 	DATA 	Keypress: escape
46.8574 	EXP 	window1: mouseVisible = True
