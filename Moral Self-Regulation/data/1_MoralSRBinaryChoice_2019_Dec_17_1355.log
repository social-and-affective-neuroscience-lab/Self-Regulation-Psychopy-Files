6.0251 	WARNING 	User requested fullscreen with size [1024  768], but screen is actually [1920, 1200]. Using actual size
6.9152 	EXP 	Created window1 = Window(allowGUI=True, allowStencil=False, args=UNKNOWN, autoLog=True, bitsMode=UNKNOWN, blendMode='avg', color=array([0., 0., 0.]), colorSpace='rgb', fullscr=<method-wrapper '__getattribute__' of attributeSetter object at 0x0000018966BF5E10>, gamma=None, gammaErrorPolicy='raise', kwargs=UNKNOWN, lms=UNKNOWN, monitor=<psychopy.monitors.calibTools.Monitor object at 0x0000018966D1C630>, multiSample=False, name='window1', numSamples=2, pos=[0.0, 0.0], screen=0, size=array([1920, 1200]), stereo=False, units='height', useFBO=True, useRetina=False, viewOri=0.0, viewPos=None, viewScale=None, waitBlanking=True, winType='pyglet')
6.9152 	EXP 	window1: recordFrameIntervals = False
7.0813 	EXP 	window1: recordFrameIntervals = True
7.2639 	EXP 	window1: recordFrameIntervals = False
8.7867 	EXP 	Created InstText = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=1.0, italic=False, languageStyle='LTR', name='InstText', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
8.7955 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
8.8079 	EXP 	Created practiceQs = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='practiceQs', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
8.8096 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
8.8267 	EXP 	Created cue = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='cue', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.5)
8.8285 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
8.8290 	EXP 	Created conBlank = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-1.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='conBlank', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
8.8400 	EXP 	Created leftText = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.045, italic=False, languageStyle='LTR', name='leftText', opacity=1.0, ori=0, pos=array([0.41, 0.2 ]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
8.8431 	EXP 	Created rightText = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.045, italic=False, languageStyle='LTR', name='rightText', opacity=1.0, ori=0, pos=array([0.41, 0.05]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
8.8463 	EXP 	Created Yes = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='Yes', opacity=1.0, ori=0, pos=array([ 0.  , -0.25]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=2.5)
8.8504 	EXP 	Created No = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='No', opacity=1.0, ori=0, pos=array([ 0.  , -0.33]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
8.8538 	EXP 	Created sureGroup = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-7.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='sureGroup', opacity=1.0, ori=0, pos=array([-0.41,  0.2 ]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
8.8554 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
8.8585 	EXP 	Created FeedbackVar = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=1.0, italic=False, languageStyle='LTR', name='FeedbackVar', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
8.8601 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
8.8648 	EXP 	Created cue = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='cue', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.5)
8.8672 	EXP 	Created isi_2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi_2', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
8.9178 	EXP 	Created instructions2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.08, italic=False, languageStyle='LTR', name='instructions2', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1)
8.9200 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
8.9236 	EXP 	Created text = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='text', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
8.9252 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
8.9299 	EXP 	Created cue = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='cue', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.5)
8.9320 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
8.9325 	EXP 	Created conBlank2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-1.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='conBlank2', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
8.9331 	EXP 	Created RemText2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.045, italic=False, languageStyle='LTR', name='RemText2', opacity=1.0, ori=0, pos=array([0.  , 0.32]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1.5)
8.9369 	EXP 	Created leftText2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.045, italic=False, languageStyle='LTR', name='leftText2', opacity=1.0, ori=0, pos=array([0.41 , 0.053]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
8.9401 	EXP 	Created rightText2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.045, italic=False, languageStyle='LTR', name='rightText2', opacity=1.0, ori=0, pos=array([ 0.41 , -0.043]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
8.9432 	EXP 	Created yes2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='yes2', opacity=1.0, ori=0, pos=array([ 0.  , -0.25]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
8.9474 	EXP 	Created no2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-6.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='no2', opacity=1.0, ori=0, pos=array([ 0.  , -0.33]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
8.9518 	EXP 	Created text_2 = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-8.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.045, italic=False, languageStyle='LTR', name='text_2', opacity=1.0, ori=0, pos=array([-0.41,  0.  ]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1)
8.9536 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
8.9568 	EXP 	Created FeedbackVar = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=1.0, italic=False, languageStyle='LTR', name='FeedbackVar', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
8.9584 	EXP 	Created isi = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='isi', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='+', units='height', win=Window(...), wrapWidth=1)
8.9634 	EXP 	Created cue = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='cue', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.5)
9.0153 	EXP 	Created TY = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='TY', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1)
9.0409 	EXP 	Imported MoralSelfRegInst.xlsx as conditions, 8 conditions, 1 params
9.0411 	EXP 	Created sequence: sequential, trialTypes=8, nReps=1, seed=None
9.0412 	EXP 	New trial (rep=0, index=0): OrderedDict([('Instructions', 'In this study you will be asked to evaluate a number of moral dilemmas under various conditions. \n\nYou will be presented with 10 different scenario contexts and will respond to 5 conditions for each one.\n\nFor each scenario, you will proceed through five screens. These screens will describe a situation that you are hypothetically faced with and an action that you could perform in response to that situation. \n\nWhen you are done reading each screen, you can press SPACE to move on to the next one.\n\nHowever, please try your best to get the fullest understanding of the scenario as described thus far before moving on to the next screen.')])
12.4835 	DATA 	Keypress: space
12.4837 	DATA 	Keypress: space
12.4838 	DATA 	Keypress: space
12.4840 	DATA 	Keypress: space
12.4842 	DATA 	Keypress: space
12.4844 	DATA 	Keypress: space
12.4845 	DATA 	Keypress: space
12.4847 	DATA 	Keypress: space
12.4852 	DATA 	Keypress: space
12.4854 	DATA 	Keypress: space
12.4858 	DATA 	Keypress: space
12.4860 	DATA 	Keypress: space
12.4862 	DATA 	Keypress: space
12.4863 	DATA 	Keypress: space
12.4865 	DATA 	Keypress: space
12.4915 	EXP 	InstText: color = 'white (named)'
12.4915 	EXP 	InstText: pos = array([0., 0.])
12.4915 	EXP 	InstText: text = 'In this study you will be asked to evaluate a number of moral dilemmas under various conditions. \n\nYou will be presented with 10 different scenario contexts and will respond to 5 conditions for each one.\n\nFor each scenario, you will proceed through five screens. These screens will describe a situation that you are hypothetically faced with and an action that you could perform in response to that situation. \n\nWhen you are done reading each screen, you can press SPACE to move on to the next one.\n\nHowever, please try your best to get the fullest understanding of the scenario as described thus far before moving on to the next screen.'
12.4915 	EXP 	InstText: font = 'Arial'
12.4915 	EXP 	InstText: height = 0.04
12.4915 	EXP 	InstText: autoDraw = True
12.4915 	EXP 	InstText: text = 'In this study you will be asked to evaluate a number of moral dilemmas under various conditions. \n\nYou will be presented with 10 different scenario contexts and will respond to 5 conditions for each one.\n\nFor each scenario, you will proceed through five screens. These screens will describe a situation that you are hypothetically faced with and an action that you could perform in response to that situation. \n\nWhen you are done reading each screen, you can press SPACE to move on to the next one.\n\nHowever, please try your best to get the fullest understanding of the scenario as described thus far before moving on to the next screen.'
12.6401 	EXP 	New trial (rep=0, index=1): OrderedDict([('Instructions', 'The scenario description will include all the information you need to make your decision EXCEPT that it will not explicitly state the values for two features of the dilemma:\n\na) a number of people involved in part of the scenario, and \n\nb) a likelihood that something will happen\n\nYou will be evaluating this scenario given a number of variations of these features.\n\nThe fourth and final screen will provide you with the prompt that you will be answering for each of these variations - namely, whether or not it is morally acceptable for you to perform the action in question.')])
12.7503 	DATA 	Keypress: space
12.7558 	EXP 	InstText: autoDraw = False
12.7558 	EXP 	InstText: color = 'white (named)'
12.7558 	EXP 	InstText: pos = array([0., 0.])
12.7558 	EXP 	InstText: text = 'The scenario description will include all the information you need to make your decision EXCEPT that it will not explicitly state the values for two features of the dilemma:\n\na) a number of people involved in part of the scenario, and \n\nb) a likelihood that something will happen\n\nYou will be evaluating this scenario given a number of variations of these features.\n\nThe fourth and final screen will provide you with the prompt that you will be answering for each of these variations - namely, whether or not it is morally acceptable for you to perform the action in question.'
12.7558 	EXP 	InstText: font = 'Arial'
12.7558 	EXP 	InstText: height = 0.04
12.7558 	EXP 	InstText: autoDraw = True
12.7558 	EXP 	InstText: text = 'The scenario description will include all the information you need to make your decision EXCEPT that it will not explicitly state the values for two features of the dilemma:\n\na) a number of people involved in part of the scenario, and \n\nb) a likelihood that something will happen\n\nYou will be evaluating this scenario given a number of variations of these features.\n\nThe fourth and final screen will provide you with the prompt that you will be answering for each of these variations - namely, whether or not it is morally acceptable for you to perform the action in question.'
21.9982 	EXP 	New trial (rep=0, index=2): OrderedDict([('Instructions', 'After you have understood the scenario context and the question you will be answering, you can press SPACE to move on to the individual trials that will fill these gaps for you in the scenario.\n\nBefore you do so, please try your best to hold in mind what the action is that you will be evaluating across trials, as you will not be reminded of this after this screen.\n\nFirst, you will see a "+" in the middle of the screen. Any time that this is up, all you need to do is fixate on the "+" and prepare to respond to the next trial. \n\nNext, you will see text appear indicating the missing information. You should then evaluate the action in question in the context of these values given, and make a judgment of its moral acceptibility.\n\nYou will then indicate the course of action you would like to take in each scenario; by pressing either \'y\' on your keyboard to indicate \'Yes\', or \'n\' to indicate \'No.\'\n')])
22.1601 	DATA 	Keypress: space
22.1665 	EXP 	InstText: autoDraw = False
22.1665 	EXP 	InstText: color = 'white (named)'
22.1665 	EXP 	InstText: pos = array([0., 0.])
22.1665 	EXP 	InstText: text = 'After you have understood the scenario context and the question you will be answering, you can press SPACE to move on to the individual trials that will fill these gaps for you in the scenario.\n\nBefore you do so, please try your best to hold in mind what the action is that you will be evaluating across trials, as you will not be reminded of this after this screen.\n\nFirst, you will see a "+" in the middle of the screen. Any time that this is up, all you need to do is fixate on the "+" and prepare to respond to the next trial. \n\nNext, you will see text appear indicating the missing information. You should then evaluate the action in question in the context of these values given, and make a judgment of its moral acceptibility.\n\nYou will then indicate the course of action you would like to take in each scenario; by pressing either \'y\' on your keyboard to indicate \'Yes\', or \'n\' to indicate \'No.\'\n'
22.1665 	EXP 	InstText: font = 'Arial'
22.1665 	EXP 	InstText: height = 0.04
22.1665 	EXP 	InstText: autoDraw = True
22.1665 	EXP 	InstText: text = 'After you have understood the scenario context and the question you will be answering, you can press SPACE to move on to the individual trials that will fill these gaps for you in the scenario.\n\nBefore you do so, please try your best to hold in mind what the action is that you will be evaluating across trials, as you will not be reminded of this after this screen.\n\nFirst, you will see a "+" in the middle of the screen. Any time that this is up, all you need to do is fixate on the "+" and prepare to respond to the next trial. \n\nNext, you will see text appear indicating the missing information. You should then evaluate the action in question in the context of these values given, and make a judgment of its moral acceptibility.\n\nYou will then indicate the course of action you would like to take in each scenario; by pressing either \'y\' on your keyboard to indicate \'Yes\', or \'n\' to indicate \'No.\'\n'
22.2324 	DATA 	Keypress: space
22.2508 	EXP 	New trial (rep=0, index=3): OrderedDict([('Instructions', 'After you answer you will again see a "+" in the middle of the screen, followed by the next trial. This will occur for 5 different variations of each scenario. \n\nIt is important that you try your best to judge each trial in isolation, and avoid consideration of past responses for the current scenario or past scenarios.\n\nOnce you have pressed a button there is no way to go back to the previous screen. If you press the wrong button or if you press a button too soon, don\'t worry.')])
22.3347 	EXP 	InstText: autoDraw = False
22.3347 	EXP 	InstText: color = 'white (named)'
22.3347 	EXP 	InstText: pos = array([0., 0.])
22.3347 	EXP 	InstText: text = 'After you answer you will again see a "+" in the middle of the screen, followed by the next trial. This will occur for 5 different variations of each scenario. \n\nIt is important that you try your best to judge each trial in isolation, and avoid consideration of past responses for the current scenario or past scenarios.\n\nOnce you have pressed a button there is no way to go back to the previous screen. If you press the wrong button or if you press a button too soon, don\'t worry.'
22.3347 	EXP 	InstText: font = 'Arial'
22.3347 	EXP 	InstText: height = 0.04
22.3347 	EXP 	InstText: autoDraw = True
22.3347 	EXP 	InstText: text = 'After you answer you will again see a "+" in the middle of the screen, followed by the next trial. This will occur for 5 different variations of each scenario. \n\nIt is important that you try your best to judge each trial in isolation, and avoid consideration of past responses for the current scenario or past scenarios.\n\nOnce you have pressed a button there is no way to go back to the previous screen. If you press the wrong button or if you press a button too soon, don\'t worry.'
22.4321 	EXP 	New trial (rep=0, index=4): OrderedDict([('Instructions', 'Moral judgments can be difficult to make, and we understand that people sometimes change their minds about moral questions or feel conflicted about the answers they\'ve given. Don\'t think of your answers as "written in stone." All we want from you is a thoughtful first response.\n\nWhile we want your answers to be thoughtful, you may find that in some cases the right answer seems immediately obvious. If that happens, it\'s okay to answer quickly. There are no trick questions, and in every case we have done our best to make the relevant information as clear as possible. \n\nNote, however, that no two scenarios are the same, although many are similar to each other. To answer a question properly you will have to read it carefully because it will always be different in some way from the questions you have already answered. ')])
22.5786 	DATA 	Keypress: space
22.5843 	EXP 	InstText: autoDraw = False
22.5843 	EXP 	InstText: color = 'white (named)'
22.5843 	EXP 	InstText: pos = array([0., 0.])
22.5843 	EXP 	InstText: text = 'Moral judgments can be difficult to make, and we understand that people sometimes change their minds about moral questions or feel conflicted about the answers they\'ve given. Don\'t think of your answers as "written in stone." All we want from you is a thoughtful first response.\n\nWhile we want your answers to be thoughtful, you may find that in some cases the right answer seems immediately obvious. If that happens, it\'s okay to answer quickly. There are no trick questions, and in every case we have done our best to make the relevant information as clear as possible. \n\nNote, however, that no two scenarios are the same, although many are similar to each other. To answer a question properly you will have to read it carefully because it will always be different in some way from the questions you have already answered. '
22.5843 	EXP 	InstText: font = 'Arial'
22.5843 	EXP 	InstText: height = 0.04
22.5843 	EXP 	InstText: autoDraw = True
22.5843 	EXP 	InstText: text = 'Moral judgments can be difficult to make, and we understand that people sometimes change their minds about moral questions or feel conflicted about the answers they\'ve given. Don\'t think of your answers as "written in stone." All we want from you is a thoughtful first response.\n\nWhile we want your answers to be thoughtful, you may find that in some cases the right answer seems immediately obvious. If that happens, it\'s okay to answer quickly. There are no trick questions, and in every case we have done our best to make the relevant information as clear as possible. \n\nNote, however, that no two scenarios are the same, although many are similar to each other. To answer a question properly you will have to read it carefully because it will always be different in some way from the questions you have already answered. '
23.0488 	DATA 	Keypress: space
23.0657 	EXP 	New trial (rep=0, index=5): OrderedDict([('Instructions', "In some cases, you might feel that the situation we've described is not realistic. For example, it might say that if you do X, then Y will happen, and you might think that this is not realistic, that Y might not necessarily happen if you do X. If you find yourself having these sorts of doubts, you should suspend disbelief and assume that the situation really is the way it's described, even if it doesn't seem realistic to you.\n\nLikewise, you may feel that you need more information than is provided about the situation before you can give your answer. If this happens, you should make your best guess about what you think the situation is like without making any unneccessary assumptions. \n\nFor example, if it doesn't say that the other person in the situation is related to you, then you should assume that you and the other person are unrelated. ")])
23.2116 	EXP 	InstText: autoDraw = False
23.2116 	EXP 	InstText: color = 'white (named)'
23.2116 	EXP 	InstText: pos = array([0., 0.])
23.2116 	EXP 	InstText: text = "In some cases, you might feel that the situation we've described is not realistic. For example, it might say that if you do X, then Y will happen, and you might think that this is not realistic, that Y might not necessarily happen if you do X. If you find yourself having these sorts of doubts, you should suspend disbelief and assume that the situation really is the way it's described, even if it doesn't seem realistic to you.\n\nLikewise, you may feel that you need more information than is provided about the situation before you can give your answer. If this happens, you should make your best guess about what you think the situation is like without making any unneccessary assumptions. \n\nFor example, if it doesn't say that the other person in the situation is related to you, then you should assume that you and the other person are unrelated. "
23.2116 	EXP 	InstText: font = 'Arial'
23.2116 	EXP 	InstText: height = 0.04
23.2116 	EXP 	InstText: autoDraw = True
23.2116 	EXP 	InstText: text = "In some cases, you might feel that the situation we've described is not realistic. For example, it might say that if you do X, then Y will happen, and you might think that this is not realistic, that Y might not necessarily happen if you do X. If you find yourself having these sorts of doubts, you should suspend disbelief and assume that the situation really is the way it's described, even if it doesn't seem realistic to you.\n\nLikewise, you may feel that you need more information than is provided about the situation before you can give your answer. If this happens, you should make your best guess about what you think the situation is like without making any unneccessary assumptions. \n\nFor example, if it doesn't say that the other person in the situation is related to you, then you should assume that you and the other person are unrelated. "
23.9169 	EXP 	New trial (rep=0, index=6): OrderedDict([('Instructions', 'Finally, after reading the scenario you will be making decisions about, you will be given a regulation strategy. Please employ this regulation strategy when making your decisions. \n\nYou will be instructed to either "DE-EMPHASIZE" or "EMPHASIZE." When you see the word "DE-EMPHASIZE," we would like you to reinterpret the upcoming decision as one of many opportunities, and that the outcome is not very important. Try to think that the decision is not a big deal; you will have other chances.\n\nWhen you see the word "EMPHASIZE" we would like you to stress the importance of the upcoming decision. Please reinterpret the upcoming decision as very important and one in which you need to make the right choice. Try to think that it matters a lot what you choose. ')])
24.0530 	DATA 	Keypress: space
24.0590 	EXP 	InstText: autoDraw = False
24.0590 	EXP 	InstText: color = 'white (named)'
24.0590 	EXP 	InstText: pos = array([0., 0.])
24.0590 	EXP 	InstText: text = 'Finally, after reading the scenario you will be making decisions about, you will be given a regulation strategy. Please employ this regulation strategy when making your decisions. \n\nYou will be instructed to either "DE-EMPHASIZE" or "EMPHASIZE." When you see the word "DE-EMPHASIZE," we would like you to reinterpret the upcoming decision as one of many opportunities, and that the outcome is not very important. Try to think that the decision is not a big deal; you will have other chances.\n\nWhen you see the word "EMPHASIZE" we would like you to stress the importance of the upcoming decision. Please reinterpret the upcoming decision as very important and one in which you need to make the right choice. Try to think that it matters a lot what you choose. '
24.0590 	EXP 	InstText: font = 'Arial'
24.0590 	EXP 	InstText: height = 0.04
24.0590 	EXP 	InstText: autoDraw = True
24.0590 	EXP 	InstText: text = 'Finally, after reading the scenario you will be making decisions about, you will be given a regulation strategy. Please employ this regulation strategy when making your decisions. \n\nYou will be instructed to either "DE-EMPHASIZE" or "EMPHASIZE." When you see the word "DE-EMPHASIZE," we would like you to reinterpret the upcoming decision as one of many opportunities, and that the outcome is not very important. Try to think that the decision is not a big deal; you will have other chances.\n\nWhen you see the word "EMPHASIZE" we would like you to stress the importance of the upcoming decision. Please reinterpret the upcoming decision as very important and one in which you need to make the right choice. Try to think that it matters a lot what you choose. '
24.6841 	EXP 	New trial (rep=0, index=7): OrderedDict([('Instructions', "When you are done reading this screen you will begin a practice scenario. \n\nOnce again, you can press SPACE to advance through the first five screens. Then you will encounter a number of trials which you will decide if you want to implement an action or not, by pressing the 'y' or 'n' key.\n\nPress SPACE to begin the practice trials!\n")])
24.7511 	DATA 	Keypress: space
24.7556 	EXP 	InstText: autoDraw = False
24.7556 	EXP 	InstText: color = 'white (named)'
24.7556 	EXP 	InstText: pos = array([0., 0.])
24.7556 	EXP 	InstText: text = "When you are done reading this screen you will begin a practice scenario. \n\nOnce again, you can press SPACE to advance through the first five screens. Then you will encounter a number of trials which you will decide if you want to implement an action or not, by pressing the 'y' or 'n' key.\n\nPress SPACE to begin the practice trials!\n"
24.7556 	EXP 	InstText: font = 'Arial'
24.7556 	EXP 	InstText: height = 0.04
24.7556 	EXP 	InstText: autoDraw = True
24.7556 	EXP 	InstText: text = "When you are done reading this screen you will begin a practice scenario. \n\nOnce again, you can press SPACE to advance through the first five screens. Then you will encounter a number of trials which you will decide if you want to implement an action or not, by pressing the 'y' or 'n' key.\n\nPress SPACE to begin the practice trials!\n"
25.3848 	DATA 	Keypress: space
25.4045 	EXP 	Imported moralRows.csv as conditions, 1 conditions, 3 params
25.4046 	EXP 	Created sequence: sequential, trialTypes=1, nReps=1, seed=None
25.4048 	EXP 	New trial (rep=0, index=0): OrderedDict([('rows', '000:005'), ('CueInstructions1', 'EMPHASIZE'), ('CueInstructions2', 'DE-EMPHASIZE')])
25.4126 	EXP 	InstText: autoDraw = False
25.4126 	EXP 	isi: autoDraw = True
27.4203 	EXP 	Imported PracticeMoralSelfReg.xlsx as conditions, 5 conditions, 10 params
27.4207 	EXP 	Created sequence: sequential, trialTypes=5, nReps=1, seed=None
27.4212 	EXP 	New trial (rep=0, index=0): OrderedDict([('PracticeDilemmas', "• You are the head of a safety crew that has been alerted about a group of skydivers that is wearing defective parachutes and is currently in a freefall \n\n• You've arrived in time to see that a group of divers is holding onto one another and will fall to their death a few feet to your right unless your crew's trampoline is moved beneath them"), ('PracticeLeftText', 'Skydivers on right: 6'), ('PracticeRightText', 'Probability of \nparachute opening: 35% '), ('Reminder', 'Plan: Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'), ('ChoseNothing', 'The 3 skydivers on the left were saved.\n \nThe '), ('ChosePlan', 'The 3 skydivers on the left died.\n\nThe 6 skydivers on the right were saved.'), ('GroupNumber', 6), ('GroupProb', 35), ('Noun', ' skydivers on the right'), ('sureGroupText', 'Skydivers on the left: 3')])
27.4801 	EXP 	isi: autoDraw = False
27.4801 	EXP 	isi: autoDraw = False
27.4801 	EXP 	practiceQs: text = "• You are the head of a safety crew that has been alerted about a group of skydivers that is wearing defective parachutes and is currently in a freefall \n\n• You've arrived in time to see that a group of divers is holding onto one another and will fall to their death a few feet to your right unless your crew's trampoline is moved beneath them"
27.4801 	EXP 	practiceQs: autoDraw = True
29.8722 	EXP 	New trial (rep=0, index=1): OrderedDict([('PracticeDilemmas', "• Your crew sees a smaller group of divers apart from the rest who are much closer to reaching the ground, and instinctively moves a few feet to the left to catch them\n\n• You know that there won't be enough time to reach the group on the right if you wait to catch the group on the left"), ('PracticeLeftText', 'Skydivers on right: 9'), ('PracticeRightText', 'Probability of \nparachute opening: 50% '), ('Reminder', 'Plan: Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'), ('ChoseNothing', 'The 4 skydivers on the left were saved.\n \nThe '), ('ChosePlan', 'The 4 skydivers on the left died.\n\nThe 9 skydivers on the right were saved.'), ('GroupNumber', 9), ('GroupProb', 50), ('Noun', ' skydivers on the right'), ('sureGroupText', 'Skydivers on the left: 4')])
29.9094 	DATA 	Keypress: space
29.9145 	EXP 	practiceQs: autoDraw = False
29.9145 	EXP 	practiceQs: text = "• Your crew sees a smaller group of divers apart from the rest who are much closer to reaching the ground, and instinctively moves a few feet to the left to catch them\n\n• You know that there won't be enough time to reach the group on the right if you wait to catch the group on the left"
29.9145 	EXP 	practiceQs: autoDraw = True
30.0888 	DATA 	Keypress: space
30.1056 	EXP 	New trial (rep=0, index=2): OrderedDict([('PracticeDilemmas', "• If nothing is done, the safety crew will catch the divers to the left, avoiding their death, but the separate group of divers will land on the ground, causing their deaths\n\n• You can re-direct your crew to the right, preventing the death of the group, but the divers on the left won't be caught"), ('PracticeLeftText', 'Skydivers on right: 5'), ('PracticeRightText', 'Probability of \nparachute opening: 50% '), ('Reminder', 'Plan: Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'), ('ChoseNothing', 'The 2 skydivers on the left were saved.\n \nThe '), ('ChosePlan', 'The 2 skydivers on the left died.\n\nThe 5 skydivers on the right were saved.'), ('GroupNumber', 5), ('GroupProb', 50), ('Noun', ' skydivers on the right'), ('sureGroupText', 'Skydivers on the left: 2')])
30.1516 	EXP 	practiceQs: autoDraw = False
30.1516 	EXP 	practiceQs: text = "• If nothing is done, the safety crew will catch the divers to the left, avoiding their death, but the separate group of divers will land on the ground, causing their deaths\n\n• You can re-direct your crew to the right, preventing the death of the group, but the divers on the left won't be caught"
30.1516 	EXP 	practiceQs: autoDraw = True
30.3889 	EXP 	New trial (rep=0, index=3): OrderedDict([('PracticeDilemmas', '• You also know that there is a chance that one of the parachutes of the group will still open in time to prevent all of their deaths\n\n• There is no chance that the parachute will open for the one diver, given how close he is to the ground'), ('PracticeLeftText', 'Skydivers on right: 4'), ('PracticeRightText', 'Probability of \nparachute opening: 65% '), ('Reminder', 'Plan: Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'), ('ChoseNothing', 'The 3 skydivers on the left were saved.\n \nThe '), ('ChosePlan', 'The 3 skydivers on the left died.\n\nThe 4 skydivers on the right were saved.'), ('GroupNumber', 4), ('GroupProb', 65), ('Noun', ' skydivers on the right'), ('sureGroupText', 'Skydivers on the left: 3')])
30.4197 	DATA 	Keypress: space
30.4247 	EXP 	practiceQs: autoDraw = False
30.4247 	EXP 	practiceQs: text = '• You also know that there is a chance that one of the parachutes of the group will still open in time to prevent all of their deaths\n\n• There is no chance that the parachute will open for the one diver, given how close he is to the ground'
30.4247 	EXP 	practiceQs: autoDraw = True
30.6722 	EXP 	New trial (rep=0, index=4): OrderedDict([('PracticeDilemmas', 'Consider each of the following scenarios and, for each one, determine if you will:\n\nImplement the plan:  Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nOR\n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'), ('PracticeLeftText', 'Skydivers on right: 8'), ('PracticeRightText', 'Probability of \nparachute opening: 65% '), ('Reminder', 'Plan: Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'), ('ChoseNothing', 'The 5 skydivers on the left were saved.\n \nThe '), ('ChosePlan', 'The 5 skydivers on the left died.\n\nThe 8 skydivers on the right were saved.'), ('GroupNumber', 8), ('GroupProb', 65), ('Noun', ' skydivers on the right'), ('sureGroupText', 'Skydivers on the left: 5')])
30.7227 	DATA 	Keypress: space
30.7273 	EXP 	practiceQs: autoDraw = False
30.7273 	EXP 	practiceQs: text = 'Consider each of the following scenarios and, for each one, determine if you will:\n\nImplement the plan:  Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nOR\n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'
30.7273 	EXP 	practiceQs: autoDraw = True
31.8757 	DATA 	Keypress: space
31.8853 	EXP 	practiceQs: autoDraw = False
31.8853 	EXP 	isi: autoDraw = True
33.9066 	EXP 	isi: autoDraw = False
33.9066 	EXP 	isi: autoDraw = False
33.9066 	EXP 	cue: text = 'EMPHASIZE'
33.9066 	EXP 	cue: text = 'DE-EMPHASIZE'
33.9066 	EXP 	cue: autoDraw = True
36.9066 	EXP 	Imported PracticeMoralSelfReg.xlsx as conditions, 5 conditions, 10 params
36.9070 	EXP 	Created sequence: sequential, trialTypes=5, nReps=1, seed=None
36.9075 	EXP 	New trial (rep=0, index=0): OrderedDict([('PracticeDilemmas', "• You are the head of a safety crew that has been alerted about a group of skydivers that is wearing defective parachutes and is currently in a freefall \n\n• You've arrived in time to see that a group of divers is holding onto one another and will fall to their death a few feet to your right unless your crew's trampoline is moved beneath them"), ('PracticeLeftText', 'Skydivers on right: 6'), ('PracticeRightText', 'Probability of \nparachute opening: 35% '), ('Reminder', 'Plan: Direct your crew to the right, repositioning the trampoline and leaving the skydivers on the left to die \n\nDo nothing: The skydivers on the left will live, the group on the right  has a chance of surviving'), ('ChoseNothing', 'The 3 skydivers on the left were saved.\n \nThe '), ('ChosePlan', 'The 3 skydivers on the left died.\n\nThe 6 skydivers on the right were saved.'), ('GroupNumber', 6), ('GroupProb', 35), ('Noun', ' skydivers on the right'), ('sureGroupText', 'Skydivers on the left: 3')])
36.9135 	EXP 	cue: autoDraw = False
36.9135 	EXP 	isi: autoDraw = True
38.9332 	EXP 	isi: autoDraw = False
38.9332 	EXP 	conBlank: text = ''
38.9332 	EXP 	leftText: text = 'Skydivers on right: 6'
38.9332 	EXP 	rightText: text = 'Probability of \nparachute opening: 35% '
38.9332 	EXP 	Yes: text = "Implement the plan ('y')"
38.9332 	EXP 	No: text = "Do nothing ('n')"
38.9332 	EXP 	sureGroup: text = 'Skydivers on the left: 3'
38.9332 	EXP 	leftText: autoDraw = True
38.9332 	EXP 	rightText: autoDraw = True
38.9332 	EXP 	Yes: autoDraw = True
38.9332 	EXP 	No: autoDraw = True
38.9332 	EXP 	sureGroup: autoDraw = True
49.9715 	DATA 	Keypress: n
49.9836 	EXP 	conBlank: autoDraw = True
49.9836 	EXP 	No: color = 'red (named)'
50.0008 	EXP 	No: color = 'red (named)'
50.0174 	EXP 	No: color = 'red (named)'
50.0339 	EXP 	No: color = 'red (named)'
50.0506 	EXP 	No: color = 'red (named)'
50.0672 	EXP 	No: color = 'red (named)'
50.0842 	EXP 	No: color = 'red (named)'
50.1006 	EXP 	No: color = 'red (named)'
50.1171 	EXP 	No: color = 'red (named)'
50.1340 	EXP 	No: color = 'red (named)'
50.1510 	EXP 	No: color = 'red (named)'
50.1673 	EXP 	No: color = 'red (named)'
50.1841 	EXP 	No: color = 'red (named)'
50.2009 	EXP 	No: color = 'red (named)'
50.2174 	EXP 	No: color = 'red (named)'
50.2339 	EXP 	No: color = 'red (named)'
50.2509 	EXP 	No: color = 'red (named)'
50.2676 	EXP 	No: color = 'red (named)'
50.2839 	EXP 	No: color = 'red (named)'
50.3009 	EXP 	No: color = 'red (named)'
50.3176 	EXP 	No: color = 'red (named)'
50.3342 	EXP 	No: color = 'red (named)'
50.3509 	EXP 	No: color = 'red (named)'
50.3674 	EXP 	No: color = 'red (named)'
50.3841 	EXP 	No: color = 'red (named)'
50.4006 	EXP 	No: color = 'red (named)'
50.4188 	EXP 	No: color = 'red (named)'
50.4343 	EXP 	No: color = 'red (named)'
50.4507 	EXP 	No: color = 'red (named)'
50.4675 	EXP 	No: color = 'red (named)'
50.4843 	EXP 	No: color = 'red (named)'
50.5011 	EXP 	No: color = 'red (named)'
50.5178 	EXP 	No: color = 'red (named)'
50.5344 	EXP 	No: color = 'red (named)'
50.5513 	EXP 	No: color = 'red (named)'
50.5674 	EXP 	No: color = 'red (named)'
50.5844 	EXP 	No: color = 'red (named)'
50.6013 	EXP 	No: color = 'red (named)'
50.6176 	EXP 	No: color = 'red (named)'
50.6343 	EXP 	No: color = 'red (named)'
50.6508 	EXP 	No: color = 'red (named)'
50.6678 	EXP 	No: color = 'red (named)'
50.6844 	EXP 	No: color = 'red (named)'
50.7012 	EXP 	No: color = 'red (named)'
50.7175 	EXP 	No: color = 'red (named)'
50.7344 	EXP 	No: color = 'red (named)'
50.7514 	EXP 	No: color = 'red (named)'
50.7681 	EXP 	No: color = 'red (named)'
50.7842 	EXP 	No: color = 'red (named)'
50.8011 	EXP 	No: color = 'red (named)'
50.8179 	EXP 	No: color = 'red (named)'
50.8346 	EXP 	No: color = 'red (named)'
50.8510 	EXP 	No: color = 'red (named)'
50.8677 	EXP 	No: color = 'red (named)'
50.8847 	EXP 	No: color = 'red (named)'
50.9014 	EXP 	No: color = 'red (named)'
50.9180 	EXP 	No: color = 'red (named)'
50.9347 	EXP 	No: color = 'red (named)'
50.9514 	EXP 	No: color = 'red (named)'
50.9681 	EXP 	No: color = 'red (named)'
50.9846 	EXP 	No: color = 'red (named)'
51.0013 	EXP 	No: color = 'red (named)'
51.0181 	EXP 	No: color = 'red (named)'
51.0346 	EXP 	No: color = 'red (named)'
51.0518 	EXP 	No: color = 'red (named)'
51.0679 	EXP 	No: color = 'red (named)'
51.0849 	EXP 	No: color = 'red (named)'
51.1015 	EXP 	No: color = 'red (named)'
51.1185 	EXP 	No: color = 'red (named)'
51.1347 	EXP 	No: color = 'red (named)'
51.1514 	EXP 	No: color = 'red (named)'
51.1685 	EXP 	No: color = 'red (named)'
51.1848 	EXP 	No: color = 'red (named)'
51.2016 	EXP 	No: color = 'red (named)'
51.2181 	EXP 	No: color = 'red (named)'
51.2348 	EXP 	No: color = 'red (named)'
51.2514 	EXP 	No: color = 'red (named)'
51.2683 	EXP 	No: color = 'red (named)'
51.2850 	EXP 	No: color = 'red (named)'
51.3018 	EXP 	No: color = 'red (named)'
51.3184 	EXP 	No: color = 'red (named)'
51.3350 	EXP 	No: color = 'red (named)'
51.3518 	EXP 	No: color = 'red (named)'
51.3685 	EXP 	No: color = 'red (named)'
51.3851 	EXP 	No: color = 'red (named)'
51.4017 	EXP 	No: color = 'red (named)'
51.4193 	EXP 	No: color = 'red (named)'
51.4350 	EXP 	No: color = 'red (named)'
51.4515 	EXP 	No: color = 'red (named)'
51.4686 	EXP 	No: color = 'red (named)'
51.4854 	EXP 	No: color = 'red (named)'
51.5021 	EXP 	No: color = 'red (named)'
51.5186 	EXP 	No: color = 'red (named)'
51.5352 	EXP 	No: color = 'red (named)'
51.5520 	EXP 	No: color = 'red (named)'
51.5685 	EXP 	No: color = 'red (named)'
51.5851 	EXP 	No: color = 'red (named)'
51.6020 	EXP 	No: color = 'red (named)'
51.6190 	EXP 	No: color = 'red (named)'
51.6350 	EXP 	No: color = 'red (named)'
51.6522 	EXP 	No: color = 'red (named)'
51.6687 	EXP 	No: color = 'red (named)'
51.6852 	EXP 	No: color = 'red (named)'
51.7019 	EXP 	No: color = 'red (named)'
51.7187 	EXP 	No: color = 'red (named)'
51.7354 	EXP 	No: color = 'red (named)'
51.7522 	EXP 	No: color = 'red (named)'
51.7687 	EXP 	No: color = 'red (named)'
51.7852 	EXP 	No: color = 'red (named)'
51.8024 	EXP 	No: color = 'red (named)'
51.8187 	EXP 	No: color = 'red (named)'
51.8355 	EXP 	No: color = 'red (named)'
51.8519 	EXP 	No: color = 'red (named)'
51.8688 	EXP 	No: color = 'red (named)'
51.8857 	EXP 	No: color = 'red (named)'
51.9022 	EXP 	No: color = 'red (named)'
51.9189 	EXP 	No: color = 'red (named)'
51.9355 	EXP 	No: color = 'red (named)'
51.9523 	EXP 	No: color = 'red (named)'
51.9689 	EXP 	No: color = 'red (named)'
51.9859 	EXP 	conBlank: autoDraw = False
51.9859 	EXP 	leftText: autoDraw = False
51.9859 	EXP 	rightText: autoDraw = False
51.9859 	EXP 	Yes: autoDraw = False
51.9859 	EXP 	No: autoDraw = False
51.9859 	EXP 	No: color = 'red (named)'
51.9859 	EXP 	sureGroup: autoDraw = False
51.9859 	EXP 	conBlank: autoDraw = False
51.9859 	EXP 	leftText: autoDraw = False
51.9859 	EXP 	rightText: autoDraw = False
51.9859 	EXP 	Yes: autoDraw = False
51.9859 	EXP 	No: autoDraw = False
51.9859 	EXP 	sureGroup: autoDraw = False
51.9859 	EXP 	Yes: color = 'white (named)'
51.9859 	EXP 	No: color = 'white (named)'
51.9859 	EXP 	leftText: autoDraw = False
51.9859 	EXP 	rightText: autoDraw = False
51.9859 	EXP 	Yes: autoDraw = False
51.9859 	EXP 	No: autoDraw = False
51.9859 	EXP 	sureGroup: autoDraw = False
51.9859 	EXP 	isi: autoDraw = True
54.0317 	EXP 	isi: autoDraw = False
54.0317 	EXP 	isi: autoDraw = False
54.0317 	EXP 	FeedbackVar: color = 'white (named)'
54.0317 	EXP 	FeedbackVar: pos = array([0., 0.])
54.0317 	EXP 	FeedbackVar: text = 'default'
54.0317 	EXP 	FeedbackVar: font = 'Arial'
54.0317 	EXP 	FeedbackVar: height = 0.07
54.0317 	EXP 	FeedbackVar: text = 'The 3 skydivers on the left were saved.\n \nThe 6 skydivers on the right were saved.'
54.0317 	EXP 	FeedbackVar: autoDraw = True
54.7742 	DATA 	Keypress: escape
54.9114 	EXP 	window1: mouseVisible = True
