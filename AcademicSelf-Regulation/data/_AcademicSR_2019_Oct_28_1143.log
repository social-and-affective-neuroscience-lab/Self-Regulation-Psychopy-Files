4.6840 	WARNING 	User requested fullscreen with size [1024  768], but screen is actually [1920, 1200]. Using actual size
5.9912 	EXP 	Created window1 = Window(allowGUI=False, allowStencil=False, args=UNKNOWN, autoLog=True, bitsMode=UNKNOWN, blendMode='avg', color=array([0., 0., 0.]), colorSpace='rgb', fullscr=<method-wrapper '__getattribute__' of attributeSetter object at 0x000002378A403EF0>, gamma=None, gammaErrorPolicy='raise', kwargs=UNKNOWN, lms=UNKNOWN, monitor=<psychopy.monitors.calibTools.Monitor object at 0x000002378A32FBE0>, multiSample=False, name='window1', numSamples=2, pos=[0.0, 0.0], screen=0, size=array([1920, 1200]), stereo=False, units='height', useFBO=True, useRetina=False, viewOri=0.0, viewPos=None, viewScale=None, waitBlanking=True, winType='pyglet')
5.9912 	EXP 	window1: recordFrameIntervals = False
6.1578 	EXP 	window1: recordFrameIntervals = True
6.3408 	EXP 	window1: recordFrameIntervals = False
6.5641 	EXP 	Created instruct = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='instruct', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.4)
6.5835 	EXP 	Created regCue = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='regCue', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='REGULATE', units='height', win=Window(...), wrapWidth=1)
6.6004 	EXP 	Created choiceQ = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='choiceQ', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.4)
6.6151 	EXP 	Created testChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.04, italic=False, languageStyle='LTR', name='testChoice', opacity=1.0, ori=0, pos=array([-0.41,  0.15]), rgb=array([255., 255., 255.]), text='Practice Standardized Test Questions', units='height', win=Window(...), wrapWidth=1)
6.6216 	EXP 	Created videogameChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.04, italic=False, languageStyle='LTR', name='videogameChoice', opacity=1.0, ori=0, pos=array([0.41, 0.15]), rgb=array([255., 255., 255.]), text='Play a Videogame', units='height', win=Window(...), wrapWidth=1)
6.6354 	EXP 	Created gre = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, image='gre.png', interpolate=True, mask=None, maskParams=None, name='gre', opacity=1.0, ori=0.0, pos=array([-0.41,  0.02]), size=array([0.3  , 0.105]), texRes=128, units='height', win=Window(...))
6.6437 	EXP 	Created gmat = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, image='gmat.png', interpolate=True, mask=None, maskParams=None, name='gmat', opacity=1.0, ori=0.0, pos=array([-0.41, -0.13]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.6456 	EXP 	Created lsat = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-6.0, flipHoriz=False, flipVert=False, image='lsat.png', interpolate=True, mask=None, maskParams=None, name='lsat', opacity=1.0, ori=0.0, pos=array([-0.41, -0.27]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.6878 	EXP 	Created game = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-7.0, flipHoriz=False, flipVert=False, image='game.png', interpolate=True, mask=None, maskParams=None, name='game', opacity=1.0, ori=0.0, pos=array([ 0.41, -0.19]), size=array([0.4, 0.5]), texRes=128, units='height', win=Window(...))
6.6883 	EXP 	Created blank = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-9.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='blank', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
6.7245 	EXP 	Created testQChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.055, italic=False, languageStyle='LTR', name='testQChoice', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.3)
6.7338 	EXP 	Created image = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-1.0, flipHoriz=False, flipVert=False, image='gre.png', interpolate=True, mask=None, maskParams=None, name='image', opacity=1.0, ori=0.0, pos=array([0.   , 0.105]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.7394 	EXP 	Created image_2 = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, image='gmat.png', interpolate=True, mask=None, maskParams=None, name='image_2', opacity=1.0, ori=0.0, pos=array([ 0.  , -0.05]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.7412 	EXP 	Created image_3 = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, image='lsat.png', interpolate=True, mask=None, maskParams=None, name='image_3', opacity=1.0, ori=0.0, pos=array([ 0. , -0.2]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.7430 	EXP 	Created polygon = Rect(__class__=<class 'psychopy.visual.rect.Rect'>, autoDraw=False, autoLog=True, closeShape=True, color=method-wrapper(...), colorSpace=None, contrast=1.0, depth=-5.0, fillColor=None, fillColorSpace='rgb', fillRGB=None, interpolate=True, lineColor=array([-1., -1., -1.]), lineColorSpace='rgb', lineRGB=array([-1., -1., -1.]), lineWidth=1.0, name='polygon', opacity=1.0, ori=array(1.), pos=array([0., 0.]), size=array([1., 1.]), units='height', vertices=ndarray(...), win=Window(...))
6.7561 	EXP 	Created TextQuestion = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.028, italic=False, languageStyle='LTR', name='TextQuestion', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.45)
6.7641 	EXP 	Created choiceA = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceA', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.7670 	EXP 	Created choiceB = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceB', opacity=1.0, ori=0, pos=array([ 0. , -0.1]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.7699 	EXP 	Created choiceC = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceC', opacity=1.0, ori=0, pos=array([ 0. , -0.2]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.7729 	EXP 	Created choiceD = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-6.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceD', opacity=1.0, ori=0, pos=array([ 0. , -0.3]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.7759 	EXP 	Created choiceE = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-7.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceE', opacity=1.0, ori=0, pos=array([ 0. , -0.4]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.7763 	EXP 	Created conBlank = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-9.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='conBlank', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
6.8565 	EXP 	Created text = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.07, italic=False, languageStyle='LTR', name='text', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1)
6.8864 	EXP 	instruct: autoDraw = True
9.5796 	EXP 	Created sequence: random, trialTypes=1, nReps=5, seed=None
9.5798 	EXP 	New trial (rep=0, index=0): None
9.5856 	DATA 	Keypress: space
9.5937 	EXP 	instruct: autoDraw = False
9.5937 	EXP 	regCue: autoDraw = True
12.6327 	EXP 	regCue: autoDraw = False
12.6327 	EXP 	regCue: autoDraw = False
12.6327 	EXP 	blank: text = ''
12.6327 	EXP 	choiceQ: autoDraw = True
12.6327 	EXP 	testChoice: autoDraw = True
12.6327 	EXP 	videogameChoice: autoDraw = True
12.6327 	EXP 	gre: autoDraw = True
12.6327 	EXP 	gmat: autoDraw = True
12.6327 	EXP 	lsat: autoDraw = True
12.6327 	EXP 	game: autoDraw = True
13.9352 	DATA 	Keypress: 1
13.9468 	EXP 	testChoice: color = 'green (named)'
13.9468 	EXP 	blank: autoDraw = True
13.9639 	EXP 	testChoice: color = 'green (named)'
13.9808 	EXP 	testChoice: color = 'green (named)'
13.9972 	EXP 	testChoice: color = 'green (named)'
14.0139 	EXP 	testChoice: color = 'green (named)'
14.0309 	EXP 	testChoice: color = 'green (named)'
14.0470 	EXP 	testChoice: color = 'green (named)'
14.0637 	EXP 	testChoice: color = 'green (named)'
14.0804 	EXP 	testChoice: color = 'green (named)'
14.0972 	EXP 	testChoice: color = 'green (named)'
14.1136 	EXP 	testChoice: color = 'green (named)'
14.1307 	EXP 	testChoice: color = 'green (named)'
14.1474 	EXP 	testChoice: color = 'green (named)'
14.1636 	EXP 	testChoice: color = 'green (named)'
14.1807 	EXP 	testChoice: color = 'green (named)'
14.1974 	EXP 	testChoice: color = 'green (named)'
14.2138 	EXP 	testChoice: color = 'green (named)'
14.2310 	EXP 	testChoice: color = 'green (named)'
14.2474 	EXP 	testChoice: color = 'green (named)'
14.2650 	EXP 	testChoice: color = 'green (named)'
14.2811 	EXP 	testChoice: color = 'green (named)'
14.2973 	EXP 	testChoice: color = 'green (named)'
14.3139 	EXP 	testChoice: color = 'green (named)'
14.3309 	EXP 	testChoice: color = 'green (named)'
14.3475 	EXP 	testChoice: color = 'green (named)'
14.3640 	EXP 	testChoice: color = 'green (named)'
14.3806 	EXP 	testChoice: color = 'green (named)'
14.3975 	EXP 	testChoice: color = 'green (named)'
14.4142 	EXP 	testChoice: color = 'green (named)'
14.4310 	EXP 	testChoice: color = 'green (named)'
14.4474 	EXP 	testChoice: color = 'green (named)'
14.4641 	EXP 	testChoice: color = 'green (named)'
14.4810 	EXP 	testChoice: color = 'green (named)'
14.4978 	EXP 	testChoice: color = 'green (named)'
14.5144 	EXP 	testChoice: color = 'green (named)'
14.5308 	EXP 	testChoice: color = 'green (named)'
14.5478 	EXP 	testChoice: color = 'green (named)'
14.5646 	EXP 	testChoice: color = 'green (named)'
14.5811 	EXP 	testChoice: color = 'green (named)'
14.5976 	EXP 	testChoice: color = 'green (named)'
14.6145 	EXP 	testChoice: color = 'green (named)'
14.6308 	EXP 	testChoice: color = 'green (named)'
14.6472 	EXP 	testChoice: color = 'green (named)'
14.6643 	EXP 	testChoice: color = 'green (named)'
14.6808 	EXP 	testChoice: color = 'green (named)'
14.6977 	EXP 	testChoice: color = 'green (named)'
14.7144 	EXP 	testChoice: color = 'green (named)'
14.7312 	EXP 	testChoice: color = 'green (named)'
14.7478 	EXP 	testChoice: color = 'green (named)'
14.7641 	EXP 	testChoice: color = 'green (named)'
14.7809 	EXP 	testChoice: color = 'green (named)'
14.7977 	EXP 	testChoice: color = 'green (named)'
14.8141 	EXP 	testChoice: color = 'green (named)'
14.8311 	EXP 	testChoice: color = 'green (named)'
14.8479 	EXP 	testChoice: color = 'green (named)'
14.8643 	EXP 	testChoice: color = 'green (named)'
14.8810 	EXP 	testChoice: color = 'green (named)'
14.8976 	EXP 	testChoice: color = 'green (named)'
14.9143 	EXP 	testChoice: color = 'green (named)'
14.9309 	EXP 	testChoice: color = 'green (named)'
14.9478 	EXP 	testChoice: color = 'green (named)'
14.9649 	EXP 	testChoice: color = 'green (named)'
14.9814 	EXP 	testChoice: color = 'green (named)'
14.9981 	EXP 	testChoice: color = 'green (named)'
15.0145 	EXP 	testChoice: color = 'green (named)'
15.0313 	EXP 	testChoice: color = 'green (named)'
15.0483 	EXP 	testChoice: color = 'green (named)'
15.0649 	EXP 	testChoice: color = 'green (named)'
15.0812 	EXP 	testChoice: color = 'green (named)'
15.0981 	EXP 	testChoice: color = 'green (named)'
15.1149 	EXP 	testChoice: color = 'green (named)'
15.1313 	EXP 	testChoice: color = 'green (named)'
15.1482 	EXP 	testChoice: color = 'green (named)'
15.1650 	EXP 	testChoice: color = 'green (named)'
15.1817 	EXP 	testChoice: color = 'green (named)'
15.1982 	EXP 	testChoice: color = 'green (named)'
15.2147 	EXP 	testChoice: color = 'green (named)'
15.2316 	EXP 	testChoice: color = 'green (named)'
15.2483 	EXP 	testChoice: color = 'green (named)'
15.2649 	EXP 	testChoice: color = 'green (named)'
15.2817 	EXP 	testChoice: color = 'green (named)'
15.2988 	EXP 	testChoice: color = 'green (named)'
15.3153 	EXP 	testChoice: color = 'green (named)'
15.3318 	EXP 	testChoice: color = 'green (named)'
15.3484 	EXP 	testChoice: color = 'green (named)'
15.3647 	EXP 	testChoice: color = 'green (named)'
15.3817 	EXP 	testChoice: color = 'green (named)'
15.3984 	EXP 	testChoice: color = 'green (named)'
15.4150 	EXP 	testChoice: color = 'green (named)'
15.4317 	EXP 	testChoice: color = 'green (named)'
15.4484 	EXP 	testChoice: color = 'green (named)'
15.4484 	EXP 	blank: autoDraw = False
15.4759 	EXP 	Imported RowsExcel.xlsx as conditions, 5 conditions, 1 params
15.4761 	EXP 	Created sequence: random, trialTypes=5, nReps=1, seed=None
15.4762 	EXP 	New trial (rep=0, index=0): OrderedDict([('Rows', '0010:0015')])
15.4864 	EXP 	choiceQ: autoDraw = False
15.4864 	EXP 	testChoice: autoDraw = False
15.4864 	EXP 	videogameChoice: autoDraw = False
15.4864 	EXP 	gre: autoDraw = False
15.4864 	EXP 	gmat: autoDraw = False
15.4864 	EXP 	lsat: autoDraw = False
15.4864 	EXP 	game: autoDraw = False
15.4864 	EXP 	testChoice: color = 'green (named)'
15.4864 	EXP 	choiceQ: autoDraw = False
15.4864 	EXP 	testChoice: autoDraw = False
15.4864 	EXP 	videogameChoice: autoDraw = False
15.4864 	EXP 	gre: autoDraw = False
15.4864 	EXP 	gmat: autoDraw = False
15.4864 	EXP 	lsat: autoDraw = False
15.4864 	EXP 	game: autoDraw = False
15.4864 	EXP 	blank: autoDraw = False
15.4864 	EXP 	videogameChoice: color = 'white (named)'
15.4864 	EXP 	testChoice: color = 'white (named)'
15.4864 	EXP 	choiceQ: autoDraw = False
15.4864 	EXP 	testChoice: autoDraw = False
15.4864 	EXP 	videogameChoice: autoDraw = False
15.4864 	EXP 	gre: autoDraw = False
15.4864 	EXP 	gmat: autoDraw = False
15.4864 	EXP 	lsat: autoDraw = False
15.4864 	EXP 	polygon: opacity = 1.0
15.4864 	EXP 	polygon: size = array([0.32, 0.13])
15.4864 	EXP 	polygon: ori = 0.0
15.4864 	EXP 	polygon: lineWidth = 8.0
15.4864 	EXP 	testQChoice: autoDraw = True
15.4864 	EXP 	image: autoDraw = True
15.4864 	EXP 	image_2: autoDraw = True
15.4864 	EXP 	image_3: autoDraw = True
16.2223 	DATA 	Keypress: 2
16.2492 	EXP 	polygon: autoDraw = True
16.2658 	EXP 	polygon: autoDraw = True
16.2826 	EXP 	polygon: autoDraw = True
16.2992 	EXP 	polygon: autoDraw = True
16.3157 	EXP 	polygon: autoDraw = True
16.3326 	EXP 	polygon: autoDraw = True
16.3492 	EXP 	polygon: autoDraw = True
16.3655 	EXP 	polygon: autoDraw = True
16.3824 	EXP 	polygon: autoDraw = True
16.3991 	EXP 	polygon: autoDraw = True
16.4159 	EXP 	polygon: autoDraw = True
16.4326 	EXP 	polygon: autoDraw = True
16.4494 	EXP 	polygon: autoDraw = True
16.4657 	EXP 	polygon: autoDraw = True
16.4825 	EXP 	polygon: autoDraw = True
16.4991 	EXP 	polygon: autoDraw = True
16.5157 	EXP 	polygon: autoDraw = True
16.5328 	EXP 	polygon: autoDraw = True
16.5495 	EXP 	polygon: autoDraw = True
16.5664 	EXP 	polygon: autoDraw = True
16.5825 	EXP 	polygon: autoDraw = True
16.5990 	EXP 	polygon: autoDraw = True
16.6162 	EXP 	polygon: autoDraw = True
16.6323 	EXP 	polygon: autoDraw = True
16.6494 	EXP 	polygon: autoDraw = True
16.6659 	EXP 	polygon: autoDraw = True
16.6825 	EXP 	polygon: autoDraw = True
16.6991 	EXP 	polygon: autoDraw = True
16.7159 	EXP 	polygon: autoDraw = True
16.7327 	EXP 	polygon: autoDraw = True
16.7493 	EXP 	polygon: autoDraw = True
16.7661 	EXP 	polygon: autoDraw = True
16.7825 	EXP 	polygon: autoDraw = True
16.7993 	EXP 	polygon: autoDraw = True
16.8160 	EXP 	polygon: autoDraw = True
16.8329 	EXP 	polygon: autoDraw = True
16.8502 	EXP 	polygon: autoDraw = True
16.8659 	EXP 	polygon: autoDraw = True
16.8829 	EXP 	polygon: autoDraw = True
16.8993 	EXP 	polygon: autoDraw = True
16.9159 	EXP 	polygon: autoDraw = True
16.9330 	EXP 	polygon: autoDraw = True
16.9497 	EXP 	polygon: autoDraw = True
16.9661 	EXP 	polygon: autoDraw = True
16.9833 	EXP 	polygon: autoDraw = True
16.9996 	EXP 	polygon: autoDraw = True
17.0162 	EXP 	polygon: autoDraw = True
17.0331 	EXP 	polygon: autoDraw = True
17.0498 	EXP 	polygon: autoDraw = True
17.0664 	EXP 	polygon: autoDraw = True
17.0728 	DATA 	Keypress: lshift
17.0833 	EXP 	polygon: autoDraw = True
17.0998 	EXP 	polygon: autoDraw = True
17.1165 	EXP 	polygon: autoDraw = True
17.1330 	EXP 	polygon: autoDraw = True
17.1499 	EXP 	polygon: autoDraw = True
17.1667 	EXP 	polygon: autoDraw = True
17.1832 	EXP 	polygon: autoDraw = True
17.1996 	EXP 	polygon: autoDraw = True
17.2167 	EXP 	polygon: autoDraw = True
17.2331 	EXP 	polygon: autoDraw = True
17.2506 	EXP 	polygon: autoDraw = True
17.2669 	EXP 	polygon: autoDraw = True
17.2832 	EXP 	polygon: autoDraw = True
17.2996 	EXP 	polygon: autoDraw = True
17.3163 	EXP 	polygon: autoDraw = True
17.3330 	EXP 	polygon: autoDraw = True
17.3501 	EXP 	polygon: autoDraw = True
17.3669 	EXP 	polygon: autoDraw = True
17.3832 	EXP 	polygon: autoDraw = True
17.4000 	EXP 	polygon: autoDraw = True
17.4167 	EXP 	polygon: autoDraw = True
17.4335 	EXP 	polygon: autoDraw = True
17.4502 	EXP 	polygon: autoDraw = True
17.4705 	EXP 	Imported QuestionsText.xlsx as conditions, 5 conditions, 21 params
17.4707 	EXP 	Created sequence: sequential, trialTypes=5, nReps=1, seed=None
17.4710 	EXP 	New trial (rep=0, index=0): OrderedDict([('GMAT', '1)During the last 50 years in England, the national football team has had at least 60℅ of its players born during the months January to March. Similarly, in Germany, at least 50℅ of the team has been born during the first three months of the year. In fact, this statistic holds true for most European countries. This shows that in most European countries, parents with kids born early in the year are more likely to encourage a football career.\n\nWhich of the following best explains why the conclusion need not be the best explanation for the statistic?'), ('GMATQA', '(A)Of the remaining members, 60℅ or more tend to be born between the months of April and June.'), ('GMATQB', '(B)Parents of kids born in the second half of the year have displayed a measurable intent to promote scholarly careers'), ('GMATQC', '(C)The age cut-off for kids to try out for a team in most European countries is calculated as on December 31 of any year and older the kid during trials, greater the chances of getting the right opportunities.'), ('GMATQD', '(D)The school year usually begins in April in most European countries and many parents are known to encourage students to work on their academics and not sports during the school year.'), ('GMATQE', '(E)During the last 50 years, on average 30℅ of the kids have been born during the first three months of the year.\n'), ('GMATAs', 'c'), ('GRE', '1)As an experienced labor organizer and the former head of one of the nation’s most powerful labor unions, Grayson is an excellent choice to chair the new council on business-labor relations.\n\nWhich of the following, if true, would most strengthen the conclusion above?'), ('GREQA', "(A) The new council must have the support of the nation's labor leaders if it is to succeed. "), ('GREQB', '(B)During his years as a labor leader, Grayson established a record of good relations with business leaders. '), ('GREQC', "(C)The chair of the new council must be a person who can communicate directly with the leaders of the nation's largest labor unions. "), ('GREQD', '(D)Most of the other members of the new council will be representatives of business management interests.'), ('GREQE', '(E) An understanding of the needs and problems of labor is the only quallification necessary for the job of chairing the new council. '), ('GREA', 'e'), ('LSAT', '1)Biologists attached a radio transmitter to one of a number of wolves that had been released earlier in the White River Wilderness Area as part of a relocation project. The biologists hoped to use this wolf to track the movements of the whole pack. Wolves usually range over a wide area in search of prey, and frequently follow the migrations of their prey animals. The biologists were surprised to find that this particular wolf never moved more than five miles away from the location in which it was first tagged.\n\n\nWhich one of the following, if true, would by itself most help to explain the behavior of the wolf tagged by the biologists?'), ('LSATQA', '(A)The area in which the wolves were released was rocky and mountainous, in contrast to the flat, heavily-wooded area from which they were taken. '), ('LSATQB', '(B)The wolf had been tagged and released by the biologists only three miles away from a sheep ranch that provided a large, stable population of prey animals.'), ('LSATQC', '(C)The White River Wilderness Area had supported a population of wolves in past years, but they had been hunted to extinction.'), ('LSATQD', '(D) Although the wolves in the White River Wilderness Area were under government protection, their numbers had been sharply reduced, within a few years of their release, by illegal hunting.'), ('LSATQE', '(E)The wolf captured and tagged by the biologists had split off from the main pack whose movements the biologists had hoped to study, and its movements did not represent those of the main pack.'), ('LSATAs', 'b')])
17.6115 	DATA 	Keypress: return
17.6170 	EXP 	polygon: autoDraw = True
17.6170 	EXP 	testQChoice: autoDraw = False
17.6170 	EXP 	image: autoDraw = False
17.6170 	EXP 	image_2: autoDraw = False
17.6170 	EXP 	image_3: autoDraw = False
17.6170 	EXP 	polygon: autoDraw = False
17.6170 	EXP 	TextQuestion: text = 'PLACEHOLDER'
17.6170 	EXP 	choiceA: text = 'QA'
17.6170 	EXP 	choiceB: text = 'QB'
17.6170 	EXP 	choiceC: text = 'QC'
17.6170 	EXP 	choiceD: text = 'QD'
17.6170 	EXP 	choiceE: text = 'QE'
17.6170 	EXP 	TextQuestion: text = '1)During the last 50 years in England, the national football team has had at least 60℅ of its players born during the months January to March. Similarly, in Germany, at least 50℅ of the team has been born during the first three months of the year. In fact, this statistic holds true for most European countries. This shows that in most European countries, parents with kids born early in the year are more likely to encourage a football career.\n\nWhich of the following best explains why the conclusion need not be the best explanation for the statistic?'
17.6170 	EXP 	choiceA: text = '(A)Of the remaining members, 60℅ or more tend to be born between the months of April and June.'
17.6170 	EXP 	choiceB: text = '(B)Parents of kids born in the second half of the year have displayed a measurable intent to promote scholarly careers'
17.6170 	EXP 	choiceC: text = '(C)The age cut-off for kids to try out for a team in most European countries is calculated as on December 31 of any year and older the kid during trials, greater the chances of getting the right opportunities.'
17.6170 	EXP 	choiceD: text = '(D)The school year usually begins in April in most European countries and many parents are known to encourage students to work on their academics and not sports during the school year.'
17.6170 	EXP 	choiceE: text = '(E)During the last 50 years, on average 30℅ of the kids have been born during the first three months of the year.\n'
17.6170 	EXP 	TextQuestion: autoDraw = True
17.6170 	EXP 	choiceA: autoDraw = True
17.6170 	EXP 	choiceB: autoDraw = True
17.6170 	EXP 	choiceC: autoDraw = True
17.6170 	EXP 	choiceD: autoDraw = True
17.6170 	EXP 	choiceE: autoDraw = True
19.4256 	DATA 	Keypress: a
22.8445 	DATA 	Keypress: return
22.8709 	EXP 	choiceA: color = 'red (named)'
22.8709 	EXP 	conBlank: autoDraw = True
22.8876 	EXP 	choiceA: color = 'red (named)'
22.9042 	EXP 	choiceA: color = 'red (named)'
22.9209 	EXP 	choiceA: color = 'red (named)'
22.9377 	EXP 	choiceA: color = 'red (named)'
22.9544 	EXP 	choiceA: color = 'red (named)'
22.9711 	EXP 	choiceA: color = 'red (named)'
22.9878 	EXP 	choiceA: color = 'red (named)'
23.0045 	EXP 	choiceA: color = 'red (named)'
23.0208 	EXP 	choiceA: color = 'red (named)'
23.0381 	EXP 	choiceA: color = 'red (named)'
23.0546 	EXP 	choiceA: color = 'red (named)'
23.0713 	EXP 	choiceA: color = 'red (named)'
23.0881 	EXP 	choiceA: color = 'red (named)'
23.1048 	EXP 	choiceA: color = 'red (named)'
23.1214 	EXP 	choiceA: color = 'red (named)'
23.1378 	EXP 	choiceA: color = 'red (named)'
23.1545 	EXP 	choiceA: color = 'red (named)'
23.1717 	EXP 	choiceA: color = 'red (named)'
23.1881 	EXP 	choiceA: color = 'red (named)'
23.2048 	EXP 	choiceA: color = 'red (named)'
23.2214 	EXP 	choiceA: color = 'red (named)'
23.2382 	EXP 	choiceA: color = 'red (named)'
23.2547 	EXP 	choiceA: color = 'red (named)'
23.2714 	EXP 	choiceA: color = 'red (named)'
23.2881 	EXP 	choiceA: color = 'red (named)'
23.3048 	EXP 	choiceA: color = 'red (named)'
23.3214 	EXP 	choiceA: color = 'red (named)'
23.3381 	EXP 	choiceA: color = 'red (named)'
23.3549 	EXP 	choiceA: color = 'red (named)'
23.3713 	EXP 	choiceA: color = 'red (named)'
23.3884 	EXP 	choiceA: color = 'red (named)'
23.4050 	EXP 	choiceA: color = 'red (named)'
23.4215 	EXP 	choiceA: color = 'red (named)'
23.4386 	EXP 	choiceA: color = 'red (named)'
23.4549 	EXP 	choiceA: color = 'red (named)'
23.4716 	EXP 	choiceA: color = 'red (named)'
23.4882 	EXP 	choiceA: color = 'red (named)'
23.5051 	EXP 	choiceA: color = 'red (named)'
23.5216 	EXP 	choiceA: color = 'red (named)'
23.5383 	EXP 	choiceA: color = 'red (named)'
23.5550 	EXP 	choiceA: color = 'red (named)'
23.5715 	EXP 	choiceA: color = 'red (named)'
23.5883 	EXP 	choiceA: color = 'red (named)'
23.6052 	EXP 	choiceA: color = 'red (named)'
23.6218 	EXP 	choiceA: color = 'red (named)'
23.6384 	EXP 	choiceA: color = 'red (named)'
23.6549 	EXP 	choiceA: color = 'red (named)'
23.6714 	EXP 	choiceA: color = 'red (named)'
23.6883 	EXP 	choiceA: color = 'red (named)'
23.7049 	EXP 	choiceA: color = 'red (named)'
23.7216 	EXP 	choiceA: color = 'red (named)'
23.7384 	EXP 	choiceA: color = 'red (named)'
23.7551 	EXP 	choiceA: color = 'red (named)'
23.7717 	EXP 	choiceA: color = 'red (named)'
23.7883 	EXP 	choiceA: color = 'red (named)'
23.8051 	EXP 	choiceA: color = 'red (named)'
23.8217 	EXP 	choiceA: color = 'red (named)'
23.8390 	EXP 	choiceA: color = 'red (named)'
23.8549 	EXP 	choiceA: color = 'red (named)'
23.8720 	EXP 	choiceA: color = 'red (named)'
23.8882 	EXP 	choiceA: color = 'red (named)'
23.9053 	EXP 	choiceA: color = 'red (named)'
23.9218 	EXP 	choiceA: color = 'red (named)'
23.9385 	EXP 	choiceA: color = 'red (named)'
23.9552 	EXP 	choiceA: color = 'red (named)'
23.9718 	EXP 	choiceA: color = 'red (named)'
23.9886 	EXP 	choiceA: color = 'red (named)'
24.0053 	EXP 	choiceA: color = 'red (named)'
24.0221 	EXP 	choiceA: color = 'red (named)'
24.0387 	EXP 	choiceA: color = 'red (named)'
24.0553 	EXP 	choiceA: color = 'red (named)'
24.0737 	EXP 	choiceA: color = 'red (named)'
24.0889 	EXP 	choiceA: color = 'red (named)'
24.1054 	EXP 	choiceA: color = 'red (named)'
24.1221 	EXP 	choiceA: color = 'red (named)'
24.1387 	EXP 	choiceA: color = 'red (named)'
24.1553 	EXP 	choiceA: color = 'red (named)'
24.1720 	EXP 	choiceA: color = 'red (named)'
24.1887 	EXP 	choiceA: color = 'red (named)'
24.2054 	EXP 	choiceA: color = 'red (named)'
24.2221 	EXP 	choiceA: color = 'red (named)'
24.2388 	EXP 	choiceA: color = 'red (named)'
24.2556 	EXP 	choiceA: color = 'red (named)'
24.2722 	EXP 	choiceA: color = 'red (named)'
24.2887 	EXP 	choiceA: color = 'red (named)'
24.3053 	EXP 	choiceA: color = 'red (named)'
24.3222 	EXP 	choiceA: color = 'red (named)'
24.3389 	EXP 	choiceA: color = 'red (named)'
24.3559 	EXP 	choiceA: color = 'red (named)'
24.3726 	EXP 	choiceA: color = 'red (named)'
24.3726 	EXP 	conBlank: autoDraw = False
24.3762 	EXP 	New trial (rep=0, index=1): OrderedDict([('GMAT', '2) Studies have established that children who watched 2 more hours of TV on an average daily basis during the first 15 years of their life were 50℅ more likely to be arrested for property crimes in the country. Researchers believe that these studies clearly establish that violence in movies and TV contribute to aggressive behavior in real life. On the other hand, there is no clear evidence that the programs that the kids watched on TV were violent in the first place. Even if we were to accept that TV watching contributed to the increased crime rate, it need not have been because of the nature of the programs. Perhaps, children who watched programs such as Adams and Samson, a funny sit-com about two blundering cops began perceiving all cops as incompetent.\n\nWhat is the role of the underlined sentences?'), ('GMATQA', "(A)The first establishes a theory that the author later clearly refutes while the second presents the author's conclusion"), ('GMATQB', '(B)The first is an interpretation made by researchers that the author contends against and the second provides an alternative explanation for statistical data'), ('GMATQC', "(C)The first is an opinion expressed by someone other than the author and which the author is completely in disagreement with while the second provides the reason for the author's doubt"), ('GMATQD', "(D)The first is a fact supporting the researcher's conclusion while the second is the author's conclusion."), ('GMATQE', '(E)The first is a clearly proven opinion even if the author disagrees with it while the second is an ambiguous opinion that has no supporting data'), ('GMATAs', 'b'), ('GRE', "2) Ronald: According to my analysis of the national economy, housing prices should not increase during the next six months unless interest rates drop significantly.\n\nMark: I disagree. One year ago, when interest rates last fell significantly, housing prices did not increase at all.\n\nIt can be inferred from the conversation above that Mark has interpreted Ronald's statement to mean that "), ('GREQA', '(A)Housing prices will rise only if interest rates fall.'), ('GREQB', '(B)If interest rates fall, housing prices must rise. '), ('GREQC', '(C)Interest rates and housing prices tend to rise and fall together.'), ('GREQD', '(D) Interest rates are the only significant economic factor affecting housing prices. '), ('GREQE', '(E) Interest rates are likely to fall significantly in the next six months. '), ('GREA', 'b'), ('LSAT', '2)As any economist knows, healthy people pose less of an economic burden to society than unhealthy people. Not surprisingly, then, every dollar our state government spends on prenatal care for undocumented immigrants will save taxpayers of this state three dollars.\n\n\nWhich of the following, if true, would best explain why the statistics cited above are not surprising?'), ('LSATQA', '(A)The state’s taxpayers pay for prenatal care of all immigrants.'), ('LSATQB', '(B)Babies born in this state to undocumented immigrant parents are entitled to infant care benefits from the state.'), ('LSATQC', '(C)State benefits for prenatal care serve to promote undocumented immigration.'), ('LSATQD', '(D)Babies whose mothers did not receive prenatal care.are just as healthy as other babies.'), ('LSATQE', '(E)Pregnant women who do not receive prenatal care are more likely to experience health problems than other pregnant women.'), ('LSATAs', 'e')])
24.5170 	EXP 	TextQuestion: autoDraw = False
24.5170 	EXP 	choiceA: autoDraw = False
24.5170 	EXP 	choiceB: autoDraw = False
24.5170 	EXP 	choiceC: autoDraw = False
24.5170 	EXP 	choiceD: autoDraw = False
24.5170 	EXP 	choiceE: autoDraw = False
24.5170 	EXP 	choiceA: color = 'red (named)'
24.5170 	EXP 	TextQuestion: autoDraw = False
24.5170 	EXP 	choiceA: autoDraw = False
24.5170 	EXP 	choiceB: autoDraw = False
24.5170 	EXP 	choiceC: autoDraw = False
24.5170 	EXP 	choiceD: autoDraw = False
24.5170 	EXP 	choiceE: autoDraw = False
24.5170 	EXP 	conBlank: autoDraw = False
24.5170 	EXP 	choiceA: autoDraw = False
24.5170 	EXP 	choiceB: autoDraw = False
24.5170 	EXP 	choiceC: autoDraw = False
24.5170 	EXP 	choiceD: autoDraw = False
24.5170 	EXP 	choiceE: autoDraw = False
24.5170 	EXP 	choiceA: color = 'white (named)'
24.5170 	EXP 	choiceB: color = 'white (named)'
24.5170 	EXP 	choiceC: color = 'white (named)'
24.5170 	EXP 	choiceD: color = 'white (named)'
24.5170 	EXP 	choiceE: color = 'white (named)'
24.5170 	EXP 	TextQuestion: text = 'PLACEHOLDER'
24.5170 	EXP 	choiceA: text = 'QA'
24.5170 	EXP 	choiceB: text = 'QB'
24.5170 	EXP 	choiceC: text = 'QC'
24.5170 	EXP 	choiceD: text = 'QD'
24.5170 	EXP 	choiceE: text = 'QE'
24.5170 	EXP 	TextQuestion: text = '2) Studies have established that children who watched 2 more hours of TV on an average daily basis during the first 15 years of their life were 50℅ more likely to be arrested for property crimes in the country. Researchers believe that these studies clearly establish that violence in movies and TV contribute to aggressive behavior in real life. On the other hand, there is no clear evidence that the programs that the kids watched on TV were violent in the first place. Even if we were to accept that TV watching contributed to the increased crime rate, it need not have been because of the nature of the programs. Perhaps, children who watched programs such as Adams and Samson, a funny sit-com about two blundering cops began perceiving all cops as incompetent.\n\nWhat is the role of the underlined sentences?'
24.5170 	EXP 	choiceA: text = "(A)The first establishes a theory that the author later clearly refutes while the second presents the author's conclusion"
24.5170 	EXP 	choiceB: text = '(B)The first is an interpretation made by researchers that the author contends against and the second provides an alternative explanation for statistical data'
24.5170 	EXP 	choiceC: text = "(C)The first is an opinion expressed by someone other than the author and which the author is completely in disagreement with while the second provides the reason for the author's doubt"
24.5170 	EXP 	choiceD: text = "(D)The first is a fact supporting the researcher's conclusion while the second is the author's conclusion."
24.5170 	EXP 	choiceE: text = '(E)The first is a clearly proven opinion even if the author disagrees with it while the second is an ambiguous opinion that has no supporting data'
24.5170 	EXP 	TextQuestion: autoDraw = True
24.5170 	EXP 	choiceA: autoDraw = True
24.5170 	EXP 	choiceB: autoDraw = True
24.5170 	EXP 	choiceC: autoDraw = True
24.5170 	EXP 	choiceD: autoDraw = True
24.5170 	EXP 	choiceE: autoDraw = True
26.9154 	DATA 	Keypress: escape
27.0184 	EXP 	window1: mouseVisible = True
