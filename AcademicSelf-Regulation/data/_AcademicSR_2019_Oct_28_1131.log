4.3334 	WARNING 	User requested fullscreen with size [1024  768], but screen is actually [1920, 1200]. Using actual size
5.7067 	EXP 	Created window1 = Window(allowGUI=False, allowStencil=False, args=UNKNOWN, autoLog=True, bitsMode=UNKNOWN, blendMode='avg', color=array([0., 0., 0.]), colorSpace='rgb', fullscr=<method-wrapper '__getattribute__' of attributeSetter object at 0x0000024B450E3BA8>, gamma=None, gammaErrorPolicy='raise', kwargs=UNKNOWN, lms=UNKNOWN, monitor=<psychopy.monitors.calibTools.Monitor object at 0x0000024B44E8E898>, multiSample=False, name='window1', numSamples=2, pos=[0.0, 0.0], screen=0, size=array([1920, 1200]), stereo=False, units='height', useFBO=True, useRetina=False, viewOri=0.0, viewPos=None, viewScale=None, waitBlanking=True, winType='pyglet')
5.7067 	EXP 	window1: recordFrameIntervals = False
5.8731 	EXP 	window1: recordFrameIntervals = True
6.0569 	EXP 	window1: recordFrameIntervals = False
6.2702 	EXP 	Created instruct = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='instruct', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.4)
6.2893 	EXP 	Created regCue = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='regCue', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='REGULATE', units='height', win=Window(...), wrapWidth=1)
6.3056 	EXP 	Created choiceQ = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='choiceQ', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.4)
6.3200 	EXP 	Created testChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.04, italic=False, languageStyle='LTR', name='testChoice', opacity=1.0, ori=0, pos=array([-0.41,  0.15]), rgb=array([255., 255., 255.]), text='Practice Standardized Test Questions', units='height', win=Window(...), wrapWidth=1)
6.3259 	EXP 	Created videogameChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.04, italic=False, languageStyle='LTR', name='videogameChoice', opacity=1.0, ori=0, pos=array([0.41, 0.15]), rgb=array([255., 255., 255.]), text='Play a Videogame', units='height', win=Window(...), wrapWidth=1)
6.3397 	EXP 	Created gre = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, image='gre.png', interpolate=True, mask=None, maskParams=None, name='gre', opacity=1.0, ori=0.0, pos=array([-0.41,  0.02]), size=array([0.3  , 0.105]), texRes=128, units='height', win=Window(...))
6.3482 	EXP 	Created gmat = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, image='gmat.png', interpolate=True, mask=None, maskParams=None, name='gmat', opacity=1.0, ori=0.0, pos=array([-0.41, -0.13]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.3498 	EXP 	Created lsat = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-6.0, flipHoriz=False, flipVert=False, image='lsat.png', interpolate=True, mask=None, maskParams=None, name='lsat', opacity=1.0, ori=0.0, pos=array([-0.41, -0.27]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.3896 	EXP 	Created game = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-7.0, flipHoriz=False, flipVert=False, image='game.png', interpolate=True, mask=None, maskParams=None, name='game', opacity=1.0, ori=0.0, pos=array([ 0.41, -0.19]), size=array([0.4, 0.5]), texRes=128, units='height', win=Window(...))
6.3902 	EXP 	Created blank = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-9.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='blank', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
6.4233 	EXP 	Created testQChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.055, italic=False, languageStyle='LTR', name='testQChoice', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.3)
6.4326 	EXP 	Created image = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-1.0, flipHoriz=False, flipVert=False, image='gre.png', interpolate=True, mask=None, maskParams=None, name='image', opacity=1.0, ori=0.0, pos=array([0.   , 0.105]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.4380 	EXP 	Created image_2 = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, image='gmat.png', interpolate=True, mask=None, maskParams=None, name='image_2', opacity=1.0, ori=0.0, pos=array([ 0.  , -0.05]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.4397 	EXP 	Created image_3 = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, image='lsat.png', interpolate=True, mask=None, maskParams=None, name='image_3', opacity=1.0, ori=0.0, pos=array([ 0. , -0.2]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.4415 	EXP 	Created polygon = Rect(__class__=<class 'psychopy.visual.rect.Rect'>, autoDraw=False, autoLog=True, closeShape=True, color=method-wrapper(...), colorSpace=None, contrast=1.0, depth=-5.0, fillColor=None, fillColorSpace='rgb', fillRGB=None, interpolate=True, lineColor=array([-1., -1., -1.]), lineColorSpace='rgb', lineRGB=array([-1., -1., -1.]), lineWidth=1.0, name='polygon', opacity=1.0, ori=array(1.), pos=array([0., 0.]), size=array([1., 1.]), units='height', vertices=ndarray(...), win=Window(...))
6.4543 	EXP 	Created TextQuestion = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.028, italic=False, languageStyle='LTR', name='TextQuestion', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.45)
6.4626 	EXP 	Created choiceA = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceA', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.4656 	EXP 	Created choiceB = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceB', opacity=1.0, ori=0, pos=array([ 0. , -0.1]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.4684 	EXP 	Created choiceC = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceC', opacity=1.0, ori=0, pos=array([ 0. , -0.2]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.4711 	EXP 	Created choiceD = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-6.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceD', opacity=1.0, ori=0, pos=array([ 0. , -0.3]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.4739 	EXP 	Created choiceE = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-7.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceE', opacity=1.0, ori=0, pos=array([ 0. , -0.4]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.4743 	EXP 	Created conBlank = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-9.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='conBlank', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
6.5514 	EXP 	Created text = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.07, italic=False, languageStyle='LTR', name='text', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1)
6.5819 	EXP 	instruct: autoDraw = True
10.8811 	EXP 	Created sequence: random, trialTypes=1, nReps=5, seed=None
10.8812 	EXP 	New trial (rep=0, index=0): None
10.8866 	DATA 	Keypress: space
10.8938 	EXP 	instruct: autoDraw = False
10.8938 	EXP 	regCue: autoDraw = True
13.9362 	EXP 	regCue: autoDraw = False
13.9362 	EXP 	regCue: autoDraw = False
13.9362 	EXP 	blank: text = ''
13.9362 	EXP 	choiceQ: autoDraw = True
13.9362 	EXP 	testChoice: autoDraw = True
13.9362 	EXP 	videogameChoice: autoDraw = True
13.9362 	EXP 	gre: autoDraw = True
13.9362 	EXP 	gmat: autoDraw = True
13.9362 	EXP 	lsat: autoDraw = True
13.9362 	EXP 	game: autoDraw = True
15.7861 	DATA 	Keypress: 2
15.7980 	EXP 	videogameChoice: color = 'green (named)'
15.7980 	EXP 	blank: autoDraw = True
15.8146 	EXP 	videogameChoice: color = 'green (named)'
15.8312 	EXP 	videogameChoice: color = 'green (named)'
15.8480 	EXP 	videogameChoice: color = 'green (named)'
15.8647 	EXP 	videogameChoice: color = 'green (named)'
15.8813 	EXP 	videogameChoice: color = 'green (named)'
15.8979 	EXP 	videogameChoice: color = 'green (named)'
15.9148 	EXP 	videogameChoice: color = 'green (named)'
15.9312 	EXP 	videogameChoice: color = 'green (named)'
15.9482 	EXP 	videogameChoice: color = 'green (named)'
15.9647 	EXP 	videogameChoice: color = 'green (named)'
15.9814 	EXP 	videogameChoice: color = 'green (named)'
15.9980 	EXP 	videogameChoice: color = 'green (named)'
16.0149 	EXP 	videogameChoice: color = 'green (named)'
16.0315 	EXP 	videogameChoice: color = 'green (named)'
16.0480 	EXP 	videogameChoice: color = 'green (named)'
16.0649 	EXP 	videogameChoice: color = 'green (named)'
16.0815 	EXP 	videogameChoice: color = 'green (named)'
16.0983 	EXP 	videogameChoice: color = 'green (named)'
16.1148 	EXP 	videogameChoice: color = 'green (named)'
16.1319 	EXP 	videogameChoice: color = 'green (named)'
16.1480 	EXP 	videogameChoice: color = 'green (named)'
16.1649 	EXP 	videogameChoice: color = 'green (named)'
16.1816 	EXP 	videogameChoice: color = 'green (named)'
16.1986 	EXP 	videogameChoice: color = 'green (named)'
16.2150 	EXP 	videogameChoice: color = 'green (named)'
16.2316 	EXP 	videogameChoice: color = 'green (named)'
16.2483 	EXP 	videogameChoice: color = 'green (named)'
16.2650 	EXP 	videogameChoice: color = 'green (named)'
16.2816 	EXP 	videogameChoice: color = 'green (named)'
16.2983 	EXP 	videogameChoice: color = 'green (named)'
16.3147 	EXP 	videogameChoice: color = 'green (named)'
16.3313 	EXP 	videogameChoice: color = 'green (named)'
16.3485 	EXP 	videogameChoice: color = 'green (named)'
16.3652 	EXP 	videogameChoice: color = 'green (named)'
16.3814 	EXP 	videogameChoice: color = 'green (named)'
16.3984 	EXP 	videogameChoice: color = 'green (named)'
16.4150 	EXP 	videogameChoice: color = 'green (named)'
16.4318 	EXP 	videogameChoice: color = 'green (named)'
16.4483 	EXP 	videogameChoice: color = 'green (named)'
16.4652 	EXP 	videogameChoice: color = 'green (named)'
16.4817 	EXP 	videogameChoice: color = 'green (named)'
16.4980 	EXP 	videogameChoice: color = 'green (named)'
16.5153 	EXP 	videogameChoice: color = 'green (named)'
16.5320 	EXP 	videogameChoice: color = 'green (named)'
16.5486 	EXP 	videogameChoice: color = 'green (named)'
16.5651 	EXP 	videogameChoice: color = 'green (named)'
16.5819 	EXP 	videogameChoice: color = 'green (named)'
16.5987 	EXP 	videogameChoice: color = 'green (named)'
16.6155 	EXP 	videogameChoice: color = 'green (named)'
16.6321 	EXP 	videogameChoice: color = 'green (named)'
16.6486 	EXP 	videogameChoice: color = 'green (named)'
16.6653 	EXP 	videogameChoice: color = 'green (named)'
16.6821 	EXP 	videogameChoice: color = 'green (named)'
16.6986 	EXP 	videogameChoice: color = 'green (named)'
16.7156 	EXP 	videogameChoice: color = 'green (named)'
16.7321 	EXP 	videogameChoice: color = 'green (named)'
16.7489 	EXP 	videogameChoice: color = 'green (named)'
16.7656 	EXP 	videogameChoice: color = 'green (named)'
16.7820 	EXP 	videogameChoice: color = 'green (named)'
16.7986 	EXP 	videogameChoice: color = 'green (named)'
16.8155 	EXP 	videogameChoice: color = 'green (named)'
16.8321 	EXP 	videogameChoice: color = 'green (named)'
16.8488 	EXP 	videogameChoice: color = 'green (named)'
16.8654 	EXP 	videogameChoice: color = 'green (named)'
16.8825 	EXP 	videogameChoice: color = 'green (named)'
16.8987 	EXP 	videogameChoice: color = 'green (named)'
16.9157 	EXP 	videogameChoice: color = 'green (named)'
16.9323 	EXP 	videogameChoice: color = 'green (named)'
16.9490 	EXP 	videogameChoice: color = 'green (named)'
16.9654 	EXP 	videogameChoice: color = 'green (named)'
16.9824 	EXP 	videogameChoice: color = 'green (named)'
16.9991 	EXP 	videogameChoice: color = 'green (named)'
17.0158 	EXP 	videogameChoice: color = 'green (named)'
17.0325 	EXP 	videogameChoice: color = 'green (named)'
17.0490 	EXP 	videogameChoice: color = 'green (named)'
17.0658 	EXP 	videogameChoice: color = 'green (named)'
17.0823 	EXP 	videogameChoice: color = 'green (named)'
17.0988 	EXP 	videogameChoice: color = 'green (named)'
17.1159 	EXP 	videogameChoice: color = 'green (named)'
17.1326 	EXP 	videogameChoice: color = 'green (named)'
17.1493 	EXP 	videogameChoice: color = 'green (named)'
17.1657 	EXP 	videogameChoice: color = 'green (named)'
17.1826 	EXP 	videogameChoice: color = 'green (named)'
17.1991 	EXP 	videogameChoice: color = 'green (named)'
17.2157 	EXP 	videogameChoice: color = 'green (named)'
17.2324 	EXP 	videogameChoice: color = 'green (named)'
17.2492 	EXP 	videogameChoice: color = 'green (named)'
17.2659 	EXP 	videogameChoice: color = 'green (named)'
17.2827 	EXP 	videogameChoice: color = 'green (named)'
17.2988 	EXP 	videogameChoice: color = 'green (named)'
17.2988 	EXP 	blank: autoDraw = False
17.3301 	EXP 	Imported RowsExcel.xlsx as conditions, 5 conditions, 1 params
17.3303 	EXP 	Created sequence: random, trialTypes=5, nReps=0, seed=None
17.3305 	EXP 	Created sequence: random, trialTypes=1, nReps=1, seed=None
17.3306 	EXP 	New trial (rep=0, index=0): None
17.3386 	EXP 	choiceQ: autoDraw = False
17.3386 	EXP 	testChoice: autoDraw = False
17.3386 	EXP 	videogameChoice: autoDraw = False
17.3386 	EXP 	gre: autoDraw = False
17.3386 	EXP 	gmat: autoDraw = False
17.3386 	EXP 	lsat: autoDraw = False
17.3386 	EXP 	game: autoDraw = False
17.3386 	EXP 	videogameChoice: color = 'green (named)'
17.3386 	EXP 	choiceQ: autoDraw = False
17.3386 	EXP 	testChoice: autoDraw = False
17.3386 	EXP 	videogameChoice: autoDraw = False
17.3386 	EXP 	gre: autoDraw = False
17.3386 	EXP 	gmat: autoDraw = False
17.3386 	EXP 	lsat: autoDraw = False
17.3386 	EXP 	game: autoDraw = False
17.3386 	EXP 	blank: autoDraw = False
17.3386 	EXP 	videogameChoice: color = 'white (named)'
17.3386 	EXP 	testChoice: color = 'white (named)'
17.3386 	EXP 	choiceQ: autoDraw = False
17.3386 	EXP 	testChoice: autoDraw = False
17.3386 	EXP 	videogameChoice: autoDraw = False
17.3386 	EXP 	gre: autoDraw = False
17.3386 	EXP 	gmat: autoDraw = False
17.3386 	EXP 	lsat: autoDraw = False
17.3386 	EXP 	text: autoDraw = True
17.6868 	DATA 	Keypress: escape
17.8934 	EXP 	window1: mouseVisible = True
7.2983 	WARNING 	User requested fullscreen with size [1024  768], but screen is actually [1920, 1200]. Using actual size
8.6377 	EXP 	Created window1 = Window(allowGUI=False, allowStencil=False, args=UNKNOWN, autoLog=True, bitsMode=UNKNOWN, blendMode='avg', color=array([0., 0., 0.]), colorSpace='rgb', fullscr=<method-wrapper '__getattribute__' of attributeSetter object at 0x000001D6D6232C18>, gamma=None, gammaErrorPolicy='raise', kwargs=UNKNOWN, lms=UNKNOWN, monitor=<psychopy.monitors.calibTools.Monitor object at 0x000001D6D5F9E908>, multiSample=False, name='window1', numSamples=2, pos=[0.0, 0.0], screen=0, size=array([1920, 1200]), stereo=False, units='height', useFBO=True, useRetina=False, viewOri=0.0, viewPos=None, viewScale=None, waitBlanking=True, winType='pyglet')
8.6377 	EXP 	window1: recordFrameIntervals = False
8.8042 	EXP 	window1: recordFrameIntervals = True
8.9882 	EXP 	window1: recordFrameIntervals = False
9.2012 	EXP 	Created instruct = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='instruct', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.4)
9.2210 	EXP 	Created regCue = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='regCue', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='REGULATE', units='height', win=Window(...), wrapWidth=1)
9.2370 	EXP 	Created choiceQ = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='choiceQ', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.4)
9.2542 	EXP 	Created testChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.04, italic=False, languageStyle='LTR', name='testChoice', opacity=1.0, ori=0, pos=array([-0.41,  0.15]), rgb=array([255., 255., 255.]), text='Practice Standardized Test Questions', units='height', win=Window(...), wrapWidth=1)
9.2598 	EXP 	Created videogameChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.04, italic=False, languageStyle='LTR', name='videogameChoice', opacity=1.0, ori=0, pos=array([0.41, 0.15]), rgb=array([255., 255., 255.]), text='Play a Videogame', units='height', win=Window(...), wrapWidth=1)
9.2693 	EXP 	Created gre = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, image='gre.png', interpolate=True, mask=None, maskParams=None, name='gre', opacity=1.0, ori=0.0, pos=array([-0.41,  0.02]), size=array([0.3  , 0.105]), texRes=128, units='height', win=Window(...))
9.2758 	EXP 	Created gmat = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, image='gmat.png', interpolate=True, mask=None, maskParams=None, name='gmat', opacity=1.0, ori=0.0, pos=array([-0.41, -0.13]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
9.2774 	EXP 	Created lsat = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-6.0, flipHoriz=False, flipVert=False, image='lsat.png', interpolate=True, mask=None, maskParams=None, name='lsat', opacity=1.0, ori=0.0, pos=array([-0.41, -0.27]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
9.3091 	EXP 	Created game = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-7.0, flipHoriz=False, flipVert=False, image='game.png', interpolate=True, mask=None, maskParams=None, name='game', opacity=1.0, ori=0.0, pos=array([ 0.41, -0.19]), size=array([0.4, 0.5]), texRes=128, units='height', win=Window(...))
9.3096 	EXP 	Created blank = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-9.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='blank', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
9.3420 	EXP 	Created testQChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.055, italic=False, languageStyle='LTR', name='testQChoice', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.3)
9.3502 	EXP 	Created image = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-1.0, flipHoriz=False, flipVert=False, image='gre.png', interpolate=True, mask=None, maskParams=None, name='image', opacity=1.0, ori=0.0, pos=array([0.   , 0.105]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
9.3552 	EXP 	Created image_2 = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, image='gmat.png', interpolate=True, mask=None, maskParams=None, name='image_2', opacity=1.0, ori=0.0, pos=array([ 0.  , -0.05]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
9.3567 	EXP 	Created image_3 = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, image='lsat.png', interpolate=True, mask=None, maskParams=None, name='image_3', opacity=1.0, ori=0.0, pos=array([ 0. , -0.2]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
9.3584 	EXP 	Created polygon = Rect(__class__=<class 'psychopy.visual.rect.Rect'>, autoDraw=False, autoLog=True, closeShape=True, color=method-wrapper(...), colorSpace=None, contrast=1.0, depth=-5.0, fillColor=None, fillColorSpace='rgb', fillRGB=None, interpolate=True, lineColor=array([-1., -1., -1.]), lineColorSpace='rgb', lineRGB=array([-1., -1., -1.]), lineWidth=1.0, name='polygon', opacity=1.0, ori=array(1.), pos=array([0., 0.]), size=array([1., 1.]), units='height', vertices=ndarray(...), win=Window(...))
9.3694 	EXP 	Created TextQuestion = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.028, italic=False, languageStyle='LTR', name='TextQuestion', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.45)
9.3768 	EXP 	Created choiceA = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceA', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
9.3795 	EXP 	Created choiceB = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceB', opacity=1.0, ori=0, pos=array([ 0. , -0.1]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
9.3821 	EXP 	Created choiceC = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceC', opacity=1.0, ori=0, pos=array([ 0. , -0.2]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
9.3849 	EXP 	Created choiceD = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-6.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceD', opacity=1.0, ori=0, pos=array([ 0. , -0.3]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
9.3876 	EXP 	Created choiceE = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-7.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceE', opacity=1.0, ori=0, pos=array([ 0. , -0.4]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
9.3880 	EXP 	Created conBlank = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-9.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='conBlank', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
9.4646 	EXP 	Created text = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.07, italic=False, languageStyle='LTR', name='text', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1)
9.4951 	EXP 	instruct: autoDraw = True
10.9276 	EXP 	Created sequence: random, trialTypes=1, nReps=5, seed=None
10.9278 	EXP 	New trial (rep=0, index=0): None
10.9330 	DATA 	Keypress: space
10.9403 	EXP 	instruct: autoDraw = False
10.9403 	EXP 	regCue: autoDraw = True
13.9836 	EXP 	regCue: autoDraw = False
13.9836 	EXP 	regCue: autoDraw = False
13.9836 	EXP 	blank: text = ''
13.9836 	EXP 	choiceQ: autoDraw = True
13.9836 	EXP 	testChoice: autoDraw = True
13.9836 	EXP 	videogameChoice: autoDraw = True
13.9836 	EXP 	gre: autoDraw = True
13.9836 	EXP 	gmat: autoDraw = True
13.9836 	EXP 	lsat: autoDraw = True
13.9836 	EXP 	game: autoDraw = True
18.6828 	DATA 	Keypress: num_1
20.0510 	DATA 	Keypress: 1
20.0634 	EXP 	testChoice: color = 'green (named)'
20.0634 	EXP 	blank: autoDraw = True
20.0799 	EXP 	testChoice: color = 'green (named)'
20.0967 	EXP 	testChoice: color = 'green (named)'
20.1134 	EXP 	testChoice: color = 'green (named)'
20.1301 	EXP 	testChoice: color = 'green (named)'
20.1466 	EXP 	testChoice: color = 'green (named)'
20.1636 	EXP 	testChoice: color = 'green (named)'
20.1800 	EXP 	testChoice: color = 'green (named)'
20.1986 	EXP 	testChoice: color = 'green (named)'
20.2134 	EXP 	testChoice: color = 'green (named)'
20.2301 	EXP 	testChoice: color = 'green (named)'
20.2468 	EXP 	testChoice: color = 'green (named)'
20.2638 	EXP 	testChoice: color = 'green (named)'
20.2806 	EXP 	testChoice: color = 'green (named)'
20.2972 	EXP 	testChoice: color = 'green (named)'
20.3138 	EXP 	testChoice: color = 'green (named)'
20.3305 	EXP 	testChoice: color = 'green (named)'
20.3471 	EXP 	testChoice: color = 'green (named)'
20.3638 	EXP 	testChoice: color = 'green (named)'
20.3804 	EXP 	testChoice: color = 'green (named)'
20.3972 	EXP 	testChoice: color = 'green (named)'
20.4139 	EXP 	testChoice: color = 'green (named)'
20.4305 	EXP 	testChoice: color = 'green (named)'
20.4474 	EXP 	testChoice: color = 'green (named)'
20.4642 	EXP 	testChoice: color = 'green (named)'
20.4808 	EXP 	testChoice: color = 'green (named)'
20.4971 	EXP 	testChoice: color = 'green (named)'
20.5139 	EXP 	testChoice: color = 'green (named)'
20.5307 	EXP 	testChoice: color = 'green (named)'
20.5475 	EXP 	testChoice: color = 'green (named)'
20.5638 	EXP 	testChoice: color = 'green (named)'
20.5805 	EXP 	testChoice: color = 'green (named)'
20.5969 	EXP 	testChoice: color = 'green (named)'
20.6139 	EXP 	testChoice: color = 'green (named)'
20.6304 	EXP 	testChoice: color = 'green (named)'
20.6472 	EXP 	testChoice: color = 'green (named)'
20.6637 	EXP 	testChoice: color = 'green (named)'
20.6808 	EXP 	testChoice: color = 'green (named)'
20.6975 	EXP 	testChoice: color = 'green (named)'
20.7143 	EXP 	testChoice: color = 'green (named)'
20.7309 	EXP 	testChoice: color = 'green (named)'
20.7474 	EXP 	testChoice: color = 'green (named)'
20.7639 	EXP 	testChoice: color = 'green (named)'
20.7807 	EXP 	testChoice: color = 'green (named)'
20.7986 	EXP 	testChoice: color = 'green (named)'
20.8142 	EXP 	testChoice: color = 'green (named)'
20.8310 	EXP 	testChoice: color = 'green (named)'
20.8480 	EXP 	testChoice: color = 'green (named)'
20.8642 	EXP 	testChoice: color = 'green (named)'
20.8812 	EXP 	testChoice: color = 'green (named)'
20.8974 	EXP 	testChoice: color = 'green (named)'
20.9141 	EXP 	testChoice: color = 'green (named)'
20.9308 	EXP 	testChoice: color = 'green (named)'
20.9474 	EXP 	testChoice: color = 'green (named)'
20.9644 	EXP 	testChoice: color = 'green (named)'
20.9809 	EXP 	testChoice: color = 'green (named)'
20.9978 	EXP 	testChoice: color = 'green (named)'
21.0145 	EXP 	testChoice: color = 'green (named)'
21.0321 	EXP 	testChoice: color = 'green (named)'
21.0475 	EXP 	testChoice: color = 'green (named)'
21.0642 	EXP 	testChoice: color = 'green (named)'
21.0812 	EXP 	testChoice: color = 'green (named)'
21.0974 	EXP 	testChoice: color = 'green (named)'
21.1145 	EXP 	testChoice: color = 'green (named)'
21.1310 	EXP 	testChoice: color = 'green (named)'
21.1477 	EXP 	testChoice: color = 'green (named)'
21.1642 	EXP 	testChoice: color = 'green (named)'
21.1808 	EXP 	testChoice: color = 'green (named)'
21.1975 	EXP 	testChoice: color = 'green (named)'
21.2145 	EXP 	testChoice: color = 'green (named)'
21.2312 	EXP 	testChoice: color = 'green (named)'
21.2476 	EXP 	testChoice: color = 'green (named)'
21.2642 	EXP 	testChoice: color = 'green (named)'
21.2811 	EXP 	testChoice: color = 'green (named)'
21.2977 	EXP 	testChoice: color = 'green (named)'
21.3145 	EXP 	testChoice: color = 'green (named)'
21.3311 	EXP 	testChoice: color = 'green (named)'
21.3478 	EXP 	testChoice: color = 'green (named)'
21.3644 	EXP 	testChoice: color = 'green (named)'
21.3815 	EXP 	testChoice: color = 'green (named)'
21.3978 	EXP 	testChoice: color = 'green (named)'
21.4146 	EXP 	testChoice: color = 'green (named)'
21.4312 	EXP 	testChoice: color = 'green (named)'
21.4482 	EXP 	testChoice: color = 'green (named)'
21.4653 	EXP 	testChoice: color = 'green (named)'
21.4817 	EXP 	testChoice: color = 'green (named)'
21.4978 	EXP 	testChoice: color = 'green (named)'
21.5146 	EXP 	testChoice: color = 'green (named)'
21.5313 	EXP 	testChoice: color = 'green (named)'
21.5479 	EXP 	testChoice: color = 'green (named)'
21.5647 	EXP 	testChoice: color = 'green (named)'
21.5647 	EXP 	blank: autoDraw = False
21.5969 	EXP 	Imported RowsExcel.xlsx as conditions, 5 conditions, 1 params
21.5971 	EXP 	Created sequence: random, trialTypes=5, nReps=1, seed=None
21.5972 	EXP 	New trial (rep=0, index=0): OrderedDict([('Rows', '0020:0025')])
21.6063 	EXP 	choiceQ: autoDraw = False
21.6063 	EXP 	testChoice: autoDraw = False
21.6063 	EXP 	videogameChoice: autoDraw = False
21.6063 	EXP 	gre: autoDraw = False
21.6063 	EXP 	gmat: autoDraw = False
21.6063 	EXP 	lsat: autoDraw = False
21.6063 	EXP 	game: autoDraw = False
21.6063 	EXP 	testChoice: color = 'green (named)'
21.6063 	EXP 	choiceQ: autoDraw = False
21.6063 	EXP 	testChoice: autoDraw = False
21.6063 	EXP 	videogameChoice: autoDraw = False
21.6063 	EXP 	gre: autoDraw = False
21.6063 	EXP 	gmat: autoDraw = False
21.6063 	EXP 	lsat: autoDraw = False
21.6063 	EXP 	game: autoDraw = False
21.6063 	EXP 	blank: autoDraw = False
21.6063 	EXP 	videogameChoice: color = 'white (named)'
21.6063 	EXP 	testChoice: color = 'white (named)'
21.6063 	EXP 	choiceQ: autoDraw = False
21.6063 	EXP 	testChoice: autoDraw = False
21.6063 	EXP 	videogameChoice: autoDraw = False
21.6063 	EXP 	gre: autoDraw = False
21.6063 	EXP 	gmat: autoDraw = False
21.6063 	EXP 	lsat: autoDraw = False
21.6063 	EXP 	polygon: opacity = 1.0
21.6063 	EXP 	polygon: size = array([0.32, 0.13])
21.6063 	EXP 	polygon: ori = 0.0
21.6063 	EXP 	polygon: lineWidth = 8.0
21.6063 	EXP 	testQChoice: autoDraw = True
21.6063 	EXP 	image: autoDraw = True
21.6063 	EXP 	image_2: autoDraw = True
21.6063 	EXP 	image_3: autoDraw = True
37.5345 	DATA 	Keypress: 2
37.5449 	EXP 	polygon: autoDraw = True
37.5611 	EXP 	polygon: autoDraw = True
37.5784 	EXP 	polygon: autoDraw = True
37.5950 	EXP 	polygon: autoDraw = True
37.6115 	EXP 	polygon: autoDraw = True
37.6284 	EXP 	polygon: autoDraw = True
37.6453 	EXP 	polygon: autoDraw = True
37.6616 	EXP 	polygon: autoDraw = True
37.6784 	EXP 	polygon: autoDraw = True
37.6951 	EXP 	polygon: autoDraw = True
37.7119 	EXP 	polygon: autoDraw = True
37.7285 	EXP 	polygon: autoDraw = True
37.7449 	EXP 	polygon: autoDraw = True
37.7618 	EXP 	polygon: autoDraw = True
37.7782 	EXP 	polygon: autoDraw = True
37.7950 	EXP 	polygon: autoDraw = True
37.8117 	EXP 	polygon: autoDraw = True
37.8286 	EXP 	polygon: autoDraw = True
37.8452 	EXP 	polygon: autoDraw = True
37.8619 	EXP 	polygon: autoDraw = True
37.8780 	EXP 	polygon: autoDraw = True
37.8949 	EXP 	polygon: autoDraw = True
37.9119 	EXP 	polygon: autoDraw = True
37.9284 	EXP 	polygon: autoDraw = True
37.9452 	EXP 	polygon: autoDraw = True
37.9622 	EXP 	polygon: autoDraw = True
37.9784 	EXP 	polygon: autoDraw = True
37.9952 	EXP 	polygon: autoDraw = True
38.0117 	EXP 	polygon: autoDraw = True
38.0285 	EXP 	polygon: autoDraw = True
38.0451 	EXP 	polygon: autoDraw = True
38.0616 	EXP 	polygon: autoDraw = True
38.0789 	EXP 	polygon: autoDraw = True
38.0950 	EXP 	polygon: autoDraw = True
38.1118 	EXP 	polygon: autoDraw = True
38.1284 	EXP 	polygon: autoDraw = True
38.1454 	EXP 	polygon: autoDraw = True
38.1618 	EXP 	polygon: autoDraw = True
38.1788 	EXP 	polygon: autoDraw = True
38.1951 	EXP 	polygon: autoDraw = True
38.2120 	EXP 	polygon: autoDraw = True
38.2286 	EXP 	polygon: autoDraw = True
38.2456 	EXP 	polygon: autoDraw = True
38.2622 	EXP 	polygon: autoDraw = True
38.2785 	EXP 	polygon: autoDraw = True
38.2952 	EXP 	polygon: autoDraw = True
38.3119 	EXP 	polygon: autoDraw = True
38.3283 	EXP 	polygon: autoDraw = True
38.3455 	EXP 	polygon: autoDraw = True
38.3618 	EXP 	polygon: autoDraw = True
38.3788 	EXP 	polygon: autoDraw = True
38.3957 	EXP 	polygon: autoDraw = True
38.4124 	EXP 	polygon: autoDraw = True
38.4291 	EXP 	polygon: autoDraw = True
38.4453 	EXP 	polygon: autoDraw = True
38.4622 	EXP 	polygon: autoDraw = True
38.4788 	EXP 	polygon: autoDraw = True
38.4958 	EXP 	polygon: autoDraw = True
38.5120 	EXP 	polygon: autoDraw = True
38.5294 	EXP 	polygon: autoDraw = True
38.5463 	EXP 	polygon: autoDraw = True
38.5623 	EXP 	polygon: autoDraw = True
38.5793 	EXP 	polygon: autoDraw = True
38.5860 	DATA 	Keypress: return
38.5957 	EXP 	polygon: autoDraw = True
38.6164 	EXP 	Imported QuestionsText.xlsx as conditions, 5 conditions, 21 params
38.6166 	EXP 	Created sequence: sequential, trialTypes=5, nReps=1, seed=None
38.6169 	EXP 	New trial (rep=0, index=0): OrderedDict([('GMAT', '1) Jess: To be a woman in this century is far better than to be a woman in centuries past. Life expectancy for women has - for the first time - surpassed that for men and while only around 20℅ of college students in the late 1800s were women, today, almost 60℅ of college students are women.\n\nSam: However, women educated in the top-ranked colleges in the country earn only about 70℅ of what their male counterparts earn. Also, studies show that even today, in a number of industries, women are refused top management positions simply because they are women.\n\nWhich of the following is Jess most likely to say in response to Sam?'), ('GMATQA', '(A)Women today are healthier and live longer than women in the 1800s, who primarily died because of child birth.'), ('GMATQB', '(B)There are more women at the entry-level jobs of most industries than there are men.'), ('GMATQC', '(C)Women today are better able to juggle professional and personal lives and a number of them are proving to be successful single mothers.'), ('GMATQD', '(D)The proportion of women in the judicial and legislative branches of the country is at its highest and the country elected its first woman president recently.'), ('GMATQE', '(E)Women are allowed more freedom today and are not likely to be sacrificed at the altar of marriage or in a witch hunt.'), ('GMATAs', 'd'), ('GRE', '1) Unlike the lungs and the kidneys, the liver is an organ well suited for living-donor transplants to children because the portion of the liver must be removed from a healthy adult to replace the diseased liver of a child will be regenerated in the healthy adult within a few months.\n\nWhich of the following, if true, provides the most additional support for the conclusion drawn above?'), ('GREQA', '(A)  The success rate of liver transplants is slightly lower in children than in adults.'), ('GREQB', '(B) In removing the portion of liver for transplant there is danger of causing damage to the spleen of the donor, and that could necessitate the removal of the spleen.'), ('GREQC', '(C) There is less danger that a transplanted organ will be rejected when the organ donor is a close relative of the recipient.'), ('GREQD', '(D) There are so few suitable donors that about one-half of the babies with liver disease born in the United States each year die before they can receive a liver transplant.'), ('GREQE', '(E)Each lobe of the liver functions separately, and it is possible to extract a portion of one lobe without disrupting critical liver functions.'), ('GREA', 'e'), ('LSAT', "1)Modern workers are less competent than workers of the past.  This fact likely comes as a surprise to some because standards are higher than ever.  Employers demand higher degrees than before and more workers have bachelor's and master's degrees than at any other time.  Higher degrees do not mean more competent workers, however.  Recent evidence indicates that modern workers have poor writing ability, lack focus, and are inept at personal communication.\n\nWhich of the following, if true, most undermines the argument?"), ('LSATQA', '(A)Modern workers generally work more hours than workers in the past\n\n'), ('LSATQB', "(B)Workers of the past often obtained bachelor's and master's degrees\n\n"), ('LSATQC', '(C)Workers of the past had poor writing ability, lacked focus, and were inept at personal communication\n\n'), ('LSATQD', "(D)In the past, it was often more difficult to obtain a bachelor's or master's degree\n\n"), ('LSATQE', '(E)Modern workers are dismissed from their jobs less frequently than at any other time\n\n'), ('LSATAs', 'c')])
38.7593 	EXP 	polygon: autoDraw = True
38.7593 	EXP 	testQChoice: autoDraw = False
38.7593 	EXP 	image: autoDraw = False
38.7593 	EXP 	image_2: autoDraw = False
38.7593 	EXP 	image_3: autoDraw = False
38.7593 	EXP 	polygon: autoDraw = False
38.7593 	EXP 	TextQuestion: text = 'PLACEHOLDER'
38.7593 	EXP 	choiceA: text = 'QA'
38.7593 	EXP 	choiceB: text = 'QB'
38.7593 	EXP 	choiceC: text = 'QC'
38.7593 	EXP 	choiceD: text = 'QD'
38.7593 	EXP 	choiceE: text = 'QE'
38.7593 	EXP 	TextQuestion: text = '1) Jess: To be a woman in this century is far better than to be a woman in centuries past. Life expectancy for women has - for the first time - surpassed that for men and while only around 20℅ of college students in the late 1800s were women, today, almost 60℅ of college students are women.\n\nSam: However, women educated in the top-ranked colleges in the country earn only about 70℅ of what their male counterparts earn. Also, studies show that even today, in a number of industries, women are refused top management positions simply because they are women.\n\nWhich of the following is Jess most likely to say in response to Sam?'
38.7593 	EXP 	choiceA: text = '(A)Women today are healthier and live longer than women in the 1800s, who primarily died because of child birth.'
38.7593 	EXP 	choiceB: text = '(B)There are more women at the entry-level jobs of most industries than there are men.'
38.7593 	EXP 	choiceC: text = '(C)Women today are better able to juggle professional and personal lives and a number of them are proving to be successful single mothers.'
38.7593 	EXP 	choiceD: text = '(D)The proportion of women in the judicial and legislative branches of the country is at its highest and the country elected its first woman president recently.'
38.7593 	EXP 	choiceE: text = '(E)Women are allowed more freedom today and are not likely to be sacrificed at the altar of marriage or in a witch hunt.'
38.7593 	EXP 	TextQuestion: autoDraw = True
38.7593 	EXP 	choiceA: autoDraw = True
38.7593 	EXP 	choiceB: autoDraw = True
38.7593 	EXP 	choiceC: autoDraw = True
38.7593 	EXP 	choiceD: autoDraw = True
38.7593 	EXP 	choiceE: autoDraw = True
40.2873 	DATA 	Keypress: a
40.9209 	EXP 	New trial (rep=0, index=1): OrderedDict([('GMAT', "2) Artistic success as an actor is directly dependent on how well an actor has developed his craft. This has been demonstrated by the discovery of a positive relationship between the number of classes taken by an actor and the number of professional productions in which the actor has appeared in the past two years.\n\nEach of the following, if true, cast doubt on the author's argument about artistic success for actors EXCEPT:"), ('GMATQA', '(A)The figures for the number of classes taken were based solely on information provided by actors.'), ('GMATQB', '(B)Success as an actor cannot necessarily be judged exclusively by recent credits.'), ('GMATQC', "(C)For most successful actors, it's not the quantity but the quality of their classes that has helped to develop their craft"), ('GMATQD', '(D)There is no relationship between the number of professional productions in which an actor has appeared and true artistic success.'), ('GMATQE', '(E)Most successful actors have taken only a small number of intensive classes.'), ('GMATAs', 'a'), ('GRE', '2) Popcorn kernels explode, or "pop," when the moisture inside the kernel is heated and steam builds up pressure inside the kernel. Uniform moisture content in a batch of popcorn kernels ensures uniform popping time, which in turn ensures fewer unpopped kernels. In practice, the percentage of unpopped kernels in a batch can be reduced by sorting popcorn kernels by size.\n\nWhich of the following, if true, best helps explain why the percentage of unpopped kernels is lower when popcorn kernels are of uniform size?'), ('GREQA', '(A) The percentage of unpopped kernels can be reduced by increasing cooking time.'), ('GREQB', '(B) All popcorn kernels, no matter what their size, will pop under proper conditions.\n'), ('GREQC', '(C) Yellow popcorn kernels have more moisture content than do white or blue popcorn kernels.'), ('GREQD', "(D) A popcorn kernel's moisture content is fully determined by its size."), ('GREQE', '(E) Damaged kernels, another cause of unpopped kernels, have a lower moisture content than intact kernels.'), ('GREA', 'd'), ('LSAT', '2)Under the modern model for music distribution, musicians sell the right to broadcast their music to companies who give listeners affordable access to large quantities of music.  Some musicians who have been selling their music for many years are displeased with the new model and have seen decreased revenue.  Yet, musicians as a whole are making more money under the new model than they were previously.\n\nWhich of the following, if true, would most help to reconcile the apparent conflict?'), ('LSATQA', '(A)Some musicians want to make more money than they made under the old model\n\n'), ('LSATQB', '(B)Music producers charge higher fees now, leaving less revenue for musicians\n\n'), ('LSATQC', '(C)A greater number of musicians sell music now than under the old model\n\n'), ('LSATQD', '(D)The new model is not generating as much revenue as it could be generating\n\n'), ('LSATQE', '(E)The old model could be used now and would generate more revenue than the new model\n\n'), ('LSATAs', 'c')])
41.0082 	DATA 	Keypress: return
41.0133 	EXP 	choiceA: color = 'blue (named)'
41.0133 	EXP 	conBlank: autoDraw = True
41.0133 	EXP 	TextQuestion: autoDraw = False
41.0133 	EXP 	choiceA: autoDraw = False
41.0133 	EXP 	choiceB: autoDraw = False
41.0133 	EXP 	choiceC: autoDraw = False
41.0133 	EXP 	choiceD: autoDraw = False
41.0133 	EXP 	choiceE: autoDraw = False
41.0133 	EXP 	conBlank: autoDraw = False
41.0133 	EXP 	choiceA: autoDraw = False
41.0133 	EXP 	choiceB: autoDraw = False
41.0133 	EXP 	choiceC: autoDraw = False
41.0133 	EXP 	choiceD: autoDraw = False
41.0133 	EXP 	choiceE: autoDraw = False
41.0133 	EXP 	choiceA: color = 'white (named)'
41.0133 	EXP 	choiceB: color = 'white (named)'
41.0133 	EXP 	choiceC: color = 'white (named)'
41.0133 	EXP 	choiceD: color = 'white (named)'
41.0133 	EXP 	choiceE: color = 'white (named)'
41.0133 	EXP 	TextQuestion: text = 'PLACEHOLDER'
41.0133 	EXP 	choiceA: text = 'QA'
41.0133 	EXP 	choiceB: text = 'QB'
41.0133 	EXP 	choiceC: text = 'QC'
41.0133 	EXP 	choiceD: text = 'QD'
41.0133 	EXP 	choiceE: text = 'QE'
41.0133 	EXP 	TextQuestion: text = "2) Artistic success as an actor is directly dependent on how well an actor has developed his craft. This has been demonstrated by the discovery of a positive relationship between the number of classes taken by an actor and the number of professional productions in which the actor has appeared in the past two years.\n\nEach of the following, if true, cast doubt on the author's argument about artistic success for actors EXCEPT:"
41.0133 	EXP 	choiceA: text = '(A)The figures for the number of classes taken were based solely on information provided by actors.'
41.0133 	EXP 	choiceB: text = '(B)Success as an actor cannot necessarily be judged exclusively by recent credits.'
41.0133 	EXP 	choiceC: text = "(C)For most successful actors, it's not the quantity but the quality of their classes that has helped to develop their craft"
41.0133 	EXP 	choiceD: text = '(D)There is no relationship between the number of professional productions in which an actor has appeared and true artistic success.'
41.0133 	EXP 	choiceE: text = '(E)Most successful actors have taken only a small number of intensive classes.'
41.0133 	EXP 	TextQuestion: autoDraw = True
41.0133 	EXP 	choiceA: autoDraw = True
41.0133 	EXP 	choiceB: autoDraw = True
41.0133 	EXP 	choiceC: autoDraw = True
41.0133 	EXP 	choiceD: autoDraw = True
41.0133 	EXP 	choiceE: autoDraw = True
146.0921 	DATA 	Keypress: a
147.0259 	EXP 	New trial (rep=0, index=2): OrderedDict([('GMAT', '3) Music Industry executives have claimed that online file-sharing networks are significantly hurting their business because potential consumers are getting music for free that they would otherwise purchase. However, after file-sharing networks started to become popular, CD sales actually increased.\n\nWhich of the following, if true, best explains the apparent contradictions described above?'), ('GMATQA', '(A)File-sharing networks carry a more complete variety of music than most traditional music stories.'), ('GMATQB', '(B) The few people using file-sharing networks already purchased more music than most people.'), ('GMATQC', '(C)Many people prefer to store their music as computer files rather than maintain large CD collections.'), ('GMATQD', '(D)Many consumers have purchased music by artists they discovered through file-sharing networks.'), ('GMATQE', '(E)Music available on file-sharing networks is on the same audio quality as music on commercially produced CDs.'), ('GMATAs', 'd'), ('GRE', '3)Two percent of the ocean is coastal ocean-shallow coastal waters in which most fish live. The rest is deep ocean, where less fish live. Much of the garbage burned or dumped on land eventually is deposited in the coastal ocean. To keep coastal ocean free of garbage, therefore, garbage should be dumped in the deep ocean.\n\nWhich of the following. if true, constitutes the strongest basis for criticizing the argument above?'), ('GREQA', "(A) Currents far below the ocean's surface bring deep-ocean waters to the coastal ocean."), ('GREQB', '(B) Deep-ocean dumping would require a substantial change in the processing and packaging of waste.'), ('GREQC', '(C) Hazardous industrial waste has increasingly been dumped illegally into coastal-ocean waters.'), ('GREQD', '(D) There are at present no international agreements regulating dumping in the deep ocean.'), ('GREQE', '(E) The few species of fish that inhabit the deep ocean are of no commercial value.'), ('GREA', 'a'), ('LSAT', '3)Environmental activists who primarily focus on reducing carbon emissions are misguided. There are many environmental issues that should be of great concern, including some that present more serious challenges than carbon emissions.  Water pollution, for example, has devastating results on the environment.  Activists who primarily focus on carbon emissions apparently do not recognize that water pollution and other issues cause damage to the environment.\n\nWhich of the following, if true, most seriously weakens the argument?'), ('LSATQA', '(A)Some environmental activists focus attention on both water pollution and carbon emissions\n\n'), ('LSATQB', '(B)Some environmental concerns pose greater dangers than both water pollution and carbon emissions\n\n'), ('LSATQC', '(C)Some environmental activists primarily focus on reducing carbon emissions because there is greater opportunity for progress in that area than in others'), ('LSATQD', '(D)For many years, carbon emissions did pose a more serious threat to the environment than did water pollution\n\n'), ('LSATQE', '(E)Most environmental activists primarily focus on water pollution\n\n'), ('LSATAs', 'c')])
147.1102 	DATA 	Keypress: return
147.1154 	EXP 	choiceA: color = 'blue (named)'
147.1154 	EXP 	conBlank: autoDraw = True
147.1154 	EXP 	TextQuestion: autoDraw = False
147.1154 	EXP 	choiceA: autoDraw = False
147.1154 	EXP 	choiceB: autoDraw = False
147.1154 	EXP 	choiceC: autoDraw = False
147.1154 	EXP 	choiceD: autoDraw = False
147.1154 	EXP 	choiceE: autoDraw = False
147.1154 	EXP 	conBlank: autoDraw = False
147.1154 	EXP 	choiceA: autoDraw = False
147.1154 	EXP 	choiceB: autoDraw = False
147.1154 	EXP 	choiceC: autoDraw = False
147.1154 	EXP 	choiceD: autoDraw = False
147.1154 	EXP 	choiceE: autoDraw = False
147.1154 	EXP 	choiceA: color = 'white (named)'
147.1154 	EXP 	choiceB: color = 'white (named)'
147.1154 	EXP 	choiceC: color = 'white (named)'
147.1154 	EXP 	choiceD: color = 'white (named)'
147.1154 	EXP 	choiceE: color = 'white (named)'
147.1154 	EXP 	TextQuestion: text = 'PLACEHOLDER'
147.1154 	EXP 	choiceA: text = 'QA'
147.1154 	EXP 	choiceB: text = 'QB'
147.1154 	EXP 	choiceC: text = 'QC'
147.1154 	EXP 	choiceD: text = 'QD'
147.1154 	EXP 	choiceE: text = 'QE'
147.1154 	EXP 	TextQuestion: text = '3) Music Industry executives have claimed that online file-sharing networks are significantly hurting their business because potential consumers are getting music for free that they would otherwise purchase. However, after file-sharing networks started to become popular, CD sales actually increased.\n\nWhich of the following, if true, best explains the apparent contradictions described above?'
147.1154 	EXP 	choiceA: text = '(A)File-sharing networks carry a more complete variety of music than most traditional music stories.'
147.1154 	EXP 	choiceB: text = '(B) The few people using file-sharing networks already purchased more music than most people.'
147.1154 	EXP 	choiceC: text = '(C)Many people prefer to store their music as computer files rather than maintain large CD collections.'
147.1154 	EXP 	choiceD: text = '(D)Many consumers have purchased music by artists they discovered through file-sharing networks.'
147.1154 	EXP 	choiceE: text = '(E)Music available on file-sharing networks is on the same audio quality as music on commercially produced CDs.'
147.1154 	EXP 	TextQuestion: autoDraw = True
147.1154 	EXP 	choiceA: autoDraw = True
147.1154 	EXP 	choiceB: autoDraw = True
147.1154 	EXP 	choiceC: autoDraw = True
147.1154 	EXP 	choiceD: autoDraw = True
147.1154 	EXP 	choiceE: autoDraw = True
147.9769 	DATA 	Keypress: escape
148.1209 	EXP 	window1: mouseVisible = True
