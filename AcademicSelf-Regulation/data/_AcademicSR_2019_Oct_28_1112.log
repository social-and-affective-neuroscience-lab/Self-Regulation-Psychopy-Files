4.5750 	WARNING 	User requested fullscreen with size [1024  768], but screen is actually [1920, 1200]. Using actual size
5.8558 	EXP 	Created window1 = Window(allowGUI=False, allowStencil=False, args=UNKNOWN, autoLog=True, bitsMode=UNKNOWN, blendMode='avg', color=array([0., 0., 0.]), colorSpace='rgb', fullscr=<method-wrapper '__getattribute__' of attributeSetter object at 0x000001B78B303C50>, gamma=None, gammaErrorPolicy='raise', kwargs=UNKNOWN, lms=UNKNOWN, monitor=<psychopy.monitors.calibTools.Monitor object at 0x000001B78B32F940>, multiSample=False, name='window1', numSamples=2, pos=[0.0, 0.0], screen=0, size=array([1920, 1200]), stereo=False, units='height', useFBO=True, useRetina=False, viewOri=0.0, viewPos=None, viewScale=None, waitBlanking=True, winType='pyglet')
5.8558 	EXP 	window1: recordFrameIntervals = False
6.0219 	EXP 	window1: recordFrameIntervals = True
6.2057 	EXP 	window1: recordFrameIntervals = False
6.4151 	EXP 	Created instruct = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='instruct', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.4)
6.4340 	EXP 	Created regCue = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='regCue', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='REGULATE', units='height', win=Window(...), wrapWidth=1)
6.4513 	EXP 	Created choiceQ = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='choiceQ', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.4)
6.4666 	EXP 	Created testChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.04, italic=False, languageStyle='LTR', name='testChoice', opacity=1.0, ori=0, pos=array([-0.41,  0.15]), rgb=array([255., 255., 255.]), text='Practice Standardized Test Questions', units='height', win=Window(...), wrapWidth=1)
6.4727 	EXP 	Created videogameChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.04, italic=False, languageStyle='LTR', name='videogameChoice', opacity=1.0, ori=0, pos=array([0.41, 0.15]), rgb=array([255., 255., 255.]), text='Play a Videogame', units='height', win=Window(...), wrapWidth=1)
6.4848 	EXP 	Created gre = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, image='gre.png', interpolate=True, mask=None, maskParams=None, name='gre', opacity=1.0, ori=0.0, pos=array([-0.41,  0.02]), size=array([0.3  , 0.105]), texRes=128, units='height', win=Window(...))
6.4929 	EXP 	Created gmat = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, image='gmat.png', interpolate=True, mask=None, maskParams=None, name='gmat', opacity=1.0, ori=0.0, pos=array([-0.41, -0.13]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.4947 	EXP 	Created lsat = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-6.0, flipHoriz=False, flipVert=False, image='lsat.png', interpolate=True, mask=None, maskParams=None, name='lsat', opacity=1.0, ori=0.0, pos=array([-0.41, -0.27]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.5281 	EXP 	Created game = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-7.0, flipHoriz=False, flipVert=False, image='game.png', interpolate=True, mask=None, maskParams=None, name='game', opacity=1.0, ori=0.0, pos=array([ 0.41, -0.19]), size=array([0.4, 0.5]), texRes=128, units='height', win=Window(...))
6.5285 	EXP 	Created blank = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-9.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='blank', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
6.5640 	EXP 	Created testQChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.055, italic=False, languageStyle='LTR', name='testQChoice', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.3)
6.5677 	EXP 	Created image = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-1.0, flipHoriz=False, flipVert=False, image='gre.png', interpolate=True, mask=None, maskParams=None, name='image', opacity=1.0, ori=0.0, pos=array([0.   , 0.105]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.5740 	EXP 	Created image_2 = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, image='gmat.png', interpolate=True, mask=None, maskParams=None, name='image_2', opacity=1.0, ori=0.0, pos=array([ 0.  , -0.05]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.5760 	EXP 	Created image_3 = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, image='lsat.png', interpolate=True, mask=None, maskParams=None, name='image_3', opacity=1.0, ori=0.0, pos=array([ 0. , -0.2]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
6.5781 	EXP 	Created polygon = Rect(__class__=<class 'psychopy.visual.rect.Rect'>, autoDraw=False, autoLog=True, closeShape=True, color=method-wrapper(...), colorSpace=None, contrast=1.0, depth=-5.0, fillColor=None, fillColorSpace='rgb', fillRGB=None, interpolate=True, lineColor=array([-1., -1., -1.]), lineColorSpace='rgb', lineRGB=array([-1., -1., -1.]), lineWidth=1.0, name='polygon', opacity=1.0, ori=array(1.), pos=array([0., 0.]), size=array([1., 1.]), units='height', vertices=ndarray(...), win=Window(...))
6.5927 	EXP 	Created TextQuestion = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.028, italic=False, languageStyle='LTR', name='TextQuestion', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.45)
6.6027 	EXP 	Created choiceA = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceA', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.6061 	EXP 	Created choiceB = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceB', opacity=1.0, ori=0, pos=array([ 0. , -0.1]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.6093 	EXP 	Created choiceC = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceC', opacity=1.0, ori=0, pos=array([ 0. , -0.2]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.6127 	EXP 	Created choiceD = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-6.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceD', opacity=1.0, ori=0, pos=array([ 0. , -0.3]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.6157 	EXP 	Created choiceE = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-7.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceE', opacity=1.0, ori=0, pos=array([ 0. , -0.4]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
6.6161 	EXP 	Created conBlank = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-9.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='conBlank', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
6.6989 	EXP 	Created text = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.07, italic=False, languageStyle='LTR', name='text', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1)
6.7305 	EXP 	instruct: autoDraw = True
7.8110 	EXP 	Created sequence: random, trialTypes=1, nReps=5, seed=None
7.8111 	EXP 	New trial (rep=0, index=0): None
7.8172 	DATA 	Keypress: space
7.8240 	EXP 	instruct: autoDraw = False
7.8240 	EXP 	regCue: autoDraw = True
10.8664 	EXP 	regCue: autoDraw = False
10.8664 	EXP 	regCue: autoDraw = False
10.8664 	EXP 	blank: text = ''
10.8664 	EXP 	choiceQ: autoDraw = True
10.8664 	EXP 	testChoice: autoDraw = True
10.8664 	EXP 	videogameChoice: autoDraw = True
10.8664 	EXP 	gre: autoDraw = True
10.8664 	EXP 	gmat: autoDraw = True
10.8664 	EXP 	lsat: autoDraw = True
10.8664 	EXP 	game: autoDraw = True
11.2476 	DATA 	Keypress: 1
11.2594 	EXP 	testChoice: color = 'green (named)'
11.2594 	EXP 	blank: autoDraw = True
11.2761 	EXP 	testChoice: color = 'green (named)'
11.2949 	EXP 	testChoice: color = 'green (named)'
11.3094 	EXP 	testChoice: color = 'green (named)'
11.3264 	EXP 	testChoice: color = 'green (named)'
11.3427 	EXP 	testChoice: color = 'green (named)'
11.3594 	EXP 	testChoice: color = 'green (named)'
11.3761 	EXP 	testChoice: color = 'green (named)'
11.3927 	EXP 	testChoice: color = 'green (named)'
11.4095 	EXP 	testChoice: color = 'green (named)'
11.4265 	EXP 	testChoice: color = 'green (named)'
11.4433 	EXP 	testChoice: color = 'green (named)'
11.4599 	EXP 	testChoice: color = 'green (named)'
11.4761 	EXP 	testChoice: color = 'green (named)'
11.4932 	EXP 	testChoice: color = 'green (named)'
11.5096 	EXP 	testChoice: color = 'green (named)'
11.5264 	EXP 	testChoice: color = 'green (named)'
11.5430 	EXP 	testChoice: color = 'green (named)'
11.5599 	EXP 	testChoice: color = 'green (named)'
11.5762 	EXP 	testChoice: color = 'green (named)'
11.5928 	EXP 	testChoice: color = 'green (named)'
11.6097 	EXP 	testChoice: color = 'green (named)'
11.6263 	EXP 	testChoice: color = 'green (named)'
11.6428 	EXP 	testChoice: color = 'green (named)'
11.6598 	EXP 	testChoice: color = 'green (named)'
11.6763 	EXP 	testChoice: color = 'green (named)'
11.6931 	EXP 	testChoice: color = 'green (named)'
11.7095 	EXP 	testChoice: color = 'green (named)'
11.7265 	EXP 	testChoice: color = 'green (named)'
11.7429 	EXP 	testChoice: color = 'green (named)'
11.7599 	EXP 	testChoice: color = 'green (named)'
11.7764 	EXP 	testChoice: color = 'green (named)'
11.7931 	EXP 	testChoice: color = 'green (named)'
11.8099 	EXP 	testChoice: color = 'green (named)'
11.8264 	EXP 	testChoice: color = 'green (named)'
11.8434 	EXP 	testChoice: color = 'green (named)'
11.8601 	EXP 	testChoice: color = 'green (named)'
11.8765 	EXP 	testChoice: color = 'green (named)'
11.8934 	EXP 	testChoice: color = 'green (named)'
11.9100 	EXP 	testChoice: color = 'green (named)'
11.9268 	EXP 	testChoice: color = 'green (named)'
11.9435 	EXP 	testChoice: color = 'green (named)'
11.9601 	EXP 	testChoice: color = 'green (named)'
11.9768 	EXP 	testChoice: color = 'green (named)'
11.9940 	EXP 	testChoice: color = 'green (named)'
12.0101 	EXP 	testChoice: color = 'green (named)'
12.0270 	EXP 	testChoice: color = 'green (named)'
12.0435 	EXP 	testChoice: color = 'green (named)'
12.0602 	EXP 	testChoice: color = 'green (named)'
12.0770 	EXP 	testChoice: color = 'green (named)'
12.0935 	EXP 	testChoice: color = 'green (named)'
12.1102 	EXP 	testChoice: color = 'green (named)'
12.1270 	EXP 	testChoice: color = 'green (named)'
12.1435 	EXP 	testChoice: color = 'green (named)'
12.1603 	EXP 	testChoice: color = 'green (named)'
12.1770 	EXP 	testChoice: color = 'green (named)'
12.1938 	EXP 	testChoice: color = 'green (named)'
12.2111 	EXP 	testChoice: color = 'green (named)'
12.2270 	EXP 	testChoice: color = 'green (named)'
12.2437 	EXP 	testChoice: color = 'green (named)'
12.2604 	EXP 	testChoice: color = 'green (named)'
12.2770 	EXP 	testChoice: color = 'green (named)'
12.2938 	EXP 	testChoice: color = 'green (named)'
12.3105 	EXP 	testChoice: color = 'green (named)'
12.3270 	EXP 	testChoice: color = 'green (named)'
12.3437 	EXP 	testChoice: color = 'green (named)'
12.3605 	EXP 	testChoice: color = 'green (named)'
12.3771 	EXP 	testChoice: color = 'green (named)'
12.3939 	EXP 	testChoice: color = 'green (named)'
12.4107 	EXP 	testChoice: color = 'green (named)'
12.4275 	EXP 	testChoice: color = 'green (named)'
12.4441 	EXP 	testChoice: color = 'green (named)'
12.4603 	EXP 	testChoice: color = 'green (named)'
12.4773 	EXP 	testChoice: color = 'green (named)'
12.4941 	EXP 	testChoice: color = 'green (named)'
12.5107 	EXP 	testChoice: color = 'green (named)'
12.5271 	EXP 	testChoice: color = 'green (named)'
12.5440 	EXP 	testChoice: color = 'green (named)'
12.5606 	EXP 	testChoice: color = 'green (named)'
12.5770 	EXP 	testChoice: color = 'green (named)'
12.5939 	EXP 	testChoice: color = 'green (named)'
12.6103 	EXP 	testChoice: color = 'green (named)'
12.6274 	EXP 	testChoice: color = 'green (named)'
12.6445 	EXP 	testChoice: color = 'green (named)'
12.6605 	EXP 	testChoice: color = 'green (named)'
12.6772 	EXP 	testChoice: color = 'green (named)'
12.6940 	EXP 	testChoice: color = 'green (named)'
12.7106 	EXP 	testChoice: color = 'green (named)'
12.7273 	EXP 	testChoice: color = 'green (named)'
12.7442 	EXP 	testChoice: color = 'green (named)'
12.7607 	EXP 	testChoice: color = 'green (named)'
12.7607 	EXP 	blank: autoDraw = False
12.7902 	EXP 	Imported RowsExcel.xlsx as conditions, 5 conditions, 1 params
12.7904 	EXP 	Created sequence: random, trialTypes=5, nReps=1, seed=None
12.7906 	EXP 	New trial (rep=0, index=0): OrderedDict([('Rows', '0020:0025')])
12.7990 	EXP 	choiceQ: autoDraw = False
12.7990 	EXP 	testChoice: autoDraw = False
12.7990 	EXP 	videogameChoice: autoDraw = False
12.7990 	EXP 	gre: autoDraw = False
12.7990 	EXP 	gmat: autoDraw = False
12.7990 	EXP 	lsat: autoDraw = False
12.7990 	EXP 	game: autoDraw = False
12.7990 	EXP 	testChoice: color = 'green (named)'
12.7990 	EXP 	choiceQ: autoDraw = False
12.7990 	EXP 	testChoice: autoDraw = False
12.7990 	EXP 	videogameChoice: autoDraw = False
12.7990 	EXP 	gre: autoDraw = False
12.7990 	EXP 	gmat: autoDraw = False
12.7990 	EXP 	lsat: autoDraw = False
12.7990 	EXP 	game: autoDraw = False
12.7990 	EXP 	blank: autoDraw = False
12.7990 	EXP 	videogameChoice: color = 'white (named)'
12.7990 	EXP 	testChoice: color = 'white (named)'
12.7990 	EXP 	choiceQ: autoDraw = False
12.7990 	EXP 	testChoice: autoDraw = False
12.7990 	EXP 	videogameChoice: autoDraw = False
12.7990 	EXP 	gre: autoDraw = False
12.7990 	EXP 	gmat: autoDraw = False
12.7990 	EXP 	lsat: autoDraw = False
12.7990 	EXP 	polygon: opacity = 1.0
12.7990 	EXP 	polygon: size = array([0.32, 0.13])
12.7990 	EXP 	polygon: ori = 0.0
12.7990 	EXP 	polygon: lineWidth = 8.0
12.7990 	EXP 	testQChoice: autoDraw = True
12.7990 	EXP 	image: autoDraw = True
12.7990 	EXP 	image_2: autoDraw = True
12.7990 	EXP 	image_3: autoDraw = True
13.2343 	DATA 	Keypress: 2
13.2445 	EXP 	polygon: autoDraw = True
13.2612 	EXP 	polygon: autoDraw = True
13.2781 	EXP 	polygon: autoDraw = True
13.2947 	EXP 	polygon: autoDraw = True
13.3113 	EXP 	polygon: autoDraw = True
13.3279 	EXP 	polygon: autoDraw = True
13.3447 	EXP 	polygon: autoDraw = True
13.3615 	EXP 	polygon: autoDraw = True
13.3779 	EXP 	polygon: autoDraw = True
13.3948 	EXP 	polygon: autoDraw = True
13.4116 	EXP 	polygon: autoDraw = True
13.4281 	EXP 	polygon: autoDraw = True
13.4447 	EXP 	polygon: autoDraw = True
13.4614 	EXP 	polygon: autoDraw = True
13.4781 	EXP 	polygon: autoDraw = True
13.4946 	EXP 	polygon: autoDraw = True
13.5116 	EXP 	polygon: autoDraw = True
13.5280 	EXP 	polygon: autoDraw = True
13.5450 	EXP 	polygon: autoDraw = True
13.5615 	EXP 	polygon: autoDraw = True
13.5782 	EXP 	polygon: autoDraw = True
13.5950 	EXP 	polygon: autoDraw = True
13.6113 	EXP 	polygon: autoDraw = True
13.6286 	EXP 	polygon: autoDraw = True
13.6447 	EXP 	polygon: autoDraw = True
13.6616 	EXP 	polygon: autoDraw = True
13.6781 	EXP 	polygon: autoDraw = True
13.6951 	EXP 	polygon: autoDraw = True
13.7115 	EXP 	polygon: autoDraw = True
13.7284 	EXP 	polygon: autoDraw = True
13.7447 	EXP 	polygon: autoDraw = True
13.7615 	EXP 	polygon: autoDraw = True
13.7782 	EXP 	polygon: autoDraw = True
13.7949 	EXP 	polygon: autoDraw = True
13.8117 	EXP 	polygon: autoDraw = True
13.8283 	EXP 	polygon: autoDraw = True
13.8451 	EXP 	polygon: autoDraw = True
13.8618 	EXP 	polygon: autoDraw = True
13.8781 	EXP 	polygon: autoDraw = True
13.8951 	EXP 	polygon: autoDraw = True
13.9119 	EXP 	polygon: autoDraw = True
13.9284 	EXP 	polygon: autoDraw = True
13.9451 	EXP 	polygon: autoDraw = True
13.9618 	EXP 	polygon: autoDraw = True
13.9788 	EXP 	polygon: autoDraw = True
13.9951 	EXP 	polygon: autoDraw = True
14.0119 	EXP 	polygon: autoDraw = True
14.0287 	EXP 	polygon: autoDraw = True
14.0453 	EXP 	polygon: autoDraw = True
14.0621 	EXP 	polygon: autoDraw = True
14.0786 	EXP 	polygon: autoDraw = True
14.0992 	EXP 	Imported QuestionsText.xlsx as conditions, 5 conditions, 21 params
14.0996 	EXP 	Created sequence: sequential, trialTypes=5, nReps=1, seed=None
14.1001 	EXP 	New trial (rep=0, index=0): OrderedDict([('GMAT', '1) Jess: To be a woman in this century is far better than to be a woman in centuries past. Life expectancy for women has - for the first time - surpassed that for men and while only around 20℅ of college students in the late 1800s were women, today, almost 60℅ of college students are women.\n\nSam: However, women educated in the top-ranked colleges in the country earn only about 70℅ of what their male counterparts earn. Also, studies show that even today, in a number of industries, women are refused top management positions simply because they are women.\n\nWhich of the following is Jess most likely to say in response to Sam?'), ('GMATQA', '(A)Women today are healthier and live longer than women in the 1800s, who primarily died because of child birth.'), ('GMATQB', '(B)There are more women at the entry-level jobs of most industries than there are men.'), ('GMATQC', '(C)Women today are better able to juggle professional and personal lives and a number of them are proving to be successful single mothers.'), ('GMATQD', '(D)The proportion of women in the judicial and legislative branches of the country is at its highest and the country elected its first woman president recently.'), ('GMATQE', '(E)Women are allowed more freedom today and are not likely to be sacrificed at the altar of marriage or in a witch hunt.'), ('GMATAs', 'd'), ('GRE', '1) Unlike the lungs and the kidneys, the liver is an organ well suited for living-donor transplants to children because the portion of the liver must be removed from a healthy adult to replace the diseased liver of a child will be regenerated in the healthy adult within a few months.\n\nWhich of the following, if true, provides the most additional support for the conclusion drawn above?'), ('GREQA', '(A)  The success rate of liver transplants is slightly lower in children than in adults.'), ('GREQB', '(B) In removing the portion of liver for transplant there is danger of causing damage to the spleen of the donor, and that could necessitate the removal of the spleen.'), ('GREQC', '(C) There is less danger that a transplanted organ will be rejected when the organ donor is a close relative of the recipient.'), ('GREQD', '(D) There are so few suitable donors that about one-half of the babies with liver disease born in the United States each year die before they can receive a liver transplant.'), ('GREQE', '(E)Each lobe of the liver functions separately, and it is possible to extract a portion of one lobe without disrupting critical liver functions.'), ('GREA', 'e'), ('LSAT', "1)Modern workers are less competent than workers of the past.  This fact likely comes as a surprise to some because standards are higher than ever.  Employers demand higher degrees than before and more workers have bachelor's and master's degrees than at any other time.  Higher degrees do not mean more competent workers, however.  Recent evidence indicates that modern workers have poor writing ability, lack focus, and are inept at personal communication.\n\nWhich of the following, if true, most undermines the argument?"), ('LSATQA', '(A)Modern workers generally work more hours than workers in the past\n\n'), ('LSATQB', "(B)Workers of the past often obtained bachelor's and master's degrees\n\n"), ('LSATQC', '(C)Workers of the past had poor writing ability, lacked focus, and were inept at personal communication\n\n'), ('LSATQD', "(D)In the past, it was often more difficult to obtain a bachelor's or master's degree\n\n"), ('LSATQE', '(E)Modern workers are dismissed from their jobs less frequently than at any other time\n\n'), ('LSATAs', 'c')])
14.2554 	DATA 	Keypress: return
14.2605 	EXP 	polygon: autoDraw = True
14.2605 	EXP 	testQChoice: autoDraw = False
14.2605 	EXP 	image: autoDraw = False
14.2605 	EXP 	image_2: autoDraw = False
14.2605 	EXP 	image_3: autoDraw = False
14.2605 	EXP 	polygon: autoDraw = False
14.2605 	EXP 	TextQuestion: text = 'PLACEHOLDER'
14.2605 	EXP 	choiceA: text = 'QA'
14.2605 	EXP 	choiceB: text = 'QB'
14.2605 	EXP 	choiceC: text = 'QC'
14.2605 	EXP 	choiceD: text = 'QD'
14.2605 	EXP 	choiceE: text = 'QE'
14.2605 	EXP 	TextQuestion: text = '1) Jess: To be a woman in this century is far better than to be a woman in centuries past. Life expectancy for women has - for the first time - surpassed that for men and while only around 20℅ of college students in the late 1800s were women, today, almost 60℅ of college students are women.\n\nSam: However, women educated in the top-ranked colleges in the country earn only about 70℅ of what their male counterparts earn. Also, studies show that even today, in a number of industries, women are refused top management positions simply because they are women.\n\nWhich of the following is Jess most likely to say in response to Sam?'
14.2605 	EXP 	choiceA: text = '(A)Women today are healthier and live longer than women in the 1800s, who primarily died because of child birth.'
14.2605 	EXP 	choiceB: text = '(B)There are more women at the entry-level jobs of most industries than there are men.'
14.2605 	EXP 	choiceC: text = '(C)Women today are better able to juggle professional and personal lives and a number of them are proving to be successful single mothers.'
14.2605 	EXP 	choiceD: text = '(D)The proportion of women in the judicial and legislative branches of the country is at its highest and the country elected its first woman president recently.'
14.2605 	EXP 	choiceE: text = '(E)Women are allowed more freedom today and are not likely to be sacrificed at the altar of marriage or in a witch hunt.'
14.2605 	EXP 	TextQuestion: autoDraw = True
14.2605 	EXP 	choiceA: autoDraw = True
14.2605 	EXP 	choiceB: autoDraw = True
14.2605 	EXP 	choiceC: autoDraw = True
14.2605 	EXP 	choiceD: autoDraw = True
14.2605 	EXP 	choiceE: autoDraw = True
17.8376 	DATA 	Keypress: a
19.0066 	EXP 	New trial (rep=0, index=1): OrderedDict([('GMAT', "2) Artistic success as an actor is directly dependent on how well an actor has developed his craft. This has been demonstrated by the discovery of a positive relationship between the number of classes taken by an actor and the number of professional productions in which the actor has appeared in the past two years.\n\nEach of the following, if true, cast doubt on the author's argument about artistic success for actors EXCEPT:"), ('GMATQA', '(A)The figures for the number of classes taken were based solely on information provided by actors.'), ('GMATQB', '(B)Success as an actor cannot necessarily be judged exclusively by recent credits.'), ('GMATQC', "(C)For most successful actors, it's not the quantity but the quality of their classes that has helped to develop their craft"), ('GMATQD', '(D)There is no relationship between the number of professional productions in which an actor has appeared and true artistic success.'), ('GMATQE', '(E)Most successful actors have taken only a small number of intensive classes.'), ('GMATAs', 'a'), ('GRE', '2) Popcorn kernels explode, or "pop," when the moisture inside the kernel is heated and steam builds up pressure inside the kernel. Uniform moisture content in a batch of popcorn kernels ensures uniform popping time, which in turn ensures fewer unpopped kernels. In practice, the percentage of unpopped kernels in a batch can be reduced by sorting popcorn kernels by size.\n\nWhich of the following, if true, best helps explain why the percentage of unpopped kernels is lower when popcorn kernels are of uniform size?'), ('GREQA', '(A) The percentage of unpopped kernels can be reduced by increasing cooking time.'), ('GREQB', '(B) All popcorn kernels, no matter what their size, will pop under proper conditions.\n'), ('GREQC', '(C) Yellow popcorn kernels have more moisture content than do white or blue popcorn kernels.'), ('GREQD', "(D) A popcorn kernel's moisture content is fully determined by its size."), ('GREQE', '(E) Damaged kernels, another cause of unpopped kernels, have a lower moisture content than intact kernels.'), ('GREA', 'd'), ('LSAT', '2)Under the modern model for music distribution, musicians sell the right to broadcast their music to companies who give listeners affordable access to large quantities of music.  Some musicians who have been selling their music for many years are displeased with the new model and have seen decreased revenue.  Yet, musicians as a whole are making more money under the new model than they were previously.\n\nWhich of the following, if true, would most help to reconcile the apparent conflict?'), ('LSATQA', '(A)Some musicians want to make more money than they made under the old model\n\n'), ('LSATQB', '(B)Music producers charge higher fees now, leaving less revenue for musicians\n\n'), ('LSATQC', '(C)A greater number of musicians sell music now than under the old model\n\n'), ('LSATQD', '(D)The new model is not generating as much revenue as it could be generating\n\n'), ('LSATQE', '(E)The old model could be used now and would generate more revenue than the new model\n\n'), ('LSATAs', 'c')])
19.0989 	DATA 	Keypress: return
19.1039 	EXP 	choiceA: color = 'green (named)'
19.1039 	EXP 	conBlank: autoDraw = True
19.1039 	EXP 	TextQuestion: autoDraw = False
19.1039 	EXP 	choiceA: autoDraw = False
19.1039 	EXP 	choiceB: autoDraw = False
19.1039 	EXP 	choiceC: autoDraw = False
19.1039 	EXP 	choiceD: autoDraw = False
19.1039 	EXP 	choiceE: autoDraw = False
19.1039 	EXP 	conBlank: autoDraw = False
19.1039 	EXP 	choiceA: autoDraw = False
19.1039 	EXP 	choiceB: autoDraw = False
19.1039 	EXP 	choiceC: autoDraw = False
19.1039 	EXP 	choiceD: autoDraw = False
19.1039 	EXP 	choiceE: autoDraw = False
19.1039 	EXP 	choiceA: color = 'white (named)'
19.1039 	EXP 	choiceB: color = 'white (named)'
19.1039 	EXP 	choiceC: color = 'white (named)'
19.1039 	EXP 	choiceD: color = 'white (named)'
19.1039 	EXP 	choiceE: color = 'white (named)'
19.1039 	EXP 	TextQuestion: text = 'PLACEHOLDER'
19.1039 	EXP 	choiceA: text = 'QA'
19.1039 	EXP 	choiceB: text = 'QB'
19.1039 	EXP 	choiceC: text = 'QC'
19.1039 	EXP 	choiceD: text = 'QD'
19.1039 	EXP 	choiceE: text = 'QE'
19.1039 	EXP 	TextQuestion: text = "2) Artistic success as an actor is directly dependent on how well an actor has developed his craft. This has been demonstrated by the discovery of a positive relationship between the number of classes taken by an actor and the number of professional productions in which the actor has appeared in the past two years.\n\nEach of the following, if true, cast doubt on the author's argument about artistic success for actors EXCEPT:"
19.1039 	EXP 	choiceA: text = '(A)The figures for the number of classes taken were based solely on information provided by actors.'
19.1039 	EXP 	choiceB: text = '(B)Success as an actor cannot necessarily be judged exclusively by recent credits.'
19.1039 	EXP 	choiceC: text = "(C)For most successful actors, it's not the quantity but the quality of their classes that has helped to develop their craft"
19.1039 	EXP 	choiceD: text = '(D)There is no relationship between the number of professional productions in which an actor has appeared and true artistic success.'
19.1039 	EXP 	choiceE: text = '(E)Most successful actors have taken only a small number of intensive classes.'
19.1039 	EXP 	TextQuestion: autoDraw = True
19.1039 	EXP 	choiceA: autoDraw = True
19.1039 	EXP 	choiceB: autoDraw = True
19.1039 	EXP 	choiceC: autoDraw = True
19.1039 	EXP 	choiceD: autoDraw = True
19.1039 	EXP 	choiceE: autoDraw = True
21.1580 	DATA 	Keypress: b
22.2915 	DATA 	Keypress: escape
22.4476 	EXP 	window1: mouseVisible = True
7.3311 	WARNING 	User requested fullscreen with size [1024  768], but screen is actually [1920, 1200]. Using actual size
8.5358 	EXP 	Created window1 = Window(allowGUI=False, allowStencil=False, args=UNKNOWN, autoLog=True, bitsMode=UNKNOWN, blendMode='avg', color=array([0., 0., 0.]), colorSpace='rgb', fullscr=<method-wrapper '__getattribute__' of attributeSetter object at 0x000002C801382C50>, gamma=None, gammaErrorPolicy='raise', kwargs=UNKNOWN, lms=UNKNOWN, monitor=<psychopy.monitors.calibTools.Monitor object at 0x000002C80126F940>, multiSample=False, name='window1', numSamples=2, pos=[0.0, 0.0], screen=0, size=array([1920, 1200]), stereo=False, units='height', useFBO=True, useRetina=False, viewOri=0.0, viewPos=None, viewScale=None, waitBlanking=True, winType='pyglet')
8.5359 	EXP 	window1: recordFrameIntervals = False
8.7022 	EXP 	window1: recordFrameIntervals = True
8.8861 	EXP 	window1: recordFrameIntervals = False
9.0982 	EXP 	Created instruct = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='instruct', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.4)
9.1179 	EXP 	Created regCue = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='regCue', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='REGULATE', units='height', win=Window(...), wrapWidth=1)
9.1342 	EXP 	Created choiceQ = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.05, italic=False, languageStyle='LTR', name='choiceQ', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.4)
9.1506 	EXP 	Created testChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.04, italic=False, languageStyle='LTR', name='testChoice', opacity=1.0, ori=0, pos=array([-0.41,  0.15]), rgb=array([255., 255., 255.]), text='Practice Standardized Test Questions', units='height', win=Window(...), wrapWidth=1)
9.1568 	EXP 	Created videogameChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.04, italic=False, languageStyle='LTR', name='videogameChoice', opacity=1.0, ori=0, pos=array([0.41, 0.15]), rgb=array([255., 255., 255.]), text='Play a Videogame', units='height', win=Window(...), wrapWidth=1)
9.1690 	EXP 	Created gre = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, image='gre.png', interpolate=True, mask=None, maskParams=None, name='gre', opacity=1.0, ori=0.0, pos=array([-0.41,  0.02]), size=array([0.3  , 0.105]), texRes=128, units='height', win=Window(...))
9.1773 	EXP 	Created gmat = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, image='gmat.png', interpolate=True, mask=None, maskParams=None, name='gmat', opacity=1.0, ori=0.0, pos=array([-0.41, -0.13]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
9.1789 	EXP 	Created lsat = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-6.0, flipHoriz=False, flipVert=False, image='lsat.png', interpolate=True, mask=None, maskParams=None, name='lsat', opacity=1.0, ori=0.0, pos=array([-0.41, -0.27]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
9.2137 	EXP 	Created game = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-7.0, flipHoriz=False, flipVert=False, image='game.png', interpolate=True, mask=None, maskParams=None, name='game', opacity=1.0, ori=0.0, pos=array([ 0.41, -0.19]), size=array([0.4, 0.5]), texRes=128, units='height', win=Window(...))
9.2142 	EXP 	Created blank = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-9.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='blank', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
9.2495 	EXP 	Created testQChoice = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.055, italic=False, languageStyle='LTR', name='testQChoice', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1.3)
9.2590 	EXP 	Created image = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-1.0, flipHoriz=False, flipVert=False, image='gre.png', interpolate=True, mask=None, maskParams=None, name='image', opacity=1.0, ori=0.0, pos=array([0.   , 0.105]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
9.2639 	EXP 	Created image_2 = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, image='gmat.png', interpolate=True, mask=None, maskParams=None, name='image_2', opacity=1.0, ori=0.0, pos=array([ 0.  , -0.05]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
9.2657 	EXP 	Created image_3 = ImageStim(__class__=<class 'psychopy.visual.image.ImageStim'>, autoLog=True, color=array([1., 1., 1.]), colorSpace='rgb', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, image='lsat.png', interpolate=True, mask=None, maskParams=None, name='image_3', opacity=1.0, ori=0.0, pos=array([ 0. , -0.2]), size=array([0.3 , 0.11]), texRes=128, units='height', win=Window(...))
9.2676 	EXP 	Created polygon = Rect(__class__=<class 'psychopy.visual.rect.Rect'>, autoDraw=False, autoLog=True, closeShape=True, color=method-wrapper(...), colorSpace=None, contrast=1.0, depth=-5.0, fillColor=None, fillColorSpace='rgb', fillRGB=None, interpolate=True, lineColor=array([-1., -1., -1.]), lineColorSpace='rgb', lineRGB=array([-1., -1., -1.]), lineWidth=1.0, name='polygon', opacity=1.0, ori=array(1.), pos=array([0., 0.]), size=array([1., 1.]), units='height', vertices=ndarray(...), win=Window(...))
9.2803 	EXP 	Created TextQuestion = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.028, italic=False, languageStyle='LTR', name='TextQuestion', opacity=1.0, ori=0, pos=array([0.  , 0.35]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.45)
9.2890 	EXP 	Created choiceA = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-3.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceA', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
9.2921 	EXP 	Created choiceB = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-4.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceB', opacity=1.0, ori=0, pos=array([ 0. , -0.1]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
9.2961 	EXP 	Created choiceC = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-5.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceC', opacity=1.0, ori=0, pos=array([ 0. , -0.2]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
9.2992 	EXP 	Created choiceD = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-6.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceD', opacity=1.0, ori=0, pos=array([ 0. , -0.3]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
9.3022 	EXP 	Created choiceE = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-7.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.026, italic=False, languageStyle='LTR', name='choiceE', opacity=1.0, ori=0, pos=array([ 0. , -0.4]), rgb=array([255., 255., 255.]), text='default text', units='height', win=Window(...), wrapWidth=1.4)
9.3027 	EXP 	Created conBlank = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=-9.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.1, italic=False, languageStyle='LTR', name='conBlank', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text='', units='height', win=Window(...), wrapWidth=1)
9.3814 	EXP 	Created text = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz='center', alignVert='center', antialias=True, autoLog=True, bold=False, color='white', colorSpace='named', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Arial', fontFiles=[], height=0.07, italic=False, languageStyle='LTR', name='text', opacity=1.0, ori=0, pos=array([0., 0.]), rgb=array([255., 255., 255.]), text=str(...), units='height', win=Window(...), wrapWidth=1)
9.4127 	EXP 	instruct: autoDraw = True
10.4241 	EXP 	Created sequence: random, trialTypes=1, nReps=5, seed=None
10.4243 	EXP 	New trial (rep=0, index=0): None
10.4302 	DATA 	Keypress: space
10.4369 	EXP 	instruct: autoDraw = False
10.4369 	EXP 	regCue: autoDraw = True
13.4884 	EXP 	regCue: autoDraw = False
13.4884 	EXP 	regCue: autoDraw = False
13.4884 	EXP 	blank: text = ''
13.4884 	EXP 	choiceQ: autoDraw = True
13.4884 	EXP 	testChoice: autoDraw = True
13.4884 	EXP 	videogameChoice: autoDraw = True
13.4884 	EXP 	gre: autoDraw = True
13.4884 	EXP 	gmat: autoDraw = True
13.4884 	EXP 	lsat: autoDraw = True
13.4884 	EXP 	game: autoDraw = True
14.3783 	DATA 	Keypress: 1
14.3908 	EXP 	testChoice: color = 'green (named)'
14.3908 	EXP 	blank: autoDraw = True
14.4065 	EXP 	testChoice: color = 'green (named)'
14.4232 	EXP 	testChoice: color = 'green (named)'
14.4399 	EXP 	testChoice: color = 'green (named)'
14.4566 	EXP 	testChoice: color = 'green (named)'
14.4739 	EXP 	testChoice: color = 'green (named)'
14.4920 	EXP 	testChoice: color = 'green (named)'
14.5069 	EXP 	testChoice: color = 'green (named)'
14.5234 	EXP 	testChoice: color = 'green (named)'
14.5404 	EXP 	testChoice: color = 'green (named)'
14.5567 	EXP 	testChoice: color = 'green (named)'
14.5734 	EXP 	testChoice: color = 'green (named)'
14.5900 	EXP 	testChoice: color = 'green (named)'
14.6071 	EXP 	testChoice: color = 'green (named)'
14.6234 	EXP 	testChoice: color = 'green (named)'
14.6399 	EXP 	testChoice: color = 'green (named)'
14.6570 	EXP 	testChoice: color = 'green (named)'
14.6739 	EXP 	testChoice: color = 'green (named)'
14.6903 	EXP 	testChoice: color = 'green (named)'
14.7069 	EXP 	testChoice: color = 'green (named)'
14.7238 	EXP 	testChoice: color = 'green (named)'
14.7406 	EXP 	testChoice: color = 'green (named)'
14.7571 	EXP 	testChoice: color = 'green (named)'
14.7738 	EXP 	testChoice: color = 'green (named)'
14.7905 	EXP 	testChoice: color = 'green (named)'
14.8070 	EXP 	testChoice: color = 'green (named)'
14.8238 	EXP 	testChoice: color = 'green (named)'
14.8404 	EXP 	testChoice: color = 'green (named)'
14.8572 	EXP 	testChoice: color = 'green (named)'
14.8739 	EXP 	testChoice: color = 'green (named)'
14.8907 	EXP 	testChoice: color = 'green (named)'
14.9072 	EXP 	testChoice: color = 'green (named)'
14.9239 	EXP 	testChoice: color = 'green (named)'
14.9406 	EXP 	testChoice: color = 'green (named)'
14.9575 	EXP 	testChoice: color = 'green (named)'
14.9739 	EXP 	testChoice: color = 'green (named)'
14.9907 	EXP 	testChoice: color = 'green (named)'
15.0073 	EXP 	testChoice: color = 'green (named)'
15.0239 	EXP 	testChoice: color = 'green (named)'
15.0407 	EXP 	testChoice: color = 'green (named)'
15.0575 	EXP 	testChoice: color = 'green (named)'
15.0741 	EXP 	testChoice: color = 'green (named)'
15.0909 	EXP 	testChoice: color = 'green (named)'
15.1075 	EXP 	testChoice: color = 'green (named)'
15.1241 	EXP 	testChoice: color = 'green (named)'
15.1410 	EXP 	testChoice: color = 'green (named)'
15.1580 	EXP 	testChoice: color = 'green (named)'
15.1740 	EXP 	testChoice: color = 'green (named)'
15.1907 	EXP 	testChoice: color = 'green (named)'
15.2076 	EXP 	testChoice: color = 'green (named)'
15.2244 	EXP 	testChoice: color = 'green (named)'
15.2410 	EXP 	testChoice: color = 'green (named)'
15.2577 	EXP 	testChoice: color = 'green (named)'
15.2741 	EXP 	testChoice: color = 'green (named)'
15.2907 	EXP 	testChoice: color = 'green (named)'
15.3076 	EXP 	testChoice: color = 'green (named)'
15.3244 	EXP 	testChoice: color = 'green (named)'
15.3410 	EXP 	testChoice: color = 'green (named)'
15.3578 	EXP 	testChoice: color = 'green (named)'
15.3743 	EXP 	testChoice: color = 'green (named)'
15.3911 	EXP 	testChoice: color = 'green (named)'
15.4074 	EXP 	testChoice: color = 'green (named)'
15.4243 	EXP 	testChoice: color = 'green (named)'
15.4406 	EXP 	testChoice: color = 'green (named)'
15.4578 	EXP 	testChoice: color = 'green (named)'
15.4747 	EXP 	testChoice: color = 'green (named)'
15.4909 	EXP 	testChoice: color = 'green (named)'
15.5078 	EXP 	testChoice: color = 'green (named)'
15.5244 	EXP 	testChoice: color = 'green (named)'
15.5410 	EXP 	testChoice: color = 'green (named)'
15.5577 	EXP 	testChoice: color = 'green (named)'
15.5743 	EXP 	testChoice: color = 'green (named)'
15.5910 	EXP 	testChoice: color = 'green (named)'
15.6077 	EXP 	testChoice: color = 'green (named)'
15.6243 	EXP 	testChoice: color = 'green (named)'
15.6413 	EXP 	testChoice: color = 'green (named)'
15.6577 	EXP 	testChoice: color = 'green (named)'
15.6745 	EXP 	testChoice: color = 'green (named)'
15.6910 	EXP 	testChoice: color = 'green (named)'
15.7080 	EXP 	testChoice: color = 'green (named)'
15.7247 	EXP 	testChoice: color = 'green (named)'
15.7413 	EXP 	testChoice: color = 'green (named)'
15.7580 	EXP 	testChoice: color = 'green (named)'
15.7747 	EXP 	testChoice: color = 'green (named)'
15.7913 	EXP 	testChoice: color = 'green (named)'
15.8080 	EXP 	testChoice: color = 'green (named)'
15.8246 	EXP 	testChoice: color = 'green (named)'
15.8413 	EXP 	testChoice: color = 'green (named)'
15.8579 	EXP 	testChoice: color = 'green (named)'
15.8748 	EXP 	testChoice: color = 'green (named)'
15.8914 	EXP 	testChoice: color = 'green (named)'
15.8914 	EXP 	blank: autoDraw = False
15.9218 	EXP 	Imported RowsExcel.xlsx as conditions, 5 conditions, 1 params
15.9220 	EXP 	Created sequence: random, trialTypes=5, nReps=1, seed=None
15.9222 	EXP 	New trial (rep=0, index=0): OrderedDict([('Rows', '005:0010')])
15.9318 	EXP 	choiceQ: autoDraw = False
15.9318 	EXP 	testChoice: autoDraw = False
15.9318 	EXP 	videogameChoice: autoDraw = False
15.9318 	EXP 	gre: autoDraw = False
15.9318 	EXP 	gmat: autoDraw = False
15.9318 	EXP 	lsat: autoDraw = False
15.9318 	EXP 	game: autoDraw = False
15.9318 	EXP 	testChoice: color = 'green (named)'
15.9318 	EXP 	choiceQ: autoDraw = False
15.9318 	EXP 	testChoice: autoDraw = False
15.9318 	EXP 	videogameChoice: autoDraw = False
15.9318 	EXP 	gre: autoDraw = False
15.9318 	EXP 	gmat: autoDraw = False
15.9318 	EXP 	lsat: autoDraw = False
15.9318 	EXP 	game: autoDraw = False
15.9318 	EXP 	blank: autoDraw = False
15.9318 	EXP 	videogameChoice: color = 'white (named)'
15.9318 	EXP 	testChoice: color = 'white (named)'
15.9318 	EXP 	choiceQ: autoDraw = False
15.9318 	EXP 	testChoice: autoDraw = False
15.9318 	EXP 	videogameChoice: autoDraw = False
15.9318 	EXP 	gre: autoDraw = False
15.9318 	EXP 	gmat: autoDraw = False
15.9318 	EXP 	lsat: autoDraw = False
15.9318 	EXP 	polygon: opacity = 1.0
15.9318 	EXP 	polygon: size = array([0.32, 0.13])
15.9318 	EXP 	polygon: ori = 0.0
15.9318 	EXP 	polygon: lineWidth = 8.0
15.9318 	EXP 	testQChoice: autoDraw = True
15.9318 	EXP 	image: autoDraw = True
15.9318 	EXP 	image_2: autoDraw = True
15.9318 	EXP 	image_3: autoDraw = True
16.8987 	DATA 	Keypress: 1
16.9259 	EXP 	polygon: autoDraw = True
17.9651 	EXP 	Imported QuestionsText.xlsx as conditions, 5 conditions, 21 params
17.9652 	EXP 	Created sequence: sequential, trialTypes=5, nReps=1, seed=None
17.9656 	EXP 	New trial (rep=0, index=0): OrderedDict([('GMAT', '1)\xa0The National Farm Administration (NFA) has been concerned over the last decade with the struggles of barley growers.\nPlan: In an effort to support these barley growers, two years ago, the NFA began a program of sending them, each autumn, a free special mix of fertilizer and enzymes designed to multiply barley yield, to be applied the following spring during first growth. \xa0This mix had been stunningly successful in multiplying the yield of barley in laboratory conditions.\nResults: Most barley growers reported little change in their economic status over this two year period.\n\nFurther information: All barley growers received the shipments, and all used them. \xa0Weather conditions have been fair to optimal for barley growth over the past two years.\n\nIn light of the further information, which of the following, if true, does most to explain the result that followed the implementation of the plan?'), ('GMATQA', '(A) During these two years, most of the barley growers reported using no other fertilizer besides the special mix sent by the government'), ('GMATQB', '(B) The trucks that drove the special mix from the depot in Wisconsin to the individual farms sometime took as much as 4 or 5 days.'), ('GMATQC', '(C) Some of the enzymes in the special mix multiply the growth of a bacteria that feeds on the young barley plants.'), ('GMATQD', '(D) This program was implemented at a time when more than half of barley growers nationwide were reported barely breaking even in their yearly expenses.'), ('GMATQE', '(E) This was the second such NFA program to aid barley growers; the first one, 14 years ago, was started with high hopes, but did little to change their situation.'), ('GMATAs', 'c'), ('GRE', '1) The Green Peas Grocery Store in the remote wealthy enclave of Luxville charges more than the Green Peas Grocery Store in Oak City charges for the same items. Clearly, on any given item, the Green Peas grocery franchise is taking advantage of its location in Luxville to reap higher profits on that item.\n\nIn evaluating the argument, it would be most useful to compare'), ('GREQA', '(A) the selection of specialty items in the Oak City location with the selection of specialty items in the Luxville location.'), ('GREQB', '(B)the cost of transporting merchandise to the Oak City location with the comparable cost to the Luxville location.'), ('GREQC', '(C) the average cost of the same or comparable items at other grocery stores in Oak City with the average cost at other stores in Luxville.'), ('GREQD', '(D)the percent of average household income spent on groceries in Oak City with the comparable percentage in Luxville.'), ('GREQE', '(E) the cost of these items in Oak City and in Luxville with the cost at other Green Peas stores throughout the state.'), ('GREA', 'b'), ('LSAT', '1)Several critics have claimed that any contemporary poet who writes formal poetry—poetry that is rhymed and metered—is performing a politically conservative act. This is plainly false. Consider Molly Peacock and Marilyn Hacker, two contemporary poets whose poetry is almost exclusively formal and yet who are themselves politically progressive feminists.\n\nThe conclusion drawn above follows logically if which one of the following is assumed?'), ('LSATQA', '(A) No one who is a feminist is also politically conservative.'), ('LSATQB', '(B)No poet who writes unrhymed or unmetered poetry is politically conservative.'), ('LSATQC', '(C)No one who is politically progressive is capable of performing a politically conservative act'), ('LSATQD', '(D)Anyone who sometimes writes poetry that is not politically conservative never writes poetry that is politically conservative.'), ('LSATQE', '(E)The content of a poet’s work, not the work’s form, is the most decisive factor in determining what political consequences, if any, the work will have.'), ('LSATAs', 'c')])
18.0824 	DATA 	Keypress: return
18.0873 	EXP 	testQChoice: autoDraw = False
18.0873 	EXP 	image: autoDraw = False
18.0873 	EXP 	image_2: autoDraw = False
18.0873 	EXP 	image_3: autoDraw = False
18.0873 	EXP 	polygon: autoDraw = False
18.0873 	EXP 	TextQuestion: text = 'PLACEHOLDER'
18.0873 	EXP 	choiceA: text = 'QA'
18.0873 	EXP 	choiceB: text = 'QB'
18.0873 	EXP 	choiceC: text = 'QC'
18.0873 	EXP 	choiceD: text = 'QD'
18.0873 	EXP 	choiceE: text = 'QE'
18.0873 	EXP 	TextQuestion: text = '1) The Green Peas Grocery Store in the remote wealthy enclave of Luxville charges more than the Green Peas Grocery Store in Oak City charges for the same items. Clearly, on any given item, the Green Peas grocery franchise is taking advantage of its location in Luxville to reap higher profits on that item.\n\nIn evaluating the argument, it would be most useful to compare'
18.0873 	EXP 	choiceA: text = '(A) the selection of specialty items in the Oak City location with the selection of specialty items in the Luxville location.'
18.0873 	EXP 	choiceB: text = '(B)the cost of transporting merchandise to the Oak City location with the comparable cost to the Luxville location.'
18.0873 	EXP 	choiceC: text = '(C) the average cost of the same or comparable items at other grocery stores in Oak City with the average cost at other stores in Luxville.'
18.0873 	EXP 	choiceD: text = '(D)the percent of average household income spent on groceries in Oak City with the comparable percentage in Luxville.'
18.0873 	EXP 	choiceE: text = '(E) the cost of these items in Oak City and in Luxville with the cost at other Green Peas stores throughout the state.'
18.0873 	EXP 	TextQuestion: autoDraw = True
18.0873 	EXP 	choiceA: autoDraw = True
18.0873 	EXP 	choiceB: autoDraw = True
18.0873 	EXP 	choiceC: autoDraw = True
18.0873 	EXP 	choiceD: autoDraw = True
18.0873 	EXP 	choiceE: autoDraw = True
22.4532 	DATA 	Keypress: a
23.8717 	DATA 	Keypress: return
23.8814 	EXP 	choiceA: color = 'green (named)'
23.8814 	EXP 	conBlank: autoDraw = True
23.8984 	EXP 	choiceA: color = 'green (named)'
23.9149 	EXP 	choiceA: color = 'green (named)'
23.9315 	EXP 	choiceA: color = 'green (named)'
23.9484 	EXP 	choiceA: color = 'green (named)'
23.9650 	EXP 	choiceA: color = 'green (named)'
23.9816 	EXP 	choiceA: color = 'green (named)'
23.9982 	EXP 	choiceA: color = 'green (named)'
24.0148 	EXP 	choiceA: color = 'green (named)'
24.0316 	EXP 	choiceA: color = 'green (named)'
24.0484 	EXP 	choiceA: color = 'green (named)'
24.0651 	EXP 	choiceA: color = 'green (named)'
24.0818 	EXP 	choiceA: color = 'green (named)'
24.0987 	EXP 	choiceA: color = 'green (named)'
24.1150 	EXP 	choiceA: color = 'green (named)'
24.1316 	EXP 	choiceA: color = 'green (named)'
24.1484 	EXP 	choiceA: color = 'green (named)'
24.1651 	EXP 	choiceA: color = 'green (named)'
24.1816 	EXP 	choiceA: color = 'green (named)'
24.1986 	EXP 	choiceA: color = 'green (named)'
24.2151 	EXP 	choiceA: color = 'green (named)'
24.2319 	EXP 	choiceA: color = 'green (named)'
24.2484 	EXP 	choiceA: color = 'green (named)'
24.2651 	EXP 	choiceA: color = 'green (named)'
24.2817 	EXP 	choiceA: color = 'green (named)'
24.2986 	EXP 	choiceA: color = 'green (named)'
24.3154 	EXP 	choiceA: color = 'green (named)'
24.3319 	EXP 	choiceA: color = 'green (named)'
24.3488 	EXP 	choiceA: color = 'green (named)'
24.3651 	EXP 	choiceA: color = 'green (named)'
24.3818 	EXP 	choiceA: color = 'green (named)'
24.3986 	EXP 	choiceA: color = 'green (named)'
24.4147 	EXP 	choiceA: color = 'green (named)'
24.4320 	EXP 	choiceA: color = 'green (named)'
24.4484 	EXP 	choiceA: color = 'green (named)'
24.4652 	EXP 	choiceA: color = 'green (named)'
24.4817 	EXP 	choiceA: color = 'green (named)'
24.4985 	EXP 	choiceA: color = 'green (named)'
24.5152 	EXP 	choiceA: color = 'green (named)'
24.5317 	EXP 	choiceA: color = 'green (named)'
24.5484 	EXP 	choiceA: color = 'green (named)'
24.5655 	EXP 	choiceA: color = 'green (named)'
24.5817 	EXP 	choiceA: color = 'green (named)'
24.5984 	EXP 	choiceA: color = 'green (named)'
24.6153 	EXP 	choiceA: color = 'green (named)'
24.6323 	EXP 	choiceA: color = 'green (named)'
24.6491 	EXP 	choiceA: color = 'green (named)'
24.6658 	EXP 	choiceA: color = 'green (named)'
24.6822 	EXP 	choiceA: color = 'green (named)'
24.6989 	EXP 	choiceA: color = 'green (named)'
24.7154 	EXP 	choiceA: color = 'green (named)'
24.7322 	EXP 	choiceA: color = 'green (named)'
24.7491 	EXP 	choiceA: color = 'green (named)'
24.7657 	EXP 	choiceA: color = 'green (named)'
24.7831 	EXP 	choiceA: color = 'green (named)'
24.7989 	EXP 	choiceA: color = 'green (named)'
24.8155 	EXP 	choiceA: color = 'green (named)'
24.8325 	EXP 	choiceA: color = 'green (named)'
24.8491 	EXP 	choiceA: color = 'green (named)'
24.8658 	EXP 	choiceA: color = 'green (named)'
24.8824 	EXP 	choiceA: color = 'green (named)'
24.8989 	EXP 	choiceA: color = 'green (named)'
24.9157 	EXP 	choiceA: color = 'green (named)'
24.9323 	EXP 	choiceA: color = 'green (named)'
24.9491 	EXP 	choiceA: color = 'green (named)'
24.9660 	EXP 	choiceA: color = 'green (named)'
24.9823 	EXP 	choiceA: color = 'green (named)'
24.9994 	EXP 	choiceA: color = 'green (named)'
25.0159 	EXP 	choiceA: color = 'green (named)'
25.0324 	EXP 	choiceA: color = 'green (named)'
25.0494 	EXP 	choiceA: color = 'green (named)'
25.0657 	EXP 	choiceA: color = 'green (named)'
25.0825 	EXP 	choiceA: color = 'green (named)'
25.0992 	EXP 	choiceA: color = 'green (named)'
25.1164 	EXP 	choiceA: color = 'green (named)'
25.1325 	EXP 	choiceA: color = 'green (named)'
25.1492 	EXP 	choiceA: color = 'green (named)'
25.1657 	EXP 	choiceA: color = 'green (named)'
25.1825 	EXP 	choiceA: color = 'green (named)'
25.1994 	EXP 	choiceA: color = 'green (named)'
25.2160 	EXP 	choiceA: color = 'green (named)'
25.2327 	EXP 	choiceA: color = 'green (named)'
25.2493 	EXP 	choiceA: color = 'green (named)'
25.2659 	EXP 	choiceA: color = 'green (named)'
25.2826 	EXP 	choiceA: color = 'green (named)'
25.2995 	EXP 	choiceA: color = 'green (named)'
25.3160 	EXP 	choiceA: color = 'green (named)'
25.3328 	EXP 	choiceA: color = 'green (named)'
25.3495 	EXP 	choiceA: color = 'green (named)'
25.3662 	EXP 	choiceA: color = 'green (named)'
25.3829 	EXP 	choiceA: color = 'green (named)'
25.3829 	EXP 	conBlank: autoDraw = False
25.3996 	EXP 	choiceA: color = 'green (named)'
25.4158 	EXP 	choiceA: color = 'green (named)'
25.4327 	EXP 	choiceA: color = 'green (named)'
25.4493 	EXP 	choiceA: color = 'green (named)'
25.4663 	EXP 	choiceA: color = 'green (named)'
25.4828 	EXP 	choiceA: color = 'green (named)'
25.4997 	EXP 	choiceA: color = 'green (named)'
25.5159 	EXP 	choiceA: color = 'green (named)'
25.5328 	EXP 	choiceA: color = 'green (named)'
25.5496 	EXP 	choiceA: color = 'green (named)'
25.5663 	EXP 	choiceA: color = 'green (named)'
25.5827 	EXP 	choiceA: color = 'green (named)'
25.5996 	EXP 	choiceA: color = 'green (named)'
25.6160 	EXP 	choiceA: color = 'green (named)'
25.6330 	EXP 	choiceA: color = 'green (named)'
25.6495 	EXP 	choiceA: color = 'green (named)'
25.6661 	EXP 	choiceA: color = 'green (named)'
25.6828 	EXP 	choiceA: color = 'green (named)'
25.6997 	EXP 	choiceA: color = 'green (named)'
25.7164 	EXP 	choiceA: color = 'green (named)'
25.7331 	EXP 	choiceA: color = 'green (named)'
25.7498 	EXP 	choiceA: color = 'green (named)'
25.7669 	EXP 	choiceA: color = 'green (named)'
25.7830 	EXP 	choiceA: color = 'green (named)'
25.7997 	EXP 	choiceA: color = 'green (named)'
25.8163 	EXP 	choiceA: color = 'green (named)'
25.8337 	EXP 	choiceA: color = 'green (named)'
25.8498 	EXP 	choiceA: color = 'green (named)'
25.8666 	EXP 	choiceA: color = 'green (named)'
25.8830 	EXP 	choiceA: color = 'green (named)'
25.8999 	EXP 	choiceA: color = 'green (named)'
25.9167 	EXP 	choiceA: color = 'green (named)'
25.9334 	EXP 	choiceA: color = 'green (named)'
25.9500 	EXP 	choiceA: color = 'green (named)'
25.9663 	EXP 	choiceA: color = 'green (named)'
25.9835 	EXP 	choiceA: color = 'green (named)'
26.0000 	EXP 	choiceA: color = 'green (named)'
26.0166 	EXP 	choiceA: color = 'green (named)'
26.0333 	EXP 	choiceA: color = 'green (named)'
26.0501 	EXP 	choiceA: color = 'green (named)'
26.0667 	EXP 	choiceA: color = 'green (named)'
26.0831 	EXP 	choiceA: color = 'green (named)'
26.1000 	EXP 	choiceA: color = 'green (named)'
26.1167 	EXP 	choiceA: color = 'green (named)'
26.1331 	EXP 	choiceA: color = 'green (named)'
26.1501 	EXP 	choiceA: color = 'green (named)'
26.1669 	EXP 	choiceA: color = 'green (named)'
26.1834 	EXP 	choiceA: color = 'green (named)'
26.2002 	EXP 	choiceA: color = 'green (named)'
26.2167 	EXP 	choiceA: color = 'green (named)'
26.2332 	EXP 	choiceA: color = 'green (named)'
26.2500 	EXP 	choiceA: color = 'green (named)'
26.2667 	EXP 	choiceA: color = 'green (named)'
26.2833 	EXP 	choiceA: color = 'green (named)'
26.3002 	EXP 	choiceA: color = 'green (named)'
26.3169 	EXP 	choiceA: color = 'green (named)'
26.3335 	EXP 	choiceA: color = 'green (named)'
26.3500 	EXP 	choiceA: color = 'green (named)'
26.3670 	EXP 	choiceA: color = 'green (named)'
26.3833 	EXP 	choiceA: color = 'green (named)'
26.4002 	EXP 	choiceA: color = 'green (named)'
26.4168 	EXP 	choiceA: color = 'green (named)'
26.4335 	EXP 	choiceA: color = 'green (named)'
26.4501 	EXP 	choiceA: color = 'green (named)'
26.4671 	EXP 	choiceA: color = 'green (named)'
26.4836 	EXP 	choiceA: color = 'green (named)'
26.5002 	EXP 	choiceA: color = 'green (named)'
26.5168 	EXP 	choiceA: color = 'green (named)'
26.5344 	EXP 	choiceA: color = 'green (named)'
26.5502 	EXP 	choiceA: color = 'green (named)'
26.5669 	EXP 	choiceA: color = 'green (named)'
26.5835 	EXP 	choiceA: color = 'green (named)'
26.6006 	EXP 	choiceA: color = 'green (named)'
26.6170 	EXP 	choiceA: color = 'green (named)'
26.6338 	EXP 	choiceA: color = 'green (named)'
26.6509 	EXP 	choiceA: color = 'green (named)'
26.6669 	EXP 	choiceA: color = 'green (named)'
26.6837 	EXP 	choiceA: color = 'green (named)'
26.7004 	EXP 	choiceA: color = 'green (named)'
26.7169 	EXP 	choiceA: color = 'green (named)'
26.7337 	EXP 	choiceA: color = 'green (named)'
26.7505 	EXP 	choiceA: color = 'green (named)'
26.7672 	EXP 	choiceA: color = 'green (named)'
26.7836 	EXP 	choiceA: color = 'green (named)'
26.8006 	EXP 	choiceA: color = 'green (named)'
26.8173 	EXP 	choiceA: color = 'green (named)'
26.8339 	EXP 	choiceA: color = 'green (named)'
26.8509 	EXP 	choiceA: color = 'green (named)'
26.8673 	EXP 	choiceA: color = 'green (named)'
26.8842 	EXP 	choiceA: color = 'green (named)'
26.9008 	EXP 	choiceA: color = 'green (named)'
26.9173 	EXP 	choiceA: color = 'green (named)'
26.9341 	EXP 	choiceA: color = 'green (named)'
26.9506 	EXP 	choiceA: color = 'green (named)'
26.9675 	EXP 	choiceA: color = 'green (named)'
26.9843 	EXP 	choiceA: color = 'green (named)'
27.0008 	EXP 	choiceA: color = 'green (named)'
27.0173 	EXP 	choiceA: color = 'green (named)'
27.0342 	EXP 	choiceA: color = 'green (named)'
27.0509 	EXP 	choiceA: color = 'green (named)'
27.0675 	EXP 	choiceA: color = 'green (named)'
27.0850 	EXP 	choiceA: color = 'green (named)'
27.1008 	EXP 	choiceA: color = 'green (named)'
27.1173 	EXP 	choiceA: color = 'green (named)'
27.1340 	EXP 	choiceA: color = 'green (named)'
27.1508 	EXP 	choiceA: color = 'green (named)'
27.1676 	EXP 	choiceA: color = 'green (named)'
27.1841 	EXP 	choiceA: color = 'green (named)'
27.2009 	EXP 	choiceA: color = 'green (named)'
27.2177 	EXP 	choiceA: color = 'green (named)'
27.2344 	EXP 	choiceA: color = 'green (named)'
27.2508 	EXP 	choiceA: color = 'green (named)'
27.2677 	EXP 	choiceA: color = 'green (named)'
27.2844 	EXP 	choiceA: color = 'green (named)'
27.3014 	EXP 	choiceA: color = 'green (named)'
27.3178 	EXP 	choiceA: color = 'green (named)'
27.3344 	EXP 	choiceA: color = 'green (named)'
27.3510 	EXP 	choiceA: color = 'green (named)'
27.3678 	EXP 	choiceA: color = 'green (named)'
27.3845 	EXP 	choiceA: color = 'green (named)'
27.4012 	EXP 	choiceA: color = 'green (named)'
27.4177 	EXP 	choiceA: color = 'green (named)'
27.4344 	EXP 	choiceA: color = 'green (named)'
27.4510 	EXP 	choiceA: color = 'green (named)'
27.4677 	EXP 	choiceA: color = 'green (named)'
27.4844 	EXP 	choiceA: color = 'green (named)'
27.5011 	EXP 	choiceA: color = 'green (named)'
27.5178 	EXP 	choiceA: color = 'green (named)'
27.5345 	EXP 	choiceA: color = 'green (named)'
27.5510 	EXP 	choiceA: color = 'green (named)'
27.5680 	EXP 	choiceA: color = 'green (named)'
27.5845 	EXP 	choiceA: color = 'green (named)'
27.6013 	EXP 	choiceA: color = 'green (named)'
27.6179 	EXP 	choiceA: color = 'green (named)'
27.6346 	EXP 	choiceA: color = 'green (named)'
27.6513 	EXP 	choiceA: color = 'green (named)'
27.6677 	EXP 	choiceA: color = 'green (named)'
27.6845 	EXP 	choiceA: color = 'green (named)'
27.7013 	EXP 	choiceA: color = 'green (named)'
27.7180 	EXP 	choiceA: color = 'green (named)'
27.7347 	EXP 	choiceA: color = 'green (named)'
27.7511 	EXP 	choiceA: color = 'green (named)'
27.7681 	EXP 	choiceA: color = 'green (named)'
27.7847 	EXP 	choiceA: color = 'green (named)'
27.8013 	EXP 	choiceA: color = 'green (named)'
27.8179 	EXP 	choiceA: color = 'green (named)'
27.8349 	EXP 	choiceA: color = 'green (named)'
27.8514 	EXP 	choiceA: color = 'green (named)'
27.8680 	EXP 	choiceA: color = 'green (named)'
27.8847 	EXP 	choiceA: color = 'green (named)'
27.9015 	EXP 	choiceA: color = 'green (named)'
27.9182 	EXP 	choiceA: color = 'green (named)'
27.9348 	EXP 	choiceA: color = 'green (named)'
27.9516 	EXP 	choiceA: color = 'green (named)'
27.9683 	EXP 	choiceA: color = 'green (named)'
27.9848 	EXP 	choiceA: color = 'green (named)'
28.0016 	EXP 	choiceA: color = 'green (named)'
28.0181 	EXP 	choiceA: color = 'green (named)'
28.0351 	EXP 	choiceA: color = 'green (named)'
28.0517 	EXP 	choiceA: color = 'green (named)'
28.0689 	EXP 	choiceA: color = 'green (named)'
28.0850 	EXP 	choiceA: color = 'green (named)'
28.1014 	EXP 	choiceA: color = 'green (named)'
28.1184 	EXP 	choiceA: color = 'green (named)'
28.1348 	EXP 	choiceA: color = 'green (named)'
28.1517 	EXP 	choiceA: color = 'green (named)'
28.1684 	EXP 	choiceA: color = 'green (named)'
28.1849 	EXP 	choiceA: color = 'green (named)'
28.2017 	EXP 	choiceA: color = 'green (named)'
28.2183 	EXP 	choiceA: color = 'green (named)'
28.2353 	EXP 	choiceA: color = 'green (named)'
28.2517 	EXP 	choiceA: color = 'green (named)'
28.2694 	EXP 	choiceA: color = 'green (named)'
28.2852 	EXP 	choiceA: color = 'green (named)'
28.3016 	EXP 	choiceA: color = 'green (named)'
28.3185 	EXP 	choiceA: color = 'green (named)'
28.3351 	EXP 	choiceA: color = 'green (named)'
28.3519 	EXP 	choiceA: color = 'green (named)'
28.3687 	EXP 	choiceA: color = 'green (named)'
28.3854 	EXP 	choiceA: color = 'green (named)'
28.4019 	EXP 	choiceA: color = 'green (named)'
28.4185 	EXP 	choiceA: color = 'green (named)'
28.4353 	EXP 	choiceA: color = 'green (named)'
28.4516 	EXP 	choiceA: color = 'green (named)'
28.4683 	EXP 	choiceA: color = 'green (named)'
28.4852 	EXP 	choiceA: color = 'green (named)'
28.5024 	EXP 	choiceA: color = 'green (named)'
28.5187 	EXP 	choiceA: color = 'green (named)'
28.5351 	EXP 	choiceA: color = 'green (named)'
28.5522 	EXP 	choiceA: color = 'green (named)'
28.5683 	EXP 	choiceA: color = 'green (named)'
28.5853 	EXP 	choiceA: color = 'green (named)'
28.6018 	EXP 	choiceA: color = 'green (named)'
28.6190 	EXP 	choiceA: color = 'green (named)'
28.6355 	EXP 	choiceA: color = 'green (named)'
28.6526 	EXP 	choiceA: color = 'green (named)'
28.6685 	EXP 	choiceA: color = 'green (named)'
28.6854 	EXP 	choiceA: color = 'green (named)'
28.7020 	EXP 	choiceA: color = 'green (named)'
28.7188 	EXP 	choiceA: color = 'green (named)'
28.7355 	EXP 	choiceA: color = 'green (named)'
28.7520 	EXP 	choiceA: color = 'green (named)'
28.7689 	EXP 	choiceA: color = 'green (named)'
28.7855 	EXP 	choiceA: color = 'green (named)'
28.8021 	EXP 	choiceA: color = 'green (named)'
28.8189 	EXP 	choiceA: color = 'green (named)'
28.8354 	EXP 	choiceA: color = 'green (named)'
28.8523 	EXP 	choiceA: color = 'green (named)'
28.8688 	EXP 	choiceA: color = 'green (named)'
28.8856 	EXP 	choiceA: color = 'green (named)'
28.9024 	EXP 	choiceA: color = 'green (named)'
28.9190 	EXP 	choiceA: color = 'green (named)'
28.9360 	EXP 	choiceA: color = 'green (named)'
28.9523 	EXP 	choiceA: color = 'green (named)'
28.9689 	EXP 	choiceA: color = 'green (named)'
28.9857 	EXP 	choiceA: color = 'green (named)'
29.0024 	EXP 	choiceA: color = 'green (named)'
29.0193 	EXP 	choiceA: color = 'green (named)'
29.0359 	EXP 	choiceA: color = 'green (named)'
29.0529 	EXP 	choiceA: color = 'green (named)'
29.0694 	EXP 	choiceA: color = 'green (named)'
29.0858 	EXP 	choiceA: color = 'green (named)'
29.1026 	EXP 	choiceA: color = 'green (named)'
29.1196 	EXP 	choiceA: color = 'green (named)'
29.1358 	EXP 	choiceA: color = 'green (named)'
29.1526 	EXP 	choiceA: color = 'green (named)'
29.1691 	EXP 	choiceA: color = 'green (named)'
29.1859 	EXP 	choiceA: color = 'green (named)'
29.2027 	EXP 	choiceA: color = 'green (named)'
29.2193 	EXP 	choiceA: color = 'green (named)'
29.2359 	EXP 	choiceA: color = 'green (named)'
29.2527 	EXP 	choiceA: color = 'green (named)'
29.2702 	EXP 	choiceA: color = 'green (named)'
29.2862 	EXP 	choiceA: color = 'green (named)'
29.3026 	EXP 	choiceA: color = 'green (named)'
29.3194 	EXP 	choiceA: color = 'green (named)'
29.3361 	EXP 	choiceA: color = 'green (named)'
29.3527 	EXP 	choiceA: color = 'green (named)'
29.3694 	EXP 	choiceA: color = 'green (named)'
29.3860 	EXP 	choiceA: color = 'green (named)'
29.4028 	EXP 	choiceA: color = 'green (named)'
29.4195 	EXP 	choiceA: color = 'green (named)'
29.4362 	EXP 	choiceA: color = 'green (named)'
29.4525 	EXP 	choiceA: color = 'green (named)'
29.4694 	EXP 	choiceA: color = 'green (named)'
29.4867 	EXP 	choiceA: color = 'green (named)'
29.5027 	EXP 	choiceA: color = 'green (named)'
29.5193 	EXP 	choiceA: color = 'green (named)'
29.5363 	EXP 	choiceA: color = 'green (named)'
29.5527 	EXP 	choiceA: color = 'green (named)'
29.5696 	EXP 	choiceA: color = 'green (named)'
29.5859 	EXP 	choiceA: color = 'green (named)'
29.6029 	EXP 	choiceA: color = 'green (named)'
29.6196 	EXP 	choiceA: color = 'green (named)'
29.6362 	EXP 	choiceA: color = 'green (named)'
29.6532 	EXP 	choiceA: color = 'green (named)'
29.6696 	EXP 	choiceA: color = 'green (named)'
29.6864 	EXP 	choiceA: color = 'green (named)'
29.7029 	EXP 	choiceA: color = 'green (named)'
29.7198 	EXP 	choiceA: color = 'green (named)'
29.7363 	EXP 	choiceA: color = 'green (named)'
29.7530 	EXP 	choiceA: color = 'green (named)'
29.7698 	EXP 	choiceA: color = 'green (named)'
29.7865 	EXP 	choiceA: color = 'green (named)'
29.8031 	EXP 	choiceA: color = 'green (named)'
29.8198 	EXP 	choiceA: color = 'green (named)'
29.8365 	EXP 	choiceA: color = 'green (named)'
29.8530 	EXP 	choiceA: color = 'green (named)'
29.8698 	EXP 	choiceA: color = 'green (named)'
29.8865 	EXP 	choiceA: color = 'green (named)'
29.9032 	EXP 	choiceA: color = 'green (named)'
29.9199 	EXP 	choiceA: color = 'green (named)'
29.9366 	EXP 	choiceA: color = 'green (named)'
29.9531 	EXP 	choiceA: color = 'green (named)'
29.9700 	EXP 	choiceA: color = 'green (named)'
29.9866 	EXP 	choiceA: color = 'green (named)'
30.0033 	EXP 	choiceA: color = 'green (named)'
30.0199 	EXP 	choiceA: color = 'green (named)'
30.0369 	EXP 	choiceA: color = 'green (named)'
30.0533 	EXP 	choiceA: color = 'green (named)'
30.0699 	EXP 	choiceA: color = 'green (named)'
30.0866 	EXP 	choiceA: color = 'green (named)'
30.1036 	EXP 	choiceA: color = 'green (named)'
30.1200 	EXP 	choiceA: color = 'green (named)'
30.1368 	EXP 	choiceA: color = 'green (named)'
30.1535 	EXP 	choiceA: color = 'green (named)'
30.1701 	EXP 	choiceA: color = 'green (named)'
30.1868 	EXP 	choiceA: color = 'green (named)'
30.2035 	EXP 	choiceA: color = 'green (named)'
30.2201 	EXP 	choiceA: color = 'green (named)'
30.2370 	EXP 	choiceA: color = 'green (named)'
30.2543 	EXP 	choiceA: color = 'green (named)'
30.2703 	EXP 	choiceA: color = 'green (named)'
30.2867 	EXP 	choiceA: color = 'green (named)'
30.3040 	EXP 	choiceA: color = 'green (named)'
30.3202 	EXP 	choiceA: color = 'green (named)'
30.3368 	EXP 	choiceA: color = 'green (named)'
30.3537 	EXP 	choiceA: color = 'green (named)'
30.3701 	EXP 	choiceA: color = 'green (named)'
30.3869 	EXP 	choiceA: color = 'green (named)'
30.4039 	EXP 	choiceA: color = 'green (named)'
30.4200 	EXP 	choiceA: color = 'green (named)'
30.4370 	EXP 	choiceA: color = 'green (named)'
30.4535 	EXP 	choiceA: color = 'green (named)'
30.4715 	EXP 	choiceA: color = 'green (named)'
30.4872 	EXP 	choiceA: color = 'green (named)'
30.5038 	EXP 	choiceA: color = 'green (named)'
30.5202 	EXP 	choiceA: color = 'green (named)'
30.5366 	EXP 	choiceA: color = 'green (named)'
30.5537 	EXP 	choiceA: color = 'green (named)'
30.5703 	EXP 	choiceA: color = 'green (named)'
30.5869 	EXP 	choiceA: color = 'green (named)'
30.6037 	EXP 	choiceA: color = 'green (named)'
30.6207 	EXP 	choiceA: color = 'green (named)'
30.6369 	EXP 	choiceA: color = 'green (named)'
30.6535 	EXP 	choiceA: color = 'green (named)'
30.6705 	EXP 	choiceA: color = 'green (named)'
30.6869 	EXP 	choiceA: color = 'green (named)'
30.7039 	EXP 	choiceA: color = 'green (named)'
30.7204 	EXP 	choiceA: color = 'green (named)'
30.7372 	EXP 	choiceA: color = 'green (named)'
30.7538 	EXP 	choiceA: color = 'green (named)'
30.7705 	EXP 	choiceA: color = 'green (named)'
30.7870 	EXP 	choiceA: color = 'green (named)'
30.8039 	EXP 	choiceA: color = 'green (named)'
30.8205 	EXP 	choiceA: color = 'green (named)'
30.8373 	EXP 	choiceA: color = 'green (named)'
30.8540 	EXP 	choiceA: color = 'green (named)'
30.8706 	EXP 	choiceA: color = 'green (named)'
30.8871 	EXP 	choiceA: color = 'green (named)'
30.9044 	EXP 	choiceA: color = 'green (named)'
30.9208 	EXP 	choiceA: color = 'green (named)'
30.9372 	EXP 	choiceA: color = 'green (named)'
30.9539 	EXP 	choiceA: color = 'green (named)'
30.9706 	EXP 	choiceA: color = 'green (named)'
30.9874 	EXP 	choiceA: color = 'green (named)'
31.0040 	EXP 	choiceA: color = 'green (named)'
31.0216 	EXP 	choiceA: color = 'green (named)'
31.0375 	EXP 	choiceA: color = 'green (named)'
31.0542 	EXP 	choiceA: color = 'green (named)'
31.0709 	EXP 	choiceA: color = 'green (named)'
31.0887 	EXP 	choiceA: color = 'green (named)'
31.1056 	EXP 	choiceA: color = 'green (named)'
31.1227 	EXP 	choiceA: color = 'green (named)'
31.1395 	EXP 	choiceA: color = 'green (named)'
31.1578 	EXP 	choiceA: color = 'green (named)'
31.1742 	EXP 	choiceA: color = 'green (named)'
31.1913 	EXP 	choiceA: color = 'green (named)'
31.2084 	EXP 	choiceA: color = 'green (named)'
31.2270 	EXP 	choiceA: color = 'green (named)'
31.2428 	EXP 	choiceA: color = 'green (named)'
31.2588 	EXP 	choiceA: color = 'green (named)'
31.2751 	EXP 	choiceA: color = 'green (named)'
31.2916 	EXP 	choiceA: color = 'green (named)'
31.3069 	EXP 	choiceA: color = 'green (named)'
31.3211 	EXP 	choiceA: color = 'green (named)'
31.3376 	EXP 	choiceA: color = 'green (named)'
31.3543 	EXP 	choiceA: color = 'green (named)'
31.3712 	EXP 	choiceA: color = 'green (named)'
31.3874 	EXP 	choiceA: color = 'green (named)'
31.4044 	EXP 	choiceA: color = 'green (named)'
31.4209 	EXP 	choiceA: color = 'green (named)'
31.4377 	EXP 	choiceA: color = 'green (named)'
31.4549 	EXP 	choiceA: color = 'green (named)'
31.4710 	EXP 	choiceA: color = 'green (named)'
31.4876 	EXP 	choiceA: color = 'green (named)'
31.5046 	EXP 	choiceA: color = 'green (named)'
31.5209 	EXP 	choiceA: color = 'green (named)'
31.5376 	EXP 	choiceA: color = 'green (named)'
31.5545 	EXP 	choiceA: color = 'green (named)'
31.5711 	EXP 	choiceA: color = 'green (named)'
31.5882 	EXP 	choiceA: color = 'green (named)'
31.6044 	EXP 	choiceA: color = 'green (named)'
31.6215 	EXP 	choiceA: color = 'green (named)'
31.6377 	EXP 	choiceA: color = 'green (named)'
31.6546 	EXP 	choiceA: color = 'green (named)'
31.6714 	EXP 	choiceA: color = 'green (named)'
31.6879 	EXP 	choiceA: color = 'green (named)'
31.7045 	EXP 	choiceA: color = 'green (named)'
31.7213 	EXP 	choiceA: color = 'green (named)'
31.7378 	EXP 	choiceA: color = 'green (named)'
31.7545 	EXP 	choiceA: color = 'green (named)'
31.7713 	EXP 	choiceA: color = 'green (named)'
31.7879 	EXP 	choiceA: color = 'green (named)'
31.8047 	EXP 	choiceA: color = 'green (named)'
31.8213 	EXP 	choiceA: color = 'green (named)'
31.8383 	EXP 	choiceA: color = 'green (named)'
31.8549 	EXP 	choiceA: color = 'green (named)'
31.8716 	EXP 	choiceA: color = 'green (named)'
31.8880 	EXP 	choiceA: color = 'green (named)'
31.9049 	EXP 	choiceA: color = 'green (named)'
31.9216 	EXP 	choiceA: color = 'green (named)'
31.9380 	EXP 	choiceA: color = 'green (named)'
31.9550 	EXP 	choiceA: color = 'green (named)'
31.9716 	EXP 	choiceA: color = 'green (named)'
31.9883 	EXP 	choiceA: color = 'green (named)'
32.0051 	EXP 	choiceA: color = 'green (named)'
32.0217 	EXP 	choiceA: color = 'green (named)'
32.0385 	EXP 	choiceA: color = 'green (named)'
32.0550 	EXP 	choiceA: color = 'green (named)'
32.0716 	EXP 	choiceA: color = 'green (named)'
32.0883 	EXP 	choiceA: color = 'green (named)'
32.1051 	EXP 	choiceA: color = 'green (named)'
32.1217 	EXP 	choiceA: color = 'green (named)'
32.1384 	EXP 	choiceA: color = 'green (named)'
32.1550 	EXP 	choiceA: color = 'green (named)'
32.1717 	EXP 	choiceA: color = 'green (named)'
32.1787 	DATA 	Keypress: escape
32.1885 	EXP 	choiceA: color = 'green (named)'
32.2051 	EXP 	choiceA: color = 'green (named)'
32.2222 	EXP 	choiceA: color = 'green (named)'
32.2387 	EXP 	choiceA: color = 'green (named)'
32.2688 	EXP 	window1: mouseVisible = True
